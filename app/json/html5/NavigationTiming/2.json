{"sta":1,"data":{"subTitle":"利用performance.timing进行性能分析","content":"<pre><code>window.onload = function(){\n  setTimeout(function(){\n    let t = performance.timing\n    console.log('DNS查询耗时 ：' + (t.domainLookupEnd - t.domainLookupStart).toFixed(0))\n    console.log('TCP链接耗时 ：' + (t.connectEnd - t.connectStart).toFixed(0))\n    console.log('request请求耗时 ：' + (t.responseEnd - t.responseStart).toFixed(0))\n    console.log('解析dom树耗时 ：' + (t.domComplete - t.domInteractive).toFixed(0))\n    console.log('白屏时间 ：' + (t.responseStart - t.navigationStart).toFixed(0))\n    console.log('domready时间 ：' + (t.domContentLoadedEventEnd - t.navigationStart).toFixed(0))\n    console.log('onload时间 ：' + (t.loadEventEnd - t.navigationStart).toFixed(0))\n \n    if(t = performance.memory){\n      console.log('js内存使用占比 ：' + (t.usedJSHeapSize / t.totalJSHeapSize * 100).toFixed(2) + '%')\n    }\n  })\n}</code></pre><p><br></p>"}}