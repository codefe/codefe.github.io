{"sta":1,"data":{"subTitle":"svg foreignObject的作用（文本换行，生成图片）","content":"<h3>SVG内部利用foreignObject嵌入XHTML元素</h3><p>&lt;foreignObject&gt;元素的作用是可以在其中使用具有其它XML命名空间的XML元素，换句话说借助&lt;foreignObject&gt;标签，我们可以直接在SVG内部嵌入XHTML元素，举个简单的例子：</p><pre>&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;\n  &lt;foreignObject width=\"120\" height=\"50\"&gt;\n      &lt;body xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n        &lt;p&gt;文字。&lt;/p&gt;\n      &lt;/body&gt;\n    &lt;/foreignObject&gt;\n&lt;/svg&gt;</pre><p>可以看到&lt;foreignObject&gt;标签里面有一个设置了xmlns=\"http://www.w3.org/1999/xhtml\"命名空间的&lt;body&gt;标签，此时&lt;body&gt;标签及其子标签都会按照XHTML标准渲染，实现了SVG和XHTML的混合使用。</p><p><h3>SVG forginObject实现文本自动换行\n</h3>SVG要实现文本换行，往往需要手动阻断，类似下面的代码：</p><pre>&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;\n  &lt;text font-size=\"12\"&gt;\n    &lt;tspan x=\"0\" y=\"10\"&gt;一段需要word wrap&lt;/tspan&gt;\n    &lt;tspan x=\"0\" y=\"26\"&gt;的文字。&lt;/tspan&gt;\n  &lt;/text&gt;\n&lt;/svg&gt;</pre><p>需要2个&lt;tspan&gt;元素，这一点都不工程。虽然Chrome浏览器可以对&lt;text&gt;标签进行white-space:normal的强制设置，但也只是Chrome浏览器可以。\n<br>\n<br>但是如果使用&lt;foreignObject&gt;元素，则自动换行就是小菜：</p><pre>&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;\n  &lt;foreignObject width=\"120\" height=\"50\"&gt;\n      &lt;body xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n        &lt;p style=\"font-size:12px;margin:0;\"&gt;一段需要word wrap的文字。&lt;/p&gt;\n      &lt;/body&gt;\n    &lt;/foreignObject&gt;\n&lt;/svg&gt;</pre><p>\n<br><h3>SVG forginObject生成图片\n</h3>除了轻松实现文本换行，SVG &lt;foreignObject&gt;元素还有其他更高级的应用，就是可以将页面上的DOM元素轻松变成图片，原理如下：\n<br>\n<br>获取对应DOM元素的outerHTML代码；\n<br>放在&lt;foreignObject&gt;元素中；\n<br>图片方式显示我们的SVG图形，例如：\n<br><blockquote>&lt;img width=\"300\" height=\"150\" src='data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;&lt;foreignObject width=\"120\" height=\"50\"&gt;&lt;body xmlns=\"http://www.w3.org/1999/xhtml\"&gt;&lt;p style=\"font-size:12px;margin:0;\"&gt;一段需要word wrap的文字。&lt;/p&gt;&lt;/body&gt;&lt;/foreignObject&gt;&lt;/svg&gt;'&gt;\n</blockquote>上一步的图片本质还是SVG，我们可以借助canvas drawImage()方法将图片放在画布上，然后使用canvas.toDataURL()方法转换成png或jpg图片，核心代码：\n<br><blockquote>var canvas = document.createElement('canvas');<br>\nvar context = canvas.getContext('2d');<br>\ncanvas.drawImage(img, 0, 0);<br>\nimg.src = canvas.toDataURL('image/png');\n</blockquote>一旦我们可以把DOM元素转换成图片，我们就可以轻轻松松配合JS在前端实现网页截图功能。\n<br><br>之前项目中有将highcharts.js的表格转换成图片，代码如下：</p><pre>private generateTable(chartSetting: Core.ChartConfig) {\n            if (chartSetting.firstColColor.toLocaleLowerCase() == \"rgb(255,255,254)\") {\n                chartSetting.firstColColor = chartSetting.bgColor;\n            }\n            if (chartSetting.firstRowColor.toLocaleLowerCase() == \"rgb(255,255,254)\") {\n                chartSetting.firstRowColor = chartSetting.bgColor;\n            }\n            var tableHtml = document.createElement(\"table\");\n            tableHtml.style.border = \"1px solid\";\n            tableHtml.style.borderCollapse = \"collapse\";\n            tableHtml.style.fontSize = \"14px\";\n            tableHtml.style.lineHeight = \"26px\";\n         \n            //tableHtml.style.backgroundColor = (chartSetting.bgColor.toLocaleLowerCase().replace(\")\", \"\") + \",\" + (1 - chartSetting.opacityValue) + \")\").replace(\"rgb\", \"rgba\");\n            tableHtml.style.color = chartSetting.fontColor;\n            tableHtml.style.borderColor = chartSetting.borderColor;\n            tableHtml.style.fontFamily = chartSetting.fontFamily;\n            var tableData: any = chartSetting.chartData;\n            var series = [];\n            for (var i = 1; i &lt; tableData[0].length - 1; i++) {\n                var y = tableData[0][i];\n                if (y == '' || y == null) {\n                    break;\n                }\n                series.push(y);\n            }\n            for (var i = 0; i &lt; tableData.length - 1; i++) {\n                var x = tableData[i][0];\n                if (i != 0 &amp;&amp; (x == '' || x == null)) {\n                    break;\n                }\n                var tr = document.createElement(\"TR\");\n                tableHtml.appendChild(tr);\n\n                for (var j = 0; j &lt; tableData[i].length - 1; j++) {\n                    if (j != 0 &amp;&amp; (tableData[0][j] == null || tableData[0][j] == \"\")) {\n                        break;\n                    }\n                    //var y: any = parseFloat(tableData[i][j]);\n                    var td = document.createElement(\"TD\");\n                    tr.appendChild(td);\n                    td.style.border = \"1px solid \" + chartSetting.borderColor;\n                    td.style.padding = \"0px 7px 0px 7px\";\n                    if (tableData[i][j] || i == 0 || j == 0) {\n                        td.innerHTML = tableData[i][j];\n                    } else {\n                        td.innerHTML = \"\";\n                    }\n                    if (i != 0 &amp;&amp; j == 0) {\n                        td.style.backgroundColor = (chartSetting.firstColColor.toLocaleLowerCase().replace(\")\", \"\") + \",\" + (1 - chartSetting.opacityValue) + \")\").replace(\"rgb\", \"rgba\");\n                    } else if (i == 0) {\n                        td.style.backgroundColor = (chartSetting.firstRowColor.toLocaleLowerCase().replace(\")\", \"\") + \",\" + (1 - chartSetting.opacityValue) + \")\").replace(\"rgb\", \"rgba\");\n                    } else {\n                        td.style.backgroundColor = (chartSetting.bgColor.toLocaleLowerCase().replace(\")\", \"\") + \",\" + (1 - chartSetting.opacityValue) + \")\").replace(\"rgb\", \"rgba\");\n                    }\n                }\n            }\n            var table_img_div = document.getElementById(\"table_img\");\n            table_img_div.innerHTML = tableHtml.outerHTML.replace(/\\n/g, \"&lt;br&gt;\");\n            var tableW = $(table_img_div).width();\n            var tableH = $(table_img_div).height();\n            var img_svg = '&lt;svg width=\"' + (tableW) + 'px\" height=\"' + tableH + 'px\" xmlns = \"http://www.w3.org/2000/svg\" &gt;&lt;desc&gt;Created with Highcharts 4.2.4&lt;/desc&gt; &lt;switch&gt; &lt;foreignObject width=\"' + (tableW) + '\" height=\"' + tableH + '\" requiredFeatures = \"http://www.w3.org/TR/SVG11/feature#Extensibility\"&gt;&lt;body style=\"margin:0\" xmlns=\"http://www.w3.org/1999/xhtml\"&gt;' + tableHtml.outerHTML\n                + ' &lt;/body&gt;&lt;/foreignObject&gt;&lt;text font-size=\"10\" font-family=\"Verdana\"&gt;&lt;tspan x= \"10\" y= \"10\" &gt; 请使用其他浏览器，&lt;/tspan&gt;&lt;tspan x= \"10\" y= \"20\" &gt; 以正常显示表格。&lt;/tspan&gt; &lt;/text&gt;&lt;/switch&gt;&lt;/svg&gt;';\n            img_svg = img_svg.replace(/\\n/g, \"&lt;br/&gt;\");\n            return {\n                svg: img_svg,\n                width: tableW,\n                height: tableH\n            };\n        }</pre><p><br></p><p><br></p><p><br></p>"}}