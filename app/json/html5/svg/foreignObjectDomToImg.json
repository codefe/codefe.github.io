{"sta":1,"data":{"subTitle":"借助SVG forginObject实现DOM转图片实例页面","content":"<p></p><h5>CSS代码：</h5><pre>.outline {\n    outline: 2px solid red;\n    outline-offset: -2px;\n}</pre><p>HTML代码：</p><pre>&lt;div id=\"cmBox\" class=\"c-m-box\"&gt;\n    &lt;div class=\"c-m-list\"&gt;\n        &lt;img src=\"0.jpg\" alt=\"长天\" class=\"c-m-img\"&gt;\n        &lt;div class=\"c-m-name\"&gt;长天&lt;/div&gt;\n        &lt;div class=\"c-m-title\"&gt;对网文潮流具有极敏锐嗅觉...&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</pre><p>JS代码：</p><pre>// DOM转图片的方法\nvar domToImg = (function () {\n    // 转png需要的canvas对象及其上下文\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    // canvas绘制图片元素方法\n    var draw = function (img) {\n        var width = img.width, height = img.height;\n        // canvas绘制\n        canvas.width = width;\n        canvas.height = height;\n        // 画布清除\n        context.clearRect(0, 0, width, height);\n        // 绘制图片到canvas\n        context.drawImage(img, 0, 0);\n    };\n\n    // canvas画布绘制的原图片\n    var img = new Image();\n    // 回调\n    var callback = function () {};\n\n    // 图片回调\n    img.onload = function () {\n        draw(this);\n        // 回调方法\n        callback();\n    };\n\n    var exports = {\n        dom: null,\n        // DOM变成svg，并作为图片显示\n        dom2Svg: function () {\n            var dom = this.dom;\n            if (!dom) {\n                return this;\n            }\n\n            // 复制DOM节点\n            var cloneDom = dom.cloneNode(true);\n            cloneDom.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n            cloneDom.classList.remove('outline');\n\n            // 如果有图片，变成base64\n            var imgDom = null;\n            if (cloneDom.tagName.toLowerCase() == 'img') {\n                imgDom = cloneDom;\n            } else {\n                // 这里就假设一个图片，多图自己遍历转换下就好了\n                imgDom = cloneDom.querySelector('img');\n            }\n\n            if (imgDom) {\n                draw(imgDom);\n                imgDom.src = canvas.toDataURL();\n            }\n\n            var htmlSvg = 'data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + dom.offsetWidth + '\" height=\"' + dom.offsetHeight + '\"&gt;&lt;foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"&gt;'+\n                new XMLSerializer().serializeToString(cloneDom) +\n                document.querySelector('style').outerHTML +\n             '&lt;/foreignObject&gt;&lt;/svg&gt;';\n\n             htmlSvg = htmlSvg.replace(/\\n/g, '').replace(/\\t/g, '').replace(/#/g, '%23');\n\n            // 图片地址显示为DOM转换的svg\n            img.src = htmlSvg;\n\n            return this;\n        },\n        // 作为图片下载，JS前端下载可参考这篇文章：\n        // JS前端创建html或json文件并浏览器导出下载 - http://www.zhangxinxu.com/wordpress/?p=6252\n        download: function () {\n            // 创建隐藏的可下载链接\n            var eleLink = document.createElement('a');\n            // 下载图片文件名就按照时间戳来\n            eleLink.download = 'zxx_png-' + (+new Date() + '').slice(1, 9) + '.png';\n            eleLink.style.display = 'none';\n\n            // 触发图片onload是个异步过程，因此，需要在回调中处理\n            callback = function () {\n                eleLink.href = canvas.toDataURL();\n                // 触发点击\n                document.body.appendChild(eleLink);\n                eleLink.click();\n                // 然后移除\n                document.body.removeChild(eleLink);\n            };\n\n            // dom变图片\n            this.dom2Svg();\n        }\n    };\n\n    return exports;\n})();\n\n// 实例页面的交互代码\nvar eleBox = document.getElementById('cmBox');\n// hover outline\neleBox.addEventListener('mouseover', function (event) {\n    if (event.target !== this) {\n        event.target.classList.add('outline');\n    }\n});\neleBox.addEventListener('mouseout', function (event) {\n    var eleOutline = eleBox.querySelector('.outline');\n    if (eleOutline) {\n        eleOutline.classList.remove('outline');\n    }\n});\n// 点击并下载图片\neleBox.addEventListener('click', function (event) {\n    var eleTarget = event.target;\n    if (eleTarget !== this) {\n        domToImg.dom = eleTarget;\n        domToImg.download();\n    }\n});</pre><p><br></p>"}}