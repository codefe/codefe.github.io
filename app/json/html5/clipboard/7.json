{"sta":1,"data":{"subTitle":"copy,cut事件","content":"<p>用户向剪贴板放入数据时，将触发copy事件。\n\n下面的示例是将用户放入剪贴板的文本，转为大写。</p><pre><code>const source = document.querySelector('.source');\n\nsource.addEventListener('copy', (event) =&gt; {\n  const selection = document.getSelection();\n  event.clipboardData.setData('text/plain', selection.toString().toUpperCase());\n  event.preventDefault();\n});</code></pre><p>上面示例中，事件对象的clipboardData属性包含了剪贴板数据。它是一个对象，有以下属性和方法。\n<br>\n</p><pre><code>Event.clipboardData.setData(type, data)：修改剪贴板数据，需要指定数据类型。\nEvent.clipboardData.getData(type)：获取剪贴板数据，需要指定数据类型。\nEvent.clipboardData.clearData([type])：清除剪贴板数据，可以指定数据类型。如果不指定类型，将清除所有类型的数据。\nEvent.clipboardData.items：一个类似数组的对象，包含了所有剪贴项，不过通常只有一个剪贴项。</code></pre><p>下面的示例是拦截用户的复制操作，将指定内容放入剪贴板。<br></p><pre><code>const clipboardItems = [];\n\ndocument.addEventListener('copy', async (e) =&gt; {\n  e.preventDefault();\n  try {\n    let clipboardItems = [];\n    for (const item of e.clipboardData.items) {\n      if (!item.type.startsWith('image/')) {\n        continue;\n      }\n      clipboardItems.push(\n        new ClipboardItem({\n          [item.type]: item,\n        })\n      );\n      await navigator.clipboard.write(clipboardItems);\n      console.log('Image copied.');\n    }\n  } catch (err) {\n    console.error(err.name, err.message);\n  }\n});</code></pre><p><br></p><p>\n上面示例中，先使用e.preventDefault()取消了剪贴板的默认操作，然后由脚本接管复制操作。\n<br>\n<br>cut事件则是在用户进行剪切操作时触发，它的处理跟copy事件完全一样，也是从Event.clipboardData属性拿到剪切的数据。</p>"}}