{"sta":1,"data":{"subTitle":"惰性加载(lazy load)","content":"<p>有时，我们希望某些静态资源（比如图片），只有用户向下滚动，它们进入视口时才加载，这样可以节省带宽，提高网页性能。这就叫做\"惰性加载\"。</p><p></p><p>有了 IntersectionObserver API，实现起来就很容易了。</p><pre><code>function query(selector) {\n  return Array.from(document.querySelectorAll(selector));\n}\n\nvar observer = new IntersectionObserver(\n  function(changes) {\n    changes.forEach(function(change) {\n      var container = change.target;\n      var content = container.querySelector('template').content;\n      container.appendChild(content);\n      observer.unobserve(container);\n    });\n  }\n);\n\nquery('.lazy-loaded').forEach(function (item) {\n  observer.observe(item);\n});</code></pre><p>上面代码中，只有目标区域可见时，才会将模板内容插入真实 DOM，从而引发静态资源的加载。</p>"}}