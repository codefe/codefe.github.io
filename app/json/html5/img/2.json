{"sta":1,"data":{"subTitle":"图像大小的选择srcset属性+sizes属性","content":"<p>像素密度的适配，只适合显示区域一样大小的图像。如果希望不同尺寸的屏幕，显示不同大小的图像，<code>srcset</code>属性就不够用了，必须搭配<code>sizes</code>属性。</p><p></p><p>第一步，<code>srcset</code>属性列出所有可用的图像。</p><pre><code>&lt;img srcset=\"foo-160.jpg 160w,\n             foo-320.jpg 320w,\n             foo-640.jpg 640w,\n             foo-1280.jpg 1280w\"\n     src=\"foo-1280.jpg\"&gt;</code></pre><p>上面代码中，srcset属性列出四张可用的图像，每张图像的 URL 后面是一个空格，再加上宽度描述符。\n<br>\n<br>宽度描述符就是图像原始的宽度，加上字符w。上例的四种图片的原始宽度分别为160像素、320像素、640像素和1280像素。\n<br>\n<br>第二步，sizes属性列出不同设备的图像显示宽度。\n<br>\n<br>sizes属性的值是一个逗号分隔的字符串，除了最后一部分，前面每个部分都是一个放在括号里面的媒体查询表达式，后面是一个空格，再加上图像的显示宽度。</p><pre><code>&lt;img srcset=\"foo-160.jpg 160w,\n             foo-320.jpg 320w,\n             foo-640.jpg 640w,\n             foo-1280.jpg 1280w\"\n     sizes=\"(max-width: 440px) 100vw,\n            (max-width: 900px) 33vw,\n            254px\"\n     src=\"foo-1280.jpg\"&gt;</code></pre><p>上面代码中，sizes属性给出了三种屏幕条件，以及对应的图像显示宽度。宽度不超过440像素的设备，图像显示宽度为100%；宽度441像素到900像素的设备，图像显示宽度为33%；宽度900像素以上的设备，图像显示宽度为254px。\n<br>\n<br>第三步，浏览器根据当前设备的宽度，从sizes属性获得图像的显示宽度，然后从srcset属性找出最接近该宽度的图像，进行加载。\n<br>\n<br>假定当前设备的屏幕宽度是480px，浏览器从sizes属性查询得到，图片的显示宽度是33vw（即33%），等于160px。srcset属性里面，正好有宽度等于160px的图片，于是加载foo-160.jpg。\n<br>\n<br>注意，sizes属性必须与srcset属性搭配使用。单独使用sizes属性是无效的。</p>"}}