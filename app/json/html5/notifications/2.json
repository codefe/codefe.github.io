{"sta":1,"data":{"subTitle":"Notifications基础说明","content":"<p>目前notification的实现有两种：一种是之前草案中的形式：webkitNotifications对象, 另一种就是未来标准化的形式:Notification对象。首先来说一下webkitNotifications所包含的内容：<br></p><h3>webkitNotifications：</h3><h4>1. 静态方法</h4><pre><code>window.webkitNotifications.checkPermission()\n//该方法返回0, 1, 2三个值，0代表PERMISSION_ALLOWED,即’允许’；1代表PERMISSION_NOT_ALLOWED，即不允许；2代表PERMISSION_DENIED，即拒绝\nwindow.webkitNotifications.requestPermission()\n//调用该方法将会在浏览器的信息栏弹出一个是否允许桌面通知的提醒，该方法只能由用户主动事件触发，如click 或 mouse over，也就是说你不能在document.ready里面直接调用该方法。\nwindow.webkitNotifications.createNotification('icon-url','title', 'body' )\n//调用该方法将返回一个实例化的webkitNotifications对象</code></pre><p>PS:调用以上方法都会存在安全异常，也就是当前页面的permission是否为0。</p><h4>2. 实例方法</h4><pre><code>notificationInstance.show()\n//调用该方法将在右下角弹出一个通知窗口\nnotificationInstance.cancel()\n//调用该方法将关闭通知窗口</code></pre><p><h3>Notification:\n</h3>在chrome26+ 终端里面输入window.Notification并键入回车键，会发现这东西它也是存在的，根据某些博客的说法，这个Notification会是 webkitNotifications的标准化形态（传说中的进化），这种方式的实现相对于webkitNotifications的实现更简洁，更面 向对象一些。 构造函数：</p><pre><code>Notification(title, options)\n//@param {String} title 要显示的通知标题\n//@param {Object} options 备选项参数，键值对\n//option 结构如下\ndictionary NotificationOptions {\n  NotificationDirection dir = \"auto\";\n  DOMString lang = \"\";\n  DOMString body;\n  DOMString tag;\n  DOMString icon;//在实例化的时候会异步的去获取\n};</code></pre><pre><code>//新建一个Notification实例,并根据permission为'granted'来完成notification的显示\nvar notification = new Notification('Hello Notification',{body:\"I'm an enginneer!\"});</code></pre><p><h4>静态属性:\n</h4>Notification.Permission:</p><p>'default' 等同于拒绝 'denied' 意味着用户不想要通知 'granted' 意味着用户同意启用通知</p><p>Test:在chrome的地址栏里面输入http://www.baidu.com, 打开console，并在里面输入Notification.Permission 默认返回的是'default'.</p><p>Notes:该属性是只读的不能手动修改</p><pre><code>//在百度的首页打开console\nNotification.Permission = 'granted'\nNotification.Permission   //'default'</code></pre><p><h4>实例属性：\n</h4>以下属性都需要在Notification实例上才能访问，为只读属性，并且就是通过option来赋值</p><pre><code>Notification.dir    //\nNotification.lang\nNotification.Body   //通知的具体内容\nNotification.tag    //实例化的notification的id\nNotification.icon   //通知的缩略图</code></pre><p><h3>静态方法\n</h3>Notification.requestPermission() ``` //该方法将会询问用户是否允许显示通知 ``` 该方法不能由页面自主调用，必须由用户主动事件触发，还是以百度的页面为例，百度的搜索框的id为'kw'：</p><pre><code>//不通过事件触发直接调用\nNotification.requestPermission()\n//页面无反应</code></pre><p>Javascript //通过用户主动事件触发来调用 document.getElementById('kw').onclick=function(){ Notification.requestPermission(); }; //页面信息栏会弹出询问用户是否允许显示桌面通知</p><p>Notes:当用户同意之后，再次调用该方法则无效，即该方法仅对Notification.Permission不为'granted'的时候起作用</p><h3>实例方法</h3><pre><code>Notification.close()    //该方法允许通过代码控制关掉notification</code></pre><p>Notes: Notification 没有实例方法show(),在Notification实例化的时候，浏览器就已经自动的去处理notification的显示过程了。</p><h3>代码示例</h3><p>以下代码将展示如何使用webkitNotification和Notification来显示桌面通知</p><p>1 webkitNotification</p><pre><code>document.getElementById('notifyButton').onclick = function(){\n    //判断浏览器是否支持notification\n    if(window.webkitNotifications){\n        //判断当前页面是否被允许发出通知\n        if(webkitNotifications.checkPermission==0){\n            var icon_url = 'http://www.w3.org/';\n            var title = 'Hello HTML5';\n            var body = 'I will be always here waiting for you!';\n            var WebkitNotification = webkitNotifications.createNotification(icon_url, title, body);\n            WebkitNotification.show();\n        }else{\n            document.getElementById('requestbutton').onclick = function () {\n                webkitNotifications.requestPermission();\n            };\n        }\n    }else alert(\"您的浏览器不支持桌面通知特性，请下载谷歌浏览器试用该功能\");\n};</code></pre><p>2 Notification</p><pre><code>document.getElementById('notifyButton').onclick = function () {\n    if (window.Notification){\n        if(Notification.Permission==='granted'){\n            var notification = new Notification('Hello Notification',{body:\"I hope that all the browser will support this\\                   function!\"});\n        }else {\n            document.getElementById('requestButton').onclick = function (){\n                Notification.requestPermission();\n            };\n        };\n    }else alert('你的浏览器不支持此特性，请下载谷歌浏览器试用该功能');\n};</code></pre><p><br></p>"}}