{"sta":1,"data":{"subTitle":"canvas 实现本地文件上传预览功能","content":"<p>实现该功能很简单，首先我们要建一个表单，用于用户选取图片。<br></p><pre><code>&lt;input type=\"file\" name=\"picture\" accept=\"image/png, image/jpeg\"/&gt;</code></pre><p>一旦用户选中图片，将其显示在canvas的函数可以这样写：</p><pre><code>document.querySelector('input[name=picture]').onchange = function(e){\n     readFile(e.target.files[0]);\n}\nfunction readFile(file){\n  var reader = new FileReader();\n  reader.onload = function(e){\n    applyDataUrlToCanvas( reader.result );\n  };\n  reader.readAsDataURL(file);\n}</code></pre><p>还可以在canvas上面定义拖放事件，允许用户直接拖放图片到上面。</p><pre><code>// stop FireFox from replacing the whole page with the file.\ncanvas.ondragover = function () { return false; };\n// Add drop handler\ncanvas.ondrop = function (e) {\n  e.stopPropagation();\n  e.preventDefault(); \n  e = e || window.event;\n  var files = e.dataTransfer.files;\n  if(files){\n    readFile(files[0]);\n  }\n};</code></pre><p>所有的拖放事件都有一个dataTransfer属性，它包含拖放过程涉及的二进制数据。\n<br>\n<br>还可以让canvas显示剪贴板中的图片。</p><pre><code>document.onpaste = function(e){\n  e.preventDefault();\n  if(e.clipboardData&amp;&amp;e.clipboardData.items){\n    // pasted image\n    for(var i=0, items = e.clipboardData.items;i&lt;items.length;i++){\n      if( items[i].kind==='file' &amp;&amp; items[i].type.match(/^image/) ){\n        readFile(items[i].getAsFile());\n        break;\n      }\n    }\n  }\n  return false;\n};</code></pre><p><br></p>"}}