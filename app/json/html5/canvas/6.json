{"sta":1,"data":{"subTitle":"canvas画图--流畅没有齿痕的线，图像画线","content":"<p>画图，首先要获取鼠标位置，当鼠标在画图板上移动时，随之画线。</p><p>1.画图板canvas，监听鼠标事件<br>2.获取鼠标事件，得到鼠标位置。</p><pre>var mouse = {x: 0, y: 0}; //起始鼠标位置，也就是mousedown\nvar last_mouse = {x: 0, y: 0};\n \n/* Mouse Capturing Work */\ncanvas.addEventListener('mousemove', function(e) { \n    last_mouse.x = mouse.x;\n    last_mouse.y = mouse.y;\n \n    mouse.x = e.pageX - this.offsetLeft; \n    mouse.y = e.pageY - this.offsetTop;\n}, false);</pre><p>以上，通过canvas.addEventListener使画图板canvas监听到鼠标事件。\n<br>\n<br>3. 画线</p><pre>var onPaint = function() {\n    ctx.beginPath();\n    ctx.moveTo(last_mouse.x, last_mouse.y); //moveTo 从一个点移动到另一个点。\n    ctx.lineTo(mouse.x, mouse.y); //lineTo方法画直线； 方法接受终点的坐标（x，y）作为参数\n    ctx.closePath();\n    ctx.stroke();\n};</pre><p>第一步是用 beginPath 创建一个路径。在内存里，路径是以一组子路径（直线，弧线等）的形式储存的，它们共同构成一个图形。每次调用 beginPath，子路径组都会被重置，然后可以绘制新的图形。<br>第二步就是实际绘制路径的部分，moveTo和lineTo。<br>第三步是调用 closePath 方法，它会尝试用直线连接当前端点与起始端点来关闭路径，但如果图形已经关闭或者只有一个点，它会什么都不做。这一步不是必须的。\n<br>\n<br>最后一步是调用 stroke 或 fill 方法，这时，图形才是实际的绘制到 canvas 上去。stroke 是绘制图形的边框，fill 会用填充出一个实心图形。<br>基础知识，请参考 https://developer.mozilla.org/zh-CN/docs/Canvas_tutorial/Drawing_shapes\n<br>\n<br>以下是完整的代码。</p><pre>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\" /&gt;\n    &lt;meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" /&gt;\n    &lt;meta http-equiv=\"Content-Style-Type\" content=\"text/css\" /&gt;\n    &lt;meta name=\"viewport\" content=\" initial-scale=0.80,user-scalable=no\" /&gt;\n    &lt;link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" /&gt;\n    &lt;script src=\"http://code.jquery.com/jquery-1.8.2.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://code.jquery.com/ui/1.9.1/jquery-ui.js\"&gt;&lt;/script&gt;\n    &lt;title&gt;Pencil&lt;/title&gt;\n\n    &lt;style type=\"text/css\"&gt;\n        html, body {\n            width: 100%;\n            height: 100%;\n        }\n        #sketch {\n            border: 10px solid gray;\n            height: 100%;\n            position: relative;\n        }\n        #tmp_canvas {\n            position: absolute;\n            left: 0px; right: 0;\n            bottom: 0; top: 0;\n            cursor: crosshair;\n        }\n    &lt;/style&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function(){\n        var canvas = document.querySelector('#paint');\n        var ctx = canvas.getContext('2d');\n\n        var sketch = document.querySelector('#sketch');\n        var sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n\n        var mouse = {x: 0, y: 0};\n        var last_mouse = {x: 0, y: 0};\n\n        /* Mouse Capturing Work */\n        canvas.addEventListener('mousemove', function(e) {\n            last_mouse.x = mouse.x;\n            last_mouse.y = mouse.y;\n\n            mouse.x = e.pageX - this.offsetLeft;\n            mouse.y = e.pageY - this.offsetTop;\n        }, false);\n\n\n        /* Drawing on Paint App */\n        ctx.lineWidth = 5;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n\n        canvas.addEventListener('mousedown', function(e) {\n            canvas.addEventListener('mousemove', onPaint, false);\n        }, false);\n\n        canvas.addEventListener('mouseup', function() {\n            canvas.removeEventListener('mousemove', onPaint, false);\n        }, false);\n\n        var onPaint = function() {\n            ctx.beginPath();\n            ctx.moveTo(last_mouse.x, last_mouse.y);\n            ctx.lineTo(mouse.x, mouse.y);\n            ctx.closePath();\n            ctx.stroke();\n        };\n    });\n    &lt;/script&gt;\n&lt;/head&gt;\n\n\n&lt;body&gt;\n    &lt;div id=\"sketch\"&gt;\n        &lt;canvas id=\"paint\"&gt;&lt;/canvas&gt;\n    &lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;</pre><p>这个代码很容易实现，但是它有个问题，就是画线不流畅，出现折断痕迹。\n<br>\n<br>4.画流畅的线\n<br>\n<br>可以根据二次贝塞尔曲线，连接2点画弧得到没有折痕的流畅曲线。<br>可以参照：<br>http://www.html5canvastutorials.com/labs/html5-canvas-modify-curves-with-anchor-points-using-kineticjs/<br>http://www.cartogrammar.com/blog/actionscript-curves-update/</p><pre>tmp_ctx.beginPath();\ntmp_ctx.moveTo(ppts[0].x, ppts[0].y); //使用 beginPath() 和 moveTo() 方法来定义开始点\n\nfor (var i = 1; i &lt; ppts.length - 2; i++) {\n    var c = (ppts[i].x + ppts[i + 1].x) / 2;\n    var d = (ppts[i].y + ppts[i + 1].y) / 2;\n\n    tmp_ctx.quadraticCurveTo(ppts[i].x, ppts[i].y, c, d); //二次贝塞曲线函数\n}\n\n// For the last 2 points\ntmp_ctx.quadraticCurveTo(\n    ppts[i].x,\n    ppts[i].y,\n    ppts[i + 1].x,\n    ppts[i + 1].y\n);\ntmp_ctx.stroke(); //这时，图形才是实际的绘制到 canvas 上去，stroke 是绘制图形的边框</pre><p>quadraticCurveTo(cpx, cpy, x, y);方法通过使用表示二次贝塞尔曲线的指定控制点，向当前路径添加一个点。第一个点是用于二次贝塞尔计算中的控制点，第二个点是曲线的结束点。曲线的开始点是当前路径中最后一个点。</p><p>虽然这样子可以画出贝塞尔曲线，但是你可以发现，它还是有锯齿边缘的。但是在画图之前加一个clearRect()函数，则锯齿消失！我不晓得这是为什么。。。\n<br><br>5.画没有齿痕的流畅曲线</p><p>&nbsp;<span style=\"background-color: rgb(241, 241, 241); font-family: &quot;Lucida Console&quot;, Consolas, Monaco; white-space: pre-wrap;\">tmp_ctx.beginPath();</span></p><pre>tmp_ctx.moveTo(ppts[0].x, ppts[0].y); \n\ntmp_ctx.clearRect(0, 0, 2000, 2000);//它可以消除齿痕！\n\nfor (var i = 1; i &lt; ppts.length - 2; i++) {\n    var c = (ppts[i].x + ppts[i + 1].x) / 2;\n    var d = (ppts[i].y + ppts[i + 1].y) / 2;\n \n    tmp_ctx.quadraticCurveTo(ppts[i].x, ppts[i].y, c, d); \n}\n \n// For the last 2 points\ntmp_ctx.quadraticCurveTo(\n    ppts[i].x,\n    ppts[i].y,\n    ppts[i + 1].x,\n    ppts[i + 1].y\n);\ntmp_ctx.stroke();</pre><p>6.接下来是橡皮的问题，虽然可以用相同背景色来代替，但是如果背景不单一，那就不管用了。所以，我们需要一个完完全全的橡皮，而不是相同背景，或者消除一块区域的痕迹。\n<br>\n<br>那么，我们可以简单的引用globalCompositeOperation()函数，这个函数是用来在画布上组合颜色，我们可以利用这个原理，叠加(数学上的\"或\"原理)来制作橡皮。<br>同画笔一样，获得鼠标位置，叠加画板上已有的颜色，则为取消。<br>globalCompositeOperation()函数，请参考 http://www.html5canvastutorials.com/advanced/html5-canvas-global-composite-operations-tutorial/<br> 画笔画图时： context.globalCompositeOperation = 'source-over'; //新的颜色覆盖之前的<br> 橡皮擦除时： context.globalCompositeOperation = 'destination-out'; //新的颜色与之前颜色，重叠的部分消失\n<br><br>7. 画具有透明度的线\n<br>\n<br> http://css.dzone.com/articles/sketching-html5-canvas-and</p><pre>&lt;!-- \nInternet Explorer 9、Firefox、Opera、Chrome 以及 Safari 支持。\nFrom: http://www.cnblogs.com/muzijia/admin/EditPosts.aspx?postid=2841967\n --&gt;\n&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\" /&gt;\n    &lt;meta http-equiv=\"Content-Script-Type\" content=\"text/javascript\" /&gt;\n    &lt;meta http-equiv=\"Content-Style-Type\" content=\"text/css\" /&gt;\n    &lt;meta name=\"viewport\" content=\" initial-scale=0.80,user-scalable=no\" /&gt;\n    &lt;link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css\" /&gt;   \n    &lt;script src=\"http://code.jquery.com/jquery-1.8.2.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"http://code.jquery.com/ui/1.9.1/jquery-ui.js\"&gt;&lt;/script&gt;\n    &lt;title&gt;Pencil&lt;/title&gt;\n    &lt;style type=\"text/css\"&gt;\n        ul, li{\n            clear:both;\n            list-style:none;\n            margin:0 auto;\n            display: inline; \n        }\n        html, body {\n            width: 100%;\n            height: 100%;\n        }    \n        #sketch {\n            border: 10px solid gray;\n            height: 100%;\n            position: relative;\n        }\n        #tmp_canvas {\n            position: absolute;\n            left: 0px; right: 0;\n            bottom: 0; top: 0;\n            cursor: crosshair;\n        }\n    &lt;/style&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    $(document).ready(function(){\n        var canvas = document.querySelector('#paint');\n        var ctx = canvas.getContext('2d');\n        var sketch = document.querySelector('#sketch');\n        var sketch_style = getComputedStyle(sketch);\n        canvas.width = parseInt(sketch_style.getPropertyValue('width'));\n        canvas.height = parseInt(sketch_style.getPropertyValue('height'));\n        \n        // Creating a tmp canvas\n        var tmp_canvas = document.createElement('canvas');\n        var tmp_ctx = tmp_canvas.getContext('2d');\n        tmp_canvas.id = 'tmp_canvas';\n        tmp_canvas.width = canvas.width;\n        tmp_canvas.height = canvas.height;\n        sketch.appendChild(tmp_canvas);\n        var mouse = {x: 0, y: 0};\n        var last_mouse = {x: 0, y: 0};\n        var paint = {\n            init:function(canvasID_, canvas, context, brushImage){\n                this.canvasID_ = canvasID_;\n                this.canvasID = $(\"#\"+canvasID_);\n                this.canvas = canvas;\n                this.context = context;\n                    \n                /** Drawing on Line Paint App */\n                this.context.lineWidth = 5;\n                this.context.lineJoin = 'round';\n                this.context.lineCap = 'round';\n                this.context.strokeStyle = 'red';\n                this.context.fillStyle = 'red';        \n                this.color=[\"#000000\",\"#9E9E9E\",\"#FFFFFF\",\"#8B5742\",\"#FF0000\",\"#FFC125\",\"#00688B\",\"#CDB38B\",\"#CD8C95\"];                              \n                this.lock = false;    \n                this.line = false;                \n                ppts = [];        // Pencil Points                     \n                this.brush = brushImage;\n                this.context.globalAlpha = 1;\n                \n                /** mouse event */                \n                if (this.touchSupported) {\n                    this.mouseDownEvent = \"touchstart\";\n                    this.mouseMoveEvent = \"touchmove\";\n                    this.mouseUpEvent = \"touchend\";\n                }\n                else {\n                    this.mouseDownEvent = \"mousedown\";\n                    this.mouseMoveEvent = \"mousemove\";\n                    this.mouseUpEvent = \"mouseup\";\n                }\n                this.bind();\n            },    \n            bind:function(){\n                var t = this; //paint Instance     \n                this.canvasID.live({        \n                    mousedown: function(e){        \n                        mouse.x = typeof e.offsetX !== 'undefined' ? e.offsetX : e.layerX;\n                        mouse.y = typeof e.offsetY !== 'undefined' ? e.offsetY : e.layerY;\n                        ppts.push({x: mouse.x , y: mouse.y});\n                        t.lock=true;\n                    },\n                    mousemove: function(e){                    \n                        if(t.lock){                    \n                            mouse.x = typeof e.offsetX !== 'undefined' ? e.offsetX : e.layerX;\n                            mouse.y = typeof e.offsetY !== 'undefined' ? e.offsetY : e.layerY;                            \n                            ppts.push({x: mouse.x , y: mouse.y });\n                            //tmp_ctx.clearRect(0, 0, 2000, 2000);\n                            //if(t.line == true){ //draw line\n                                t.onPaint();                                                                \n                            //}    \n                            //if(t.line ==false){\n                                //t.drawPoint();    //draw image                                \n                            //}\n                        }            \n                    },\n                    mouseleave:function(e){\n                        t.lock = false;    \n                        //ctx.drawImage(tmp_canvas, 0, 0);\n                        //tmp_ctx.clearRect(0, 0, 2000, 2000);        \n                        ppts = [];\n                    },\n                    mouseup: function(e){            \n                        t.lock = false;    \n                        //ctx.drawImage(tmp_canvas, 0, 0);\n                        //tmp_ctx.clearRect(0, 0, 2000, 2000);    \n                        //tmp_ctx.drawImage(canvas, 0, 0);\n                        ppts = [];                \n                    }\n                });    \n            },\n            onPaint:function() \n            {\n                var tmp_ctx = this.context;                    \n                // Tmp canvas is always cleared up before drawing.\n                tmp_ctx.clearRect(0, 0, 2000, 2000);      //取消齿痕； 如果想用橡皮，则注释这句，因为绘图痕迹绘在两个图层中。          \n                if (ppts.length &lt; 3) {\n                    var b = ppts[0];\n                    tmp_ctx.beginPath();\n                    tmp_ctx.arc(b.x, b.y, tmp_ctx.lineWidth / 2, 0, Math.PI * 2, !0);\n                    tmp_ctx.fill();\n                    tmp_ctx.closePath();\n                    return;\n                }                            \n                tmp_ctx.beginPath();\n                tmp_ctx.moveTo(ppts[0].x, ppts[0].y);\n                for (var i = 1; i &lt; ppts.length - 2; i++) {\n                    var c = (ppts[i].x + ppts[i + 1].x) / 2;\n                    var d = (ppts[i].y + ppts[i + 1].y) / 2;                        \n                    tmp_ctx.quadraticCurveTo(ppts[i].x, ppts[i].y, c, d);    \n                }      \n                // For the last 2 points\n                tmp_ctx.quadraticCurveTo(\n                    ppts[i].x,\n                    ppts[i].y,\n                    ppts[i + 1].x,\n                    ppts[i + 1].y\n                );                \n                tmp_ctx.stroke();                \n            },\n            changeColor:function(style,color)\n            {          \n                var t=this;\n                var styleNum = style;\n                var colorNum = color;                \n\n                console.debug(\"pen =\"+style+\", color=\"+color);\n                \n                t.context.strokeStyle = t.color[colorNum];\n                t.context.fillStyle = t.color[colorNum];    \n                \n                if(styleNum == 0){  //mark pen    \n                    t.line = true;    \n                    t.context.lineWidth = 30;\n                    t.context.globalAlpha = 0.5;\n                    t.context.globalCompositeOperation = 'source-over';         \n                    \n                    console.debug(\"mark\");    \n                    \n                }\n                if(styleNum == 1){  //peicnl   \n                    t.line = true;    \n                    t.context.lineWidth = 5;\n                    t.context.globalAlpha = 1;    \n                    t.context.globalCompositeOperation = 'source-over';    \n                    console.debug(\"pencil\");    \n                }\n                if(styleNum == 2){  //resetEraser \n                    t.line = true;    \n                    //t.context = ctx;\n                    t.resetEraser();\n                }             \n            },\n            resetEraser:function()\n            {         \n                var t=this; \n                //t.context = ctx;\n                t.context.lineWidth = 30;\n                t.context.globalAlpha = 1;\n                t.context.globalCompositeOperation = 'destination-out';\n                console.debug(\"resetEraser\");\n            },\n            clear:function()\n            {\n                ppts = [];\n                this.context.globalAlpha = 0;\n                this.context.clearRect(0, 0, this.w, this.h);\n            }\n        };\n            \n        &lt;!-- drawing --&gt;\n        var brush = new Image();    \n        brush.src = \"images/color_01.png\";        //defalut red\n        brush.onload = function(){     \n            paint.init('tmp_canvas',tmp_canvas,tmp_ctx, brush); \n        };\n        var style = 1;\n        var color = 1;     \n        $('.tool&gt; li &gt; a').click(function() {            \n            var idx = $('.tool&gt; li &gt; a').index(this);            \n            style = idx;\n            paint.changeColor(style, color);    \n            \n            if(idx == 2){\n                //paint.init('paint',paint,ctx, brush);\n            }\n        });\n\n        $('.brush &gt; li &gt; a').click(function() {            \n            var idx = $('.brush &gt; li &gt; a').index(this);                \n            var i = idx + 1;\n            \n            //brush.src = \"images/color_0\"+i+\".png\";                \n            color = idx;\n            paint.changeColor(style, color);    \n        });\n    });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"pencil\"&gt;    \n        &lt;ul class=\"tool\"&gt;                                \n            &lt;li&gt;&lt;a class=\"btn_pen\" href=\"javascript:void(0)\"&gt;&lt;img src=\"images/crayon-outline.png\" alt=\"\"&gt;&lt;/a&gt;&lt;/li&gt;            \n            &lt;li&gt;&lt;a class=\"btn_mark\" href=\"javascript:void(0)\"&gt;&lt;img src=\"images/marker-outline.png\" alt=\"\"&gt;&lt;/a&gt;&lt;/li&gt;            \n            &lt;li&gt;&lt;a class=\"btn_eraser\" href=\"javascript:void(0)\"&gt;&lt;img src=\"images/eraser-outline.png\" alt=\"\"&gt;&lt;/a&gt;&lt;/li&gt;    \n            &lt;li&gt;&lt;a class=\"btn_mark\" href=\"javascript:void(0)\"&gt;&lt;img src=\"images/image-outline.png\" alt=\"\"&gt;&lt;/a&gt;&lt;/li&gt;            \n        &lt;/ul&gt;\n        &lt;ul class=\"brush\"&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_01.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_02.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_03.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_04.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_05.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_06.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_07.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_08.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n            &lt;li&gt;&lt;a href=\"javascript: void(0);\"&gt;&lt;img src=\"images/color_09.png\" /&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;            \n    &lt;/div&gt;\n    &lt;div id=\"sketch\"&gt;\n        &lt;canvas id=\"paint\"&gt;&lt;/canvas&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><p><br></p><p><br></p>"}}