{"sta":1,"data":{"subTitle":"Hash、AES、Base64和HEX功能","content":"<p>CryptoJS 比较容易使用，不过AES的用法有点奇怪。<br>Node.js环境安装CryptoJS的方法：<br></p><pre><code>npm install --save crypto-js</code></pre><p>Hash、AES、Base64和HEX功能</p><pre><code>let cryptoJS = require('crypto-js')\nlet msg = 'CryptoJS demo'\n\n// Hash\nlet msgSHA1 = cryptoJS.SHA1(msg)\nconsole.log(msgSHA1) // WordArray object\nlet msgSHA1Hex = msgSHA1.toString() // 默认CryptoJS.enc.Hex，即十六进制\nconsole.log(msgSHA1Hex)\nconsole.log(msgSHA1.toString(cryptoJS.enc.Base64))\nconsole.log(cryptoJS.MD5(msg).toString())\nconsole.log(cryptoJS.SHA256(msg).toString())\n\n// Base64, HEX\nlet wordArray = cryptoJS.enc.Utf8.parse(msg)\nlet msgBase64 = wordArray.toString(cryptoJS.enc.Base64)\nconsole.log(msgBase64)\nworldArray = cryptoJS.enc.Base64.parse(msgBase64)\nmsg = wordArray.toString(cryptoJS.enc.Utf8)\nconsole.log(msg)\nlet msgHex = worldArray.toString()\nconsole.log(msgHex)\nworldArray = cryptoJS.enc.Hex.parse(msgHex)\nmsg = worldArray.toString(cryptoJS.enc.Utf8)\nconsole.log(msg)\n\n// AES\nlet key = cryptoJS.enc.Hex.parse('54f2ce052a7c125f2816e06ebc463d45cd27f371b25d6c39c3cf07e6998d6aa4')\nlet iv = cryptoJS.enc.Hex.parse('63c299b53161d7175c182b1c67b14ac0a90a28db552098844ab88127a3c8c1c3')\nlet aesOption = {\n    iv: iv,\n    mode: cryptoJS.mode.CBC,\n    padding: cryptoJS.pad.Pkcs7\n}\nlet msgAES256CBC = cryptoJS.AES.encrypt(msg, key, aesOption)\nlet msgAES256CBCHex = cryptoJS.enc.Hex.stringify(msgAES256CBC.ciphertext)\nlet originMsg = cryptoJS.AES.decrypt({ ciphertext: cryptoJS.enc.Hex.parse(msgAES256CBCHex) }, key, aesOption)\n    .toString(cryptoJS.enc.Utf8)\nconsole.log(originMsg)</code></pre><p><br></p>"}}