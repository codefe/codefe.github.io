{"sta":1,"data":{"subTitle":"vue应用Aes","content":"<p>安装依赖<br></p><pre><code>npm install axios crypto-js js-base64 --save</code></pre><p>创建加解密文件：src/http/crypt.js</p><pre><code>import CryptoJS from \"crypto-js\";\n\nimport { Base64 } from 'js-base64';\n\nconst key = CryptoJS.enc.Utf8.parse( 'KEY' )//替换成你的KEY 16位\n\nconst iv = CryptoJS.enc.Utf8.parse( 'IV' )//替换成你的IV偏移量\n\n//加密\n\nfunction enc( str ) {\n\n    if(typeof str == 'object') { str = JSON.stringify(str) }\n\n    var ciphertext = CryptoJS.AES.encrypt( str , key, { \n\n        iv: iv,\n\n        mode: CryptoJS.mode.CBC,\n\n        padding:CryptoJS.pad.Pkcs7\n\n    });\n\n    return Base64.encode(ciphertext)\n\n}\n\n//解密\n\nfunction dec( str ) {\n\n    var ciphertext = Base64.decode(str)\n\n    var decrypted = CryptoJS.AES.decrypt(ciphertext,key,{\n\n                iv: iv,\n\n                mode: CryptoJS.mode.CBC,\n\n                padding:CryptoJS.pad.Pkcs7\n\n        });\n\n        return decrypted.toString(CryptoJS.enc.Utf8);//WordArray对象转utf8字符串\n\n}\n\nexport default {\n\n    enc,\n\n    dec\n\n}</code></pre><p>请求文件 src/http/index.js</p><pre><code>import axios from 'axios'\n\nimport {enc,dec} from './crypt.js'\n\nvar instance = axios.create({\n\n    baseURL:'XXXXXX'\n\n})\n\n//请求拦截\n\ninstance.interceptors.request.use((config)=&gt; {\n\n        console.log( config.data )\n\n        config.data =enc(config.data)\n\n        return config;\n\n},(error)=&gt; {\n\n        return Promise.reject(error);\n\n});\n\n//响应拦截\n\ninstance.interceptors.response.use((response)=&gt; {\n\n        var res = JSON.parse(dec(response.data))\n\n        console.log(res)\n\n        return res\n\n},(error)=&gt; {\n\n        return Promise.reject(error);\n\n});\n\nexport default instance</code></pre><p>在 main.js</p><pre><code>import http from './http/index.js'\n\nVue.prototype.$http = http</code></pre><p>组件中使用</p><pre><code>methods:{\n\n    ...\n\n    get_userinfo() {\n\n        this.$http.get('/xxx')\n\n        .....\n\n    }\n\n    ...\n\n}</code></pre><p><br></p>"}}