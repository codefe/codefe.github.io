{"sta":1,"data":{"subTitle":"hash模式和history模式","content":"<p>hash: 在 url 中带有 #，其原理是 onhashchange 事件。</p><p>可以在 window 对象上监听这个事件:</p><pre><code>window.onhashchange = function(event){\n     ...\n}</code></pre><p>history: 没有原 # , 其原理是 popstate 事件，需要后台配置支持。<br></p><p>html5 中新增两个操作历史栈的API: pushState() 和 replaceState() 方法。\n<br>\n</p><pre><code>history.pushState(data[,title][,url]); // 向历史记录中追加一条记录\nhistory.replaceState(data[,title][,url]); // 替换当前页在历史记录中的信息。</code></pre><p>这两个方法也可以改变url，页面也不会重新刷新，在当前已有的 back、forward、go 的基础之上，它们提供了对历史记录进行修改的功能。只是当它们执行修改时，虽然改变了当前的 URL，但浏览器不会立即向后端发送请求。\n<br>\n<br></p>"}}