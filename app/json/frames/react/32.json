{"sta":1,"data":{"subTitle":"usestate 函数式更新","content":"<p>如下面的代码 handleClickFn 中通过函数式改变 count，handleClick 是常规方法改变 count，多次点击按钮后，均是在 3s 之后改变 count，可以看出常规的方法只变化了一次，而函数式 usestate 则改变了多次，因为它可以获取之前的 state 值，也就是代码中的 prevCount 每次都是最新的值。</p><p>示例</p><pre>function MyDemo6() {\n  const [count, setCount] = useState(0);\n  function handleClick() {\n    setTimeout(() =&gt; {\n      setCount(count + 1);\n    }, 3000);\n  }\n  function handleClickFn() {\n    setTimeout(() =&gt; {\n      setCount((prevCount) =&gt; {\n        return prevCount + 1;\n      });\n    }, 3000);\n  }\n  return (\n    &lt;&gt;\n      Count: {count}\n      &lt;button onClick={handleClick}&gt;点击常规改变count&lt;/button&gt;\n      &lt;br /&gt;\n      &lt;button onClick={handleClickFn}&gt;点击函数式改变count&lt;/button&gt;\n    &lt;/&gt;\n  );\n}</pre><p>结果示例</p><p><img src=\"/app/json/frames/react/img/r1.gif\" style=\"max-width:100%;\"></p><p>&nbsp;如上图所示，多次点击第一个按钮，页面在 3s 之后只变化 1 次，而多次点击第二个按钮，页面在 3s 之后就会变化多次。因为 setTimeout 是宏任务，多次点击按钮，在 3s 之后同时执行了多次改变数据，根据上述核心知识点“React 合成事件中改变状态是异步的，出于减少 render 次数，react 会收集所有状态变更，然后比对优化，最后做一次变更。”所知，页面只会改变 1 次数据，如果想改变多次，就要使用函数式改变数据的方式。</p><p>\n<br>以上类似地在短时间内多次触发 setCount 函数，如下面代码所示：</p><pre>function MyDemo7() {\n  const [count, setCount] = useState(0);\n  function handleClick() {\n    setCount(count + 1);\n    setCount(count + 1);\n    setCount(count + 1);\n  }\n  function handleClickFn() {\n    setCount((prevCount) =&gt; {\n      return prevCount + 1;\n    });\n    setCount((prevCount) =&gt; {\n      return prevCount + 1;\n    });\n    setCount((prevCount) =&gt; {\n      return prevCount + 1;\n    });\n  }\n  return (\n    &lt;&gt;\n      Count: {count}\n      &lt;br /&gt;\n      &lt;button onClick={handleClick}&gt;点击常规改变count&lt;/button&gt;\n      &lt;br /&gt;\n      &lt;button onClick={handleClickFn}&gt;点击函数式改变count&lt;/button&gt;\n    &lt;/&gt;\n  );\n}</pre><p>结果示例<br></p><p>\n<img src=\"/app/json/frames/react/img/r2.gif\" style=\"max-width:100%;\"></p><p><br>从上图可以看出，点击第一个按钮，页面数值只会变化 1 次，而点击第二个按钮就会变化 3 次。&nbsp;<br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p>"}}