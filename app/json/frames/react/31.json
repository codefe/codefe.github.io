{"sta":1,"data":{"subTitle":"如何监听 object 或者 array 类型中 useState 的改变","content":"<p><strong>核心知识点</strong><span>&nbsp;</span>React 组件的更新机制对 state 只进行浅对比，也就是更新某个复杂类型数据时只要它的引用地址没变，那就不会重新渲染组件。更新复杂 state 的时候必须传给它一个全新的对象，而不是复制了它引用地址再修改的对象。所以 state 中如果是 object 或者 array 类型，如果直接改其值，是无法监听到变化。</p><p></p><p><strong>错误示例 1.1</strong><span>&nbsp;</span>虽然点击两个按钮改变了 state 值，但是 useEffect 无法监听到 state 发生变化，html 也无法重新渲染</p><pre>const MyDemo1 = () =&gt; {\n  const [counter, setCounter] = useState({ a: 1, b: 2 });\n  const [number, setNumber] = useState([1, 2, 3]);\n  useEffect(() =&gt; {\n    console.log(\"监听到变化\");\n  }, [counter, number]);\n  const changeCounter = () =&gt; {\n    counter.b = 40; //直接改变对象的值\n    setCounter(counter);\n  };\n  const changeNumber = () =&gt; {\n    number[2] = 10; //直接改变数组的值\n    number.push(4);\n    setNumber(number);\n  };\n  return (\n    &lt;&gt;\n      &lt;div&gt;{\"counter:\" + counter.a + \"---\" + counter.b}&lt;/div&gt;\n      &lt;button onClick={changeCounter}&gt;change counter&lt;/button&gt;\n      &lt;div&gt;num:&lt;/div&gt;\n      {number.map((item, index) =&gt; {\n        return &lt;p key={index}&gt;{item}&lt;/p&gt;;\n      })}\n      &lt;button onClick={changeNumber}&gt;change number&lt;/button&gt;\n    &lt;/&gt;\n  );\n};</pre><p>正确示例 1.2：使用展开运算符返回一个新对象或者新数组</p><pre>const MyDemo2 = () =&gt; {\n  const [counter, setCounter] = useState({ a: 1, b: 2 });\n  const [number, setNumber] = useState([1, 2, 3]);\n  useEffect(() =&gt; {\n    console.log(\"监听到变化\");\n  }, [counter, number]);\n  const changeCounter = () =&gt; {\n    setCounter({ ...counter, b: 40 });\n  };\n  const changeNumber = () =&gt; {\n    const newNumber = [...number];\n    newNumber[2] = 20;\n    newNumber.push(4);\n    setNumber(newNumber);\n  };\n  return (\n    &lt;&gt;\n      &lt;div&gt;{\"counter:\" + counter.a + \"---\" + counter.b}&lt;/div&gt;\n      &lt;button onClick={changeCounter}&gt;change counter&lt;/button&gt;\n      &lt;div&gt;num:&lt;/div&gt;\n      {number.map((item, index) =&gt; {\n        return &lt;p key={index}&gt;{item}&lt;/p&gt;;\n      })}\n      &lt;button onClick={changeNumber}&gt;change number&lt;/button&gt;\n    &lt;/&gt;\n  );\n};</pre><p><br></p>"}}