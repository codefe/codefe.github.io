{"sta":1,"data":{"subTitle":"错误边界","content":"<p>理解<br></p><p>错误边界(Error boundary): 用来捕获后代组件错误，渲染出备用页面\n<br>\n<br>特点\n<br>只能捕获后代组件生命周期产生的错误，不能捕获自己组件产生的错误和其他组件在合成事件、定时器中产生的错误 \n<br>\n<br>使用方式(发生错误组件的父组件中使用)\n<br>getDerivedStateFromError配合componentDidCatch\n<br>\n<br>//生命周期函数，一旦后台组件报错，就会触发</p><pre>static getDerivedStateFromError(error){\n    console.log(error)\n    //在render之前触发\n    //返回新的state\n    return {\n        hasError: true\n    }\n}\n\ncomponentDidCatch(error,info){\n    //统计页面的错误，发送给服务器，然后再通知程序员改bug,\n    console.log(error,info)\n}</pre><p>例子</p><pre>import React,{Component} from 'react'\nimport Child from './Child'\n\nexport default class Parent extends Component {\n    \n    state = {\n        hasError: ''//用于标识子组件是否产生错误\n    }\n\n    //当Parent的子组件出现报错时，会触发getDerivedStateFromError调用,并携带错误信息\n    static getDerivedStateFromError(error){\n        console.log(error)\n        return {hasError:error}\n    }\n\n    render() {\n        return (\n            &lt;div&gt;\n                &lt;h2&gt;我是Parent组件&lt;/h2&gt;\n                {this.state.hasError ? &lt;h2&gt;网络不稳定，稍后再试&lt;/h2&gt; : &lt;Child/&gt;}\n            &lt;/div&gt;\n        )\n    }\n}</pre><p><br></p>"}}