{"sta":1,"data":{"subTitle":"jsx中直接引入svg","content":"<p>svg想必大家在项目里使用的场景也不少，这里先用 JSX 引入的 svg 内容和使用 img 标签引入的 svg 图片两种方式，带大家感受一下<br></p><pre>import React from \"react\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            &lt;div className=\"content\"&gt;\n                &lt;p&gt;This is content&lt;/p&gt;\n                &lt;p className=\"row\" &gt;\n                    &lt;span&gt; 使用 img 标签引入 svg：&lt;/span&gt;\n                     &lt;img\n                        className=\"thumb\"\n                        alt=\"thumb\"\n                        src=\"https://storage.360buyimg.com/imgtools/90f8615bcb-9b9c2970-8886-11eb-902f-6b10ea9a773b.svg\"\n                    /&gt;\n                &lt;/p&gt;\n                &lt;p className=\"row\" &gt;\n                    &lt;span&gt; 直接在 JSX 中引入 svg：&lt;/span&gt;\n                     // 以下是cdn上的svg文件\n                    &lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#000000\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" &gt;\n                        &lt;path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"&gt;&lt;/path&gt;\n                    &lt;/svg&gt;\n                &lt;/p&gt;\n            &lt;/div&gt;\n        )\n    }\n}\n\nexport default App;</pre><p>运行过程如下：\n<br>很明显，使用 JSX 引入的 svg 内容是和文本内容一起渲染完成的，而使用 img 标签引入的 svg 图片仍然是在延迟后才出现，会让用户有闪烁的感觉。这是因为请求存储在cdn上的svg文件花费了一些时间，在页面延迟获取到文件后，浏览器才真正可以开始渲染图片。</p><p><h3>优化方案：\n</h3>那此时有些同学可能又会担心直接将大量 svg 代码插入在 JSX 中有些不美观，影响其他代码的观感。其实我们可以将这段 svg 代码单独抽离出来，作为一个无状态组件，甚至我们可以传入 props，来控制一部分 svg 的样式，免去样式不同而下载多次 svg 文件的问题。</p><pre>import React from 'react'\n\nconst Thumb = props =&gt; {\n    return (\n        &lt;svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"#000000\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            {...props} &gt;\n            &lt;path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"&gt;&lt;/path&gt;\n        &lt;/svg&gt;\n    );\n}\n\nexport default Thumb;</pre><p>可以看到我们将 svg 写在了一个无状态组件中，并且将传入的 props 在 svg 标签内使用扩展运算符展开，来达到传入属性和覆盖原有属性的目的。</p>"}}