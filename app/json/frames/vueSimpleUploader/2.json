{"sta":1,"data":{"subTitle":"基于vue-simple-uploader封装全局上传组件","content":"<p>引入vue-simple-uploader后，我们开始封装全局的上传组件globalUploader.vue，代码比较长，就不整个放出来了，源码放到github上了，这里一步一步地讲解。\n\ntemplate部分如下，本人自定义了模板和样式，所以html部分比较长，css部分暂时不列出，大家可以根据自己的ui去更改，主要关注一下uploader这个组件的options参数及文件added、success、progress、error几个事件：</p><pre><code>&lt;template&gt;\n    &lt;div id=\"global-uploader\"&gt;\n\n        &lt;!-- 上传 --&gt;\n        &lt;uploader\n                ref=\"uploader\"\n                :options=\"options\"\n                :autoStart=\"false\"\n                @file-added=\"onFileAdded\"\n                @file-success=\"onFileSuccess\"\n                @file-progress=\"onFileProgress\"\n                @file-error=\"onFileError\"\n                class=\"uploader-app\"&gt;\n            &lt;uploader-unsupport&gt;&lt;/uploader-unsupport&gt;\n\n            &lt;uploader-btn id=\"global-uploader-btn\" :attrs=\"attrs\" ref=\"uploadBtn\"&gt;选择文件&lt;/uploader-btn&gt;\n\n            &lt;uploader-list v-show=\"panelShow\"&gt;\n                &lt;div class=\"file-panel\" slot-scope=\"props\" :class=\"{'collapse': collapse}\"&gt;\n                    &lt;div class=\"file-title\"&gt;\n                        &lt;h2&gt;文件列表&lt;/h2&gt;\n                        &lt;div class=\"operate\"&gt;\n                            &lt;el-button @click=\"fileListShow\" type=\"text\" :title=\"collapse ? '展开':'折叠' \"&gt;\n                                &lt;i class=\"iconfont\" :class=\"collapse ? 'icon-fullscreen': 'icon-minus-round'\"&gt;&lt;/i&gt;\n                            &lt;/el-button&gt;\n                            &lt;el-button @click=\"close\" type=\"text\" title=\"关闭\"&gt;\n                                &lt;i class=\"iconfont icon-close\"&gt;&lt;/i&gt;\n                            &lt;/el-button&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n\n                    &lt;ul class=\"file-list\"&gt;\n                        &lt;li v-for=\"file in props.fileList\" :key=\"file.id\"&gt;\n                            &lt;uploader-file :class=\"'file_' + file.id\" ref=\"files\" :file=\"file\" :list=\"true\"&gt;&lt;/uploader-file&gt;\n                        &lt;/li&gt;\n                        &lt;div class=\"no-file\" v-if=\"!props.fileList.length\"&gt;&lt;i class=\"nucfont inuc-empty-file\"&gt;&lt;/i&gt; 暂无待上传文件&lt;/div&gt;\n                    &lt;/ul&gt;\n                &lt;/div&gt;\n            &lt;/uploader-list&gt;\n\n        &lt;/uploader&gt;\n\n    &lt;/div&gt;\n&lt;/template&gt;</code></pre><p>组件中的data部分：</p><pre><code>data() {\n    return {\n        options: {\n            target: 'http://xxxxx/xx', // 目标上传 URL\n            chunkSize: '2048000',   //分块大小\n            fileParameterName: 'file', //上传文件时文件的参数名，默认file\n            maxChunkRetries: 3,  //最大自动失败重试上传次数\n            testChunks: true,     //是否开启服务器分片校验\n            // 服务器分片校验函数，秒传及断点续传基础\n            checkChunkUploadedByResponse: function (chunk, message) {\n                let objMessage = JSON.parse(message);\n                if (objMessage.skipUpload) {\n                    return true;\n                }\n\n                return (objMessage.uploaded || []).indexOf(chunk.offset + 1) &gt;= 0\n            },\n            headers: {\n          // 在header中添加的验证，请根据实际业务来\n                Authorization: \"Bearer \" + Ticket.get().access_token\n            },\n        },\n        attrs: {\n         // 接受的文件类型，形如['.png', '.jpg', '.jpeg', '.gif', '.bmp'...] 这里我封装了一下\n            accept: ACCEPT_CONFIG.getAll()\n        },\n        panelShow: false,   //选择文件后，展示上传panel\n    }\n},</code></pre><p>全局引用：\n<br>在app.vue中引用，即作为全局的组件一直存在，只不过在不使用的时候把上传界面隐藏了</p><pre><code>&lt;global-uploader&gt;&lt;/global-uploader&gt;</code></pre><p><br></p>"}}