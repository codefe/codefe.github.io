{"sta":1,"data":{"subTitle":"vue中修改props传进来的值","content":"<p>vue是单向数据流，一般我们也不会在子组件里面修改父组件传进来的值，但总有需要修改的时候。<br></p><p>\n<br>前段时间一个项目中有遇到上述情况，假设我直接传进来一个list， 当时我直接在里面改了list，但是却惊讶的发现没有报错，以前好像有遇到直接修改抛出错误的，但这次却没有，当时也没有多想，最近空闲下来又想了下，发现自己确实**了(此处省略两字_)。原因如下：\n<br>\n<br>因为我传进来的list是个数组，属于引用类型，修改子组件相当于把父组件也同时修改了，所以没有报错，如果是个基本类型的数据直接修改那么vue会报错。\n<br>\n<br>在子组件修改props的方法：\n<br>\n<br>1. 子组件data中拷贝一份，注意引用类型需要深拷贝，根据需求可以watch监听&nbsp;<br></p><pre>data() {\n    return {\n        newList: this.list.slice()\n    }\n},\nwatch: {\n    list(newVal) {\n        this.newList = newVal\n    }\n}</pre><p>2. 通过计算属性修改\n<br>\n</p><pre>computed: {\n    nList() {\n        return this.list.filter(item =&gt; {\n            return item.isChecked\n        })\n    }\n}</pre><p><br></p><p>3. 通过研究大佬们的写法又发现了一种修改方式： sync修饰符\n<br>父组件 传进去的时候加上 .sync\n<br>\n<br>子组件 通过this.$emit(‘update:xxx’, params)&nbsp;<br></p><pre>// 父组件\n&lt;todo-list :list.sync=\"list\" /&gt;\n \n// 子组件\nmethodName(index) {\n    this.$emit('update:list', this.newList)\n}</pre><p><br></p>"}}