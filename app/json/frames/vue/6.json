{"sta":1,"data":{"subTitle":"effect","content":"<p>Vue3 中提供了 effect，当 effect 回调函数中引用的响应式数据变化时，会触发 effect 回调函数的执行，相当于 vue2 中的 watcher。我们来看下面的应用示例：</p><pre><code>// /vue-next/public/index.html\n&lt;script src=\"./vue.reactivity.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n  const { reactive, effect } = VueReactivity;\n  const proxy = reactive({\n    name: 'ES6 Wiki',\n  })\n\n  effect(() =&gt; {\n    document.getElementById('app').innerHTML = proxy.name;\n  })\n\n  setTimeout(() =&gt; {\n    proxy.name = 'ES6 实战'\n  }, 1000)\n&lt;/script&gt;</code></pre><p>上面的代码中我们引入了 Vue3 的 reactivity 库，初始化网页内容后，在 1 秒以后更新网页中的内容。</p><p>&nbsp;Vue3 中 effect 函数，它是一个响应式的函数，在源码实现过程中需要注意几点：\n<br>\n<br>使用 WeakMap 数据结构来存放 target 上的 key 和 effect 的关系；\n<br>对 effect 的嵌套处理时，引入了栈的方式来控制当前的 activeEffect 值；\n<br>在使用数组时，在对 length 直接修改等操作时进行特殊的处理。</p><p><br></p>"}}