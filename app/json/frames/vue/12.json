{"sta":1,"data":{"subTitle":"Vue中常见的性能优化","content":"<p></p><div><div><li>编码优化<br>\n(1). 不要将所有的数据放在<code>data</code>里,<code>data</code>中的数据都会增加 <code>gette</code>r和<code>setter</code>,收收集对应的 <code>watcher</code><br>\n(2). 在 <code>v-for</code> 时给每项元素绑定事件必须使用时间代理<br>\n(3). SPA页面采用 <code>keep-alive</code> 缓存组件<br>\n(4). 拆分组件(提高复用性,增加代码的可维护性,减少不必要的渲染)<br>\n(5). <code>v-if</code> 当值为 <code>false</code> 时内部指令不执行具有阻断功能，很多情况下使用<code>v-if</code> 代替 <code>v-show</code><br>\n(6). 使用 key 保证唯一性<br>\n(7). 使用 <code>Object.freeze</code> 冻结数据,冻结后不再有 <code>getter</code> 和 <code>setter</code><br>\n(8). 合理使用路由懒加载和异步组件<br>\n(9). 数据持久化问题如: 防抖、节流</li>\n<li>Vue 加载性能优化<br>\n(1). 第三方模块按需导入(<code>babel-plugin-component</code>)<br>\n(2). 滚动可视区域动态加载(<code>vue-virtual-scroll-list</code> / 'vue-virtual-scroller') -- 长列表优化<br>\n(3). 图片懒加载(<code>vue-lazyload</code>)</li>\n<li>用户体验<br>\n(1). <code>app-skeleton</code>  骨架屏<br>\n(2). <code>app-sheapp</code> 壳</li>\n<li>SEO 优化<br>\n(1). 预加载插件 <code>prerender-spa-plugin</code><br>\n(2). 服务端渲染 ssr</li>\n<li>打包优化<br>\n(1). 使用 CDN 的方式加载第三方模块<br>\n(2). 多线程打包<br>\n(3). <code>splitChunk</code> 抽离公共文件</li>\n<li>缓存 压缩<br>\n(1). 客户端缓存和服务端缓存<br>\n(2). 服务端gzip压缩</li></div><br></div>"}}