{"sta":1,"data":{"subTitle":"vue3.x API 自动导入","content":"<p>setup语法让我们不用再一个一个的把变量和方法都return出去就能在模板上使用，大大的解放了我们的双手。然而对于一些常用的VueAPI，比如ref、computed、watch等，还是每次都需要我们在页面上手动进行import。\n我们可以通过<b><font color=\"#c24f4a\">unplugin-auto-import</font></b>实现自动导入，无需import即可在文件里使用Vue的API。</p><p>&nbsp;<span style=\"background-color: rgb(241, 241, 241); font-family: &quot;Lucida Console&quot;, Consolas, Monaco; white-space: pre-wrap;\">npm i unplugin-auto-import -D</span></p><p>配置</p><pre>// vite.config.ts\nimport { defineConfig } from 'vite'\nimport AutoImport from 'unplugin-auto-import/vite'\n\nexport default defineConfig({\n  plugins: [\n    AutoImport({\n      // dts: 'src/auto-imports.d.ts', // 可以自定义文件生成的位置，默认是根目录下\n      imports: ['vue']\n    })\n  ]\n})</pre><p>安装配置完会自动生成auto-imports.d.ts文件。</p><pre>// auto-imports.d.ts\n// Generated by 'unplugin-auto-import'\n// We suggest you to commit this file into source control\ndeclare global {\n  const computed: typeof import('vue')['computed']\n  const createApp: typeof import('vue')['createApp']\n  const customRef: typeof import('vue')['customRef']\n  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']\n  const defineComponent: typeof import('vue')['defineComponent']\n  const effectScope: typeof import('vue')['effectScope']\n  const EffectScope: typeof import('vue')['EffectScope']\n  const getCurrentInstance: typeof import('vue')['getCurrentInstance']\n  const getCurrentScope: typeof import('vue')['getCurrentScope']\n  const h: typeof import('vue')['h']\n  const inject: typeof import('vue')['inject']\n  const isReadonly: typeof import('vue')['isReadonly']\n  const isRef: typeof import('vue')['isRef']\n  // ...\n}\nexport {}</pre><p>使用</p><pre>&lt;script lang=\"ts\" setup name=\"OrderList\"&gt;\n// 不用import，直接使用ref\nconst count = ref(0)\n\nonMounted(() =&gt; {\n  console.log('mounted===')\n})\n&lt;/script&gt;</pre><p>上面我们在vite.config.ts的配置里只导入了vue，imports: ['vue']，除了vue的你也可以根据文档导入其他的如vue-router、vue-use等。<br>个人建议只对一些比较熟悉的API做自动导入，如vue的API我们在开发时都比较熟悉，闭着眼都能写出来，对于一些不大熟悉的像VueUse这种库，还是使用import更好一些，毕竟编辑器都有提示，不易写错。<br><br></p><h3>解决eslint报错问题</h3><p>在没有import的情况下使用会导致eslint提示报错，可以通过在eslintrc.js安装插件**<b><font color=\"#c24f4a\">vue-global-api</font></b>**解决。</p><pre>// 安装依赖\nnpm i vue-global-api -D\n\n// eslintrc.js\nmodule.exports = {\n  extends: [\n    'vue-global-api'\n  ]\n}</pre><p><br></p>"}}