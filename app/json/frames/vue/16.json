{"sta":1,"data":{"subTitle":"vue使用cdn","content":"<p></p><div><div><p>在Vue项目中，引入到工程中的所有js、css文件，编译时都会被打包进vendor.js，浏览器在加载该文件之后才能开始显示首屏。若是引入的库众多，那么vendor.js文件体积将会相当的大，影响首开的体验。</p>\n<p>解决方法是，将引用的外部js、css文件剥离开来，不编译到vendor.js中，而是用资源的形式引用，这样浏览器可以使用多个线程异步将vendor.js、外部的js等加载下来，达到加速首开的目的。</p>\n<p>外部的库文件，可以使用CDN资源，或者别的服务器资源等。</p>\n<p>下面，以引入vue、vuex、vue-router为例，说明处理流程。</p></div><pre><code>module.exports = {\n  context: path.resolve(__dirname, '../'),\n  entry: {\n    app: './src/main.js'\n  },\n  externals:{\n    'vue':'Vue',\n    'vue-router':'VueRouter',\n    'vuex':'Vuex'\n  },\n  // 格式为'aaa':'bbb'，其中，aaa表示要引入的资源的名字，bbb表示该模块提供给外部引用的名字，由对应的库自定。例如，vue为Vue，vue-router为VueRouter</code></pre><p>去掉原有的引用直接使用就可以了，否则还是会打包\n<br>\n<br>具体步骤为\n<br>\n<br>1、引入\n<br>在bulid/webpack.base.conf.js文件中，增加externals，将引用的外部模块导入，如下：</p><pre><code>module.exports = {\n  entry: {\n    app: './src/main.js'\n  },\n  externals:{\n    'vue': 'Vue',\n    'vue-router': 'VueRouter',\n    'vuex':'Vuex'\n  }</code></pre><p>2、在index.html中引入cdn。推荐引入 百度静态资源库的\n<br>地址为：https://www.bootcdn.cn/</p><pre><code>&lt;body&gt;\n    &lt;div id=\"app\"&gt;&lt;/div&gt;\n    &lt;script src=\"https://cdn.bootcss.com/vue/2.5.2/vue.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.bootcss.com/vue-router/3.0.1/vue-router.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://cdn.bootcss.com/vuex/3.0.1/vuex.min.js\"&gt;&lt;/script&gt;\n  &lt;/body&gt;</code></pre><p>注意一点：<br>格式为 'aaa' : 'bbb', 其中，aaa表示要引入的资源的名字，bbb表示该模块提供给外部引用的名字，由对应的库自定。例如，vue为Vue，vue-router为VueRouter.<br></p><p>3、去掉原有的引用\n<br>main.js中</p><pre><code>// import Vue from 'vue'\n// import Router from 'vue-router'</code></pre><p>去掉Vue.use(XXX)，如：</p><pre><code>// Vue.use(Router)</code></pre><p>4、重新npm run build，会看到 vendor.js体积有所下降了<br>通过开发者模式的Network工具，可以看到vue.js、vuex.js、vendor.js等文件会分别由一个线程进行加载。且因为使用了CDN，减轻了带宽压力。<br><br><br></p></div>"}}