{"sta":1,"data":{"subTitle":"Vue2.0 全局自定义组件","content":"<h3>一、需求</h3><p>通过 自定义全局组件 做一个 Loading 组件。<br><h4>主要的功能：</h4><blockquote>css3 loading 动画<br>\n通过 props 控制显示输出\n</blockquote><h3>二、Vue 全局自定义组件\n</h3>vue 全局自定义组件的关键在于 index.js 中的 install 函数。 可以进行 Vue.use。<br>Vue 的组件如果想去 use 使用，都是这么的套路，下图是 elementUI 的单独的一个组件。</p><p><img src=\"/app/json/frames/vue/imgs/1.jpg\" style=\"max-width: 100%;\"></p><p>代码如下：</p><pre>import Alert from './src/main';\n\n/* istanbul ignore next */\nAlert.install = function(Vue) {\n  Vue.component(Alert.name, Alert);\n};\n\nexport default Alert;</pre><p><h3>三、打造自己的 Loading 组件\n</h3>上面的需求中提到了，首先一个 css3 的 loading 效果：<br>关键：<br><blockquote>一个 transition 加一个 fade 效果<br>\n通过 v-show 控制 loading 的显示<br>\n通过 props 的 show 可以由父组件进行控制显示和隐藏\n</blockquote><h4>组件需要 index.js 的 install,代码如下：</h4></p><pre>import LoadingComponent from './Loading.vue';\n\nconst Loading = {\n    install(Vue){\n        Vue.component('loading',LoadingComponent);\n    }\n}\n\nexport default Loading;</pre><h4>vue 组件 Loading.vue 代码如下:</h4><pre>&lt;template&gt;\n&lt;transition name=\"loading\"&gt;\n    &lt;div class=\"loading-container\" v-show=\"show\"&gt;\n       &lt;div class=\"spinner\"&gt;\n            &lt;div class=\"rect1\"&gt;&lt;/div&gt;\n            &lt;div class=\"rect2\"&gt;&lt;/div&gt;\n            &lt;div class=\"rect3\"&gt;&lt;/div&gt;\n            &lt;div class=\"rect4\"&gt;&lt;/div&gt;\n            &lt;div class=\"rect5\"&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/transition&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n    props:{\n            show:Boolean\n        }\n}\n&lt;/script&gt;\n\n&lt;style&gt;\n*{\n    margin:0;\n    padding:0;\n    box-sizing: border-box;\n}\n.loading-enter-active,.loading-leave-active{\n    transition:all 1s;\n}\n.loading-enter,.loading-leave-to{\n    opacity: 0; \n}\n.loading-container{\n    position: fixed;\n    background-color:rgba(0,0,0,0.4);\n    top:0;\n    left:0;\n    text-align:center;\n    width:100%;\n    height:100%;\n    z-index:999;\n}\n.spinner {\n    position: absolute;\n    top:50%;\n    left:50%;\n    transform: translate(-50%,-50%);\n    width: 50px;\n    height: 60px;\n    text-align: center;\n    font-size: 10px;\n}\n \n.spinner &gt; div {\n  background-color: #FF3399;\n  height: 100%;\n  width: 6px;\n  display: inline-block;\n   \n  -webkit-animation: stretchdelay 1.2s infinite ease-in-out;\n  animation: stretchdelay 1.2s infinite ease-in-out;\n}\n \n.spinner .rect2 {\n  -webkit-animation-delay: -1.1s;\n  animation-delay: -1.1s;\n}\n \n.spinner .rect3 {\n  -webkit-animation-delay: -1.0s;\n  animation-delay: -1.0s;\n}\n \n.spinner .rect4 {\n  -webkit-animation-delay: -0.9s;\n  animation-delay: -0.9s;\n}\n \n.spinner .rect5 {\n  -webkit-animation-delay: -0.8s;\n  animation-delay: -0.8s;\n}\n \n@-webkit-keyframes stretchdelay {\n  0%, 40%, 100% { -webkit-transform: scaleY(0.4) } \n  20% { -webkit-transform: scaleY(1.0) }\n}\n \n@keyframes stretchdelay {\n  0%, 40%, 100% {\n    transform: scaleY(0.4);\n    -webkit-transform: scaleY(0.4);\n  }  20% {\n    transform: scaleY(1.0);\n    -webkit-transform: scaleY(1.0);\n  }\n}\n&lt;/style&gt;</pre><h3>四、组件的使用</h3><p>引入组件并且 use：</p><pre>import Loading from './components/loading';\nVue.use(Loading);</pre><p>组件中使用：</p><pre>&lt;loading :show=\"loading\"/&gt;</pre><p><br></p>"}}