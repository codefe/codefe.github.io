{"sta":1,"data":{"subTitle":"Vue.use与Vue.component的区别","content":"<p></p><div><div><p>都用于注册全局组件/插件的</p>\n<p><code>Vue.component()</code> 每次只能注册一个组件，功能很单一。<br>\nVue.component('draggable', draggable)</p>\n<p><code>Vue.use()</code> 内部调用的仍是 <code>Vue.component()</code> 去注册全局组件/插件，但它可以做更多事情，比如多次调用 Vue.component() 一次性注册多个组件，还可以调用Vue.directive()、Vue.mixins()、Vue.prototype.xxx=xxx 等等，其第二个可选参数又可以传递一些数据</p></div><pre><code>Vue.use({\n    install:function (Vue, options) {\n        // 接收传递的参数: { name: 'My-Vue', age: 28 }\n        console.log(options.name, options.age)\n        Vue.directive('my-directive',{\n            inserted(el, binding, vnode) { }\n        })\n        Vue.mixin({\n            mounted() { }\n        })\n        Vue.component('draggable', draggable)\n        Vue.component('Tree', Tree)\n    }\n}, \n{ name: 'My-Vue', age: 28 })</code></pre><p>在main.js 文件里 动态注册全局组件时, 或用到 require.context<br><br>require.context(): 一个 Webpack 的API，获取一个特定的上下文（创建自己的context），主要用来实现自动化导入模块。<br>它会遍历文件夹中的指定文件，然后自动化导入，而不需要每次都显式使用 import / require 语句导入模块！<br>在前端工程中，如果需要一个文件夹引入很多模块，则可以使用 require.context()<br></p><pre><code>require.context(directory, useSubdirectories = false, regExp = /^\\.\\//)</code></pre><p>directory {String} 读取目录的路径\n<br>useSubdirectories {Boolean} 是否递归遍历子目录\n<br>regExp {RegExp} 匹配文件的正则</p><p><br></p></div>"}}