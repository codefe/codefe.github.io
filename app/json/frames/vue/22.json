{"sta":1,"data":{"subTitle":"Vue自定义指令实现按钮级权限控制功能","content":"<h3><span><strong>思路：</strong></span></h3><ol><li><span>登录：当用户填写完账号和密码后向服务端验证是否正确，验证通过之后，服务端会返回一个token，拿到token之后（我会将这个token存贮到sessionStorage中，保证刷新页面后能记住用户登录状态），前端会根据token再去拉取一个 user_info 的接口来获取用户的详细信息（如用户权限，用户名等等信息）。</span></li><li><span>权限验证：通过token获取用户对应的 role，自定义指令，获取路由meta属性里btnPermissions( 注： meta.btnPermissions是存放按钮权限的数组，在路由表里配置 )，然后判断role是否在btnPermissions数组里，若不在即删除该按钮DOM。</span></li></ol><p><span>按钮权限也可以用v-if判断，但是如果页面过多，每个页面页面都要获取用户权限role和路由表里的meta.btnPermissions,然后再做判断，感觉有点麻烦，而自定义指令，只需在权限按钮加入该指令即可。</span></p><p></p><h3><span><strong>路由配置：</strong></span></h3><pre><code>path: '/permission',\n  component: Layout,\n  name: '权限测试',\n  meta: { btnPermissions: ['admin','supper','normal'] }, //页面需要的权限\n  children: [\n   {\n    path: 'supper',\n    component: _import('system/supper'),\n    name: '权限测试页',\n    meta: { btnPermissions: ['admin','supper'] } //页面需要的权限\n   },\n   {\n    path: 'normal',\n    component: _import('system/normal'),\n    name: '权限测试页',\n    meta: { btnPermissions: ['admin'] } //页面需要的权限\n   }\n  ]</code></pre><p>注：如果按钮的权限是由后台配置并返回的此处可不设置，从后台获取权限即可\n<br>\n<br><h3>自定义指令：</h3></p><pre><code>import Vue from 'vue'\n/**权限指令**/\n\n　　const&nbsp;has&nbsp;=&nbsp;Vue.directive('has',&nbsp;{\n&nbsp;&nbsp;　　//&nbsp;当被绑定的元素插入到&nbsp;DOM&nbsp;中时……\n&nbsp;&nbsp;　　inserted:&nbsp;function&nbsp;(el,&nbsp;binding,&nbsp;vnode)&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;　　let&nbsp;btnPermissions&nbsp;=&nbsp;'';\n&nbsp;&nbsp;&nbsp;&nbsp;　　//&nbsp;获取指令按钮权限\n&nbsp;&nbsp;&nbsp;&nbsp;　　let&nbsp;characteristic&nbsp;=&nbsp;binding.value;\n&nbsp;&nbsp;&nbsp;&nbsp;　　if&nbsp;(characteristic)&nbsp;btnPermissions&nbsp;=&nbsp;characteristic;\n&nbsp;&nbsp;&nbsp;&nbsp;　　//&nbsp;获取路由按钮权限\n&nbsp;&nbsp;&nbsp;&nbsp;　　btnPermissions&nbsp;=&nbsp;vnode.context.$route.meta.btnPermissions.split(',');\n&nbsp;&nbsp;&nbsp;&nbsp;　　if&nbsp;(!Vue.prototype.$_has(btnPermissions))&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　el.parentNode.removeChild(el);\n&nbsp;&nbsp;&nbsp;&nbsp;　　}\n&nbsp;&nbsp;　　}\n　　});\n\n\n// 权限检查方法\nVue.prototype.$_has = function (value) {\n let isExist = false;\n let btnPermissionsStr = sessionStorage.getItem(\"btnPermissions\");\n if (btnPermissionsStr == undefined || btnPermissionsStr == null) {\n  return false;\n } let res = value.filter((x) =&gt; { 　　return btnPermissionsStr.include(x) })\n if (res.length &gt; 0) isExist = truereturn isExist;\n};\nexport {has}</code></pre><p><h3>然后在main.js文件引入文件</h3><blockquote>import has from './public/js/btnPermissions.js';\n</blockquote><h3>页面中按钮只需加v-has即可</h3><blockquote>&lt;el-button @click='editClick' type=\"primary\" v-has&gt;编辑&lt;/el-button&gt;\n</blockquote>权限前后端都可进行控制，但是尽可能的在前端就进行拦截验证。借用一句经典名言：永远不相信用户输入！</p><p><br></p>"}}