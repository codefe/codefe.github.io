{"sta":1,"data":{"subTitle":"vue-loader 的编译规则","content":"<blockquote>默认情况下，vue-loader 使用 css-loader 和 Vue 模版编译器自动处理样式和模版文件。在编译过程中，所有的资源路径例如 &lt;img src=\"...\"&gt;、background: url(...) 和 @import 会作为模块依赖。<br>例如，url(./image.png) 会被转换为 require('./image.png')，而\n<br>&lt;img src=\"../image.png\"&gt;<br>\n　将会编译为：<br>\ncreateElement('img', { attrs: { src: require('../image.png') }})\n<br>这是 vue-loader 的第一步，因为 img 标签是写在 template 中的（也就是 vue 文件），因此会进行编译。\n</blockquote><p>而有的时候写的 img 却无法打包出来，这与 vue 的编译规则有关：</p><h3>vue-loader 的编译规则</h3><ol><li>如果路径是绝对路径，会原样保留。\n</li><li>如果路径以 . 开头，将会被看作相对的模块依赖，并按照你的本地文件系统上的目录结构进行解析。\n</li><li>如果路径以 ~ 开头，其后的部分将会被看作模块依赖。这意味着你可以用该特性来引用一个 node 依赖中的资源\n</li><li>(13.7.0+) 如果路径以@ 开头，也会被看作模块依赖。如果你的 webpack 配置中给 @ 配置了 alias，这就很有用了。所有 vue-cli 创建的项目都默认配置了将 @ 指向 /src。</li></ol><p>如果 template 中的 img 标签写法如下：\n<br><blockquote>&lt;img src=\"assets/logo.png\"&gt;\n</blockquote>这会原样保留，因为考虑到可能使用 cdn 或者其他 url 的图片。\n<br>\n<br>如果下面的写法则会正常编译：<br><blockquote>&lt;img src=\"./assets/logo.png\"&gt;\n</blockquote>编译之后，因为转换成了 require('./assets/logo.png') 这种形式，所以会通过 file-loader 进行图片打包。</p><p><br></p><p><br></p><p><br></p>"}}