{"sta":1,"data":{"subTitle":"flexible做了什么","content":"<p>建议对JS做内联处理，在所有资源加载之前执行这个JS。执行这个JS后，会在元素上增加一个data-dpr属性，以及一个font-size样式。JS会根据不同的设备添加不同的data-dpr值，比如说2或者3，同时会给html加上对应的font-size的值，比如说75px。&nbsp;如此一来，页面中的元素，都可以通过rem单位来设置。他们会根据html元素的font-size值做相应的计算，从而实现屏幕的适配效果。<br></p><ol><li>动态改写标签\n</li><li>给&lt;html&gt;元素添加data-dpr属性，并且动态改写data-dpr的值\n</li><li>给&lt;html&gt;元素添加font-size属性，并且动态改写font-size的值</li></ol><pre><code>提示\n目前Flexible会将视觉稿分成**100份**（主要为了以后能更好的兼容vh和vw），而每一份被称为一个单位a。同时1rem单位被认定为10a。针对750*1335这份视觉稿可以计算出：\n\n换算\n1a = 7.5px\n1rem = 75px</code></pre><p>上面这一小段提示可以说是 flexible.js 的精华所在了。但你只需要记住1rem = 75px 就好。比如这个 LOGO 距离左边60px，上边42px，图片自身宽、高都是80px。当然你也可以直接用这些数值：\n<br>\n<br><h3>传统做法\n</h3><blockquote>.logo{<br>\nwidth:80px;<br>\nheight:80px;<br>\nmargin-left:60px;<br>\nmargin-top:42px;<br>\n}\n</blockquote>但我们是要在移动端做适配的，这样写还有什么适配可言？我们可以把上面的像素转换成 rem。rem 是根据根元素（html 的字体大小）来进行计算的，这样就可以很方便地让我们把设计稿等比缩放到与实践终端相匹配的大小。\n<br>\n<br><h3>移动适配\n</h3><blockquote>.logo{<br>\nwidth: 1.066667rem;<br>\nheight: 1.066667rem;<br>\nmargin-left: 0.8rem;<br>\nmargin-top: 0.56rem;<br>\n}\n</blockquote>说得简单点就是 rem 相当于我们平常用的百分比，只不过 rem 是相对根元素的。而我们的根元素是根据终端屏幕大小来动态设置的，所以不管是 iphone 6 plus （尺寸为414*736）还是 iphone 6 （尺寸为375*667），或者是其它任何终端设备都可以很完美地还原设计稿。</p><h3>cssrem</h3><p>还有一个关于 px 转 rem 的，你也不用自己一个一个手动去换算，这里有一个插件你可以安装下，它会自动地帮你把 px 换算成 rem 。</p><p><a href=\"https://github.com/flashlizi/cssrem\" target=\"_blank\">https://github.com/flashlizi/cssrem</a><br></p><p><br></p><p><br></p>"}}