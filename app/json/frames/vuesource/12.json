{"sta":1,"data":{"subTitle":"Vue中父子组件的调用顺序","content":"<p></p><div><div><p>组件的调用都是先父后子，渲染完成的过程顺序都是先子后父</p><p><br>\n组件的销毁操作是先父后子，销毁完成的顺序是先子后父</p><p><br>\n在页面渲染的时候，先执行父组件的 <code>beforeCreate -&gt; created -&gt; befroreMount</code>，当父组件实例化完成的时候会调用 <code>rander</code> 方法，判断组件是不是有子组件，如果有子组件则继续渲染子组件以此类推。当子组件实例化完成时候，会把子组件的插入方法先存起来放到 <code>instertedVNodeQueue</code> 队列里,  最后会调用 <code>invokeIntertHook</code> 方法把当前的队列依次执行。</p><p><br>\n更新也是一样，<code>先父beforeUpdate -&gt; 子beforeUpdate</code> 再到 <code>子 updated -&gt; 父 updated</code></p>\n<ol>\n<li><p>加载渲染过程<br>\n<code>父beforeCreate-&gt; 父created-&gt; 父beforeMount-&gt; 子beforeCreate-&gt; 子created-&gt; 子beforeMount- &gt; 子mounted-&gt; 父mounted</code></p></li>\n<li><p>子组件更新过程<br>\n<code>父beforeUpdate-&gt; 子beforeUpdate-&gt; 子updated-&gt; 父updated</code></p></li>\n<li><p>父组件更新过程<br>\n<code>父beforeUpdate -&gt; 父updated</code></p></li>\n<li><p>销毁过程<br>\n<code>父beforeDestroy-&gt; 子beforeDestroy-&gt; 子destroyed-&gt; 父destroyed</code></p></li></ol></div><br></div>"}}