{"sta":1,"data":{"subTitle":"为什么使用异步组件","content":"<p>可使用异步的方式加载组件，减少打包体积,主要依赖 import() 语法，可实现文件的分割加载</p><pre><code>components:{\n  testCpt: (resove) =&gt; import(\"../components/testCpt\")  或\n  testCpt: r =&gt; require(['@/views/assetsInfo/assetsProofList'],r)\n}</code></pre><p>加载组件的时候，如果组件是个函数会调用 resolveAsyncComponent 方法, 并传入组件定义的函数 asyncFactory , 并让其马上执行。因为是异步的所以执行后并不会马上返回结果。而返回的是一个 promise，因此没有返回值, 返回的是一个占位符。</p><p>&nbsp;\n<br>加载完成后，会执行 factory 函数并传入了成功/失败的回调。在回调 resolve 成功的回调时会调用 forceRander 方法， 内部调用 $forceUpdate 强制刷新。之后 resolveAsyncComponent 判断已经执行成功，就是去创建组件、初始化组件和渲染组件。&nbsp;<br></p><p>&nbsp;</p>"}}