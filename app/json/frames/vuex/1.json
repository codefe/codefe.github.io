{"sta":1,"data":{"subTitle":"Vuex是什么? 怎么使用它? 哪种功能场景使用?","content":"<p></p><div><div><code>Vuex</code>  是一个专为 <code>Vue.js</code> 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。<br>\n<code>Vuex</code> 只能使用在 vue 上，因为其高度依赖于 vue 的双向绑定 和 插件系统。<br>\n调用了 <code>Vue.mixin</code>，在所有组件的 <code>beforeCreate</code> 生命周期注入了设置 <code>this.$store</code> 这样一个对象。<br>\n<strong>场景有</strong>：单页应用中，组件之间的状态、音乐播放、登录状态、加入购物车<br>\n<code>state</code>:  Vuex 使用单一状态树，存放的数据状态，不可以直接修改里面的数据。<br>\n<code>mutations</code>:  定义方法动态修改 Vuex 的 <code>store</code> 中的状态或数据。<br>\n<code>getters</code>:  类似 vue 的计算属性，主要用来过滤一些数据。<br>\n<code>actions</code>:  可以理解为通过将 <code>mutations</code> 里面处理数据的方法变成可异步的方法，简单的说就是异步操作数据。<code>view</code> 层通过 <code>store.dispath</code> 来分发 <code>action</code>。<br>\n<code>modules</code>:  项目特别复杂的时候，可以让每一个模块拥有自己的 <code>state、mutation、action、getters</code>，使得结构非常清晰，方便管理。</div><br></div>"}}