{"sta":1,"data":{"subTitle":"运行时申请用户权限","content":"<h3>一、说明</h3><p>chrome 扩展程序的原则之一便是最小权限，如果涉及到用户的隐私，则必须谨慎使用用户权限。<br>收集和传输任何用户数据的扩展程序必须符合用户隐私政策。<br>隐私政策地址：https://developer.chrome.com/webstore/program_policies#userdata\n<br>\n<br><h3>二、减少使用的权限\n</h3>并不是声明越多权限越好，manifest 中配置 permissions 字段必须声明扩展程序使用的权限，如果一个扩展程序启动时并不需要依赖某个权限，则不需要再 permissions 中声明，这种权限声明成 optional_permissions 更合适。\n<br>\n<br><h4>1、activeTab\n</h4>当用户使用扩展程序时，activeTab 权限才会授予对当前活动 tab 的扩展程序临时访问权限，当用户导航离开或关闭当前选项卡时，访问权限将被切断。<br>它可以作为 &lt;all_urls&gt; 的许多用途的替代品。&nbsp;<br></p><pre>{\n    \"name\": \"Very Secure Extension\",\n    \"version\": \"1.0\",\n    \"description\": \"Example of a Secure Extension\",\n    \"permissions\": [\"activeTab\"],\n    \"manifest_version\": 2\n  }</pre><p>activeTab 权限在安装期间不显示警告消息。\n<br>\n<br><h3>三、使用 Optional Permission\n</h3>optional_permission 能够让用户选择是否授权给扩展程序，如果扩展程序的某个功能对扩展程序的核心功能不是必不可少的，将其设置为可选，并将 API 或域移动到 optional_permissions 字段中。\n<br>\n<br>比如我需要在 https://www.google.com/ 域中使用 tabs 权限：</p><pre>{\n    \"name\": \"Very Secure Extension\",\n    ...\n    \"optional_permissions\": [ \"tabs\", \"https://www.google.com/\" ],\n    ...\n  }</pre><p>如果并不关心域，全部请求权限，则：</p><pre>{\n    \"permissions\": [\"storage\", \"declarativeContent\", \"contextMenus\"],\n    \"optional_permissions\": [ \"tabs\"],\n    \"background\": {\n      \"scripts\": [\"background.js\"],\n      \"persistent\": false\n    },\n    \"browser_action\":{\n        \"default_popup\": \"popup.html\"\n    },\n  }</pre><h4>请求权限</h4><pre>button.onclick = () =&gt; {\n    console.log('asd');\n    chrome.permissions.request({\n        permissions: ['tabs'],\n    }, (granted) =&gt; {\n        if (granted) {\n            alert('request permission Success!');\n        } else {\n            alert('request permission Failed!');\n        }\n    })\n}</pre><p>结果：</p><p><img src=\"/app/json/applets/chrome/imgs/26.jpg\" style=\"max-width:100%;\"></p><p><img src=\"/app/json/applets/chrome/imgs/25.jpg\" style=\"max-width:100%;\"></p><h4>移除权限</h4><pre>button2.onclick = () =&gt; {\n    console.log('asd');\n    chrome.permissions.remove({\n        permissions: ['tabs'],\n    }, (granted) =&gt; {\n        if (granted) {\n            alert('remove permission Success!');\n        } else {\n            alert('remove permission Failed!');\n        }\n    })\n}</pre><p><br></p><p><br></p>"}}