{"sta":1,"data":{"subTitle":"声明权限并告知用户","content":"<h3>一、描述</h3><p>扩展程序访问网站和大多数 Chrome API 的能力取决于其声明的权限。<br>权限应仅限于其功能所需的权限。<br>如果扩展程序受到攻击者的攻击，则限制权限减少对数据入侵的可能性。<br>可以通过显示的声明、最小的权限申请以及用户可选择权利来保护扩展程序以及扩展程序的使用用户。\n<br>\n<br><h3>二、组织扩展程序的权限\n</h3>permission 是指向 chrome API 或者是 match 匹配模式的已知字符串，权限是分为多个的，因此也就是一个列表。<br>permission 是在 manifest 的 permission 字段 和 optional_permissions 字段中配置说明的，其中 permissions 是扩展程序一定需要依赖的权限，而 optional_permission 则取决于用户是否愿意提供。&nbsp;<br></p><pre>{\n    \"name\": \"Permissions Extension\",\n    ...\n    // required permissions\n    \"permissions\": [\n      \"activeTab\",\n      \"contextMenus\",\n      \"storage\"\n    ],\n    // optional permissions\n    \"optional_permissions\": [\n      \"topSites\",\n      \"http://www.developer.chrome.com/*\"\n    ],\n        ...\n    \"manifest_version\": 2\n  }</pre><p>\n<br>我们应当尽量限制申请的权限，只要扩展程序的核心功能足够了即可。\n<br>\n<br>可选功能所需的权限应注册为可选权限。这允许用户决定他们愿意提供多少访问扩展以及期望哪些功能。\n<br>\n<br><h3>三、确定所需要的权限\n</h3>一个简单的扩展程序可能需要请求多个权限，多个权限在安装时会显示警告。<br>用户更有可能信任具有有限警告的扩展程序，或者扩展程序向用户解释了权限的作用。<br>因此，除了确定扩展程序的核心功能以及扩展程序所需的权限之外，如果需要提示警告的权限，尽量考虑绕过去。</p><p>&nbsp;<br></p><img src=\"/app/json/applets/chrome/imgs/16.png\" style=\"max-width:100%;\"><h3><span>四、触发带事件的可选权限</span></h3><div><span>官方有一个示例是覆盖一个新的&nbsp;tab&nbsp;页的，地址：&nbsp;https://developer.chrome.com/extensions/samples</span><span>#search:optional</span></div><div>用到了&nbsp;storage&nbsp;权限，不过不会警告</div><div>这个扩展程序还有一个额外的功能：显示用户的热门网站。此功能需要&nbsp;topSites&nbsp;权限，该权限会警告用户是否授权。</div><p><divcourier new',=\"\" monospace;font-weight:=\"\" normal;font-size:=\"\" 14px;line-height:=\"\" 19px;white-space:=\"\" pre;\"=\"\"><img src=\"/app/json/applets/chrome/imgs/17.png\" style=\"max-width:100%;\"></divcourier></p><p><divcourier new',=\"\" monospace;font-weight:=\"\" normal;font-size:=\"\" 14px;line-height:=\"\" 19px;white-space:=\"\" pre;\"=\"\"></divcourier></p><p>当你授权之后，会显示用户经常访问的页面</p><p><h3>四、替换 activeTab 权限\n</h3>activeTab 授予用户所在站点的临时访问权限，并允许扩展程序使用当前选项卡上的 tabs 权限。\n<br>在许多情况下，它取代了对 &lt;all_urls&gt; 的需求，并且在安装时不显示任何警告。\n<br>当用户调用扩展时，activeTab 权限授予对当前活动选项卡的扩展程序临时访问权限\n<br>如果扩展程序受到攻击，攻击者需要等待用户在获取访问权限之前调用扩展，并且该访问只会持续到导航或关闭选项卡。\n<br>虽然为选项卡启用了 activeTab 权限，但扩展可以：\n<br>\n<br>在选项卡上调用 tabs.executeScript 和 tabs.insertCSS 方法\n<br>通过 tabs.Tab 对象拿到 URL、标题和 favicon\n<br>使用 webRequest API 拦截选项卡中对选项卡主框架源的网络请求。扩展程序临时获取选项卡主框架源的主机权限。\n<br>下面的需要用户手动的启用 activeTab：\n<br>\n<br><blockquote>执行 browser_action<br>\n执行 page_action<br>\n执行 context menu item<br>\n执行 commands 配置的快捷键<br>\n执行 omnibox 的建议搜索\n</blockquote><h3>五、允许访问\n</h3>如果扩展程序需要访问 file:// 这样的网址或者是以隐身模式去运行，则用户需要在扩展程序详细信息页面的 chrome://extensions 中启用对这些功能的访问权限。&nbsp;<br></p><p><divcourier new',=\"\" monospace;font-weight:=\"\" normal;font-size:=\"\" 14px;line-height:=\"\" 19px;white-space:=\"\" pre;\"=\"\"></divcourier></p><p>扩展程序可以通过 extension.isAllowedIncognitoAccess() 或者在 file：// URL 使用 extension.isAllowedFileSchemeAccess 检测来是否在隐身模式下启可用。\n<br>\n<br><h3>六、了解权限\n</h3>权限警告用于描述 API 向 扩展程序 的用户索取功能，但是这些警告中的一些警告信息可能一开始并不明显。<br>或者，添加 tabs 权限会引起看似无关紧要的警告：因为扩展程序能够读取你的浏览活动。<br>虽然 chrome.tabs API 可能仅用于打开新的选项卡，但是也可以用来使用 tab.Tab 对象查看与每个新打开选项卡关联的 URL。<br>因此应该尽量的使用或者申请最小权限。\n<br>\n<br><h3>七、查看警告\n</h3>如果将扩展程序作为解压缩文件加载（也就是开发的时候），则不会显示权限警告。<br>如果要查看扩展程序的权限警告，需要导航至 chrome：// extensions，确保已经启用开发者模式，然后点击打包扩展程序。<br>在你的扩展程序的根目录字段中指定扩展名文件夹的路径，然后点击打包扩展程序按钮。忽略首次打包的私钥字段。&nbsp;<br></p><p><img src=\"/app/json/applets/chrome/imgs/18.jpg\" style=\"max-width:100%;\"></p><p>打包成功之后：</p><p><img src=\"/app/json/applets/chrome/imgs/19.jpg\" style=\"max-width:100%;\"></p><p>.pem 私钥文件非常重要，需要自己妥善保存好，因为私钥文件是可以用来更新扩展程序的。<br>通过 chrome 扩展程序安装 .crx 文件：</p><p><img src=\"/app/json/applets/chrome/imgs/20.jpg\" style=\"max-width:100%;\"></p><p>安装成功之后，可以点击查看详情，能够看到具体的权限：</p><p><img src=\"/app/json/applets/chrome/imgs/21.jpg\" style=\"max-width:100%;\"></p><p><h3>八、更新权限\n</h3>如果你更新了扩展程序，则用户在更新完之后，可能会需要重新授权某些程序。\n<br>果用户手动更新现在包含选项卡权限的扩展程序，则他们将在管理页面上收到警告。\n<br>\n<br>如果扩展程序是自动更新，则用户在同意新的权限之前，是被禁用掉的。\n<br>通过使可选并向清单中的 optional_permissions 添加新的权限更新，可以避免这种情况。</p><p><br></p><p><br></p><p><br></p><p><br></p>"}}