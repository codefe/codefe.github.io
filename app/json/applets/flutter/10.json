{"sta":1,"data":{"subTitle":"Drawer 实现左侧横滑菜单","content":"<h3>一、Scalfold 的 Drawer</h3><p>Scalfold 是 Flutter MaterialApp 常用的布局 Widget，他接受一个 drawer 属性，支持配置 Drawer<br>Drawer 是 Flutter 提供的能够实现左侧横滑的 Widget，构造非常简单：</p><pre>const Drawer({\n    Key key,\n    this.elevation = 16.0,\n    this.child,\n    this.semanticLabel,\n  })</pre><p>Drawer Widget 的 child 支持传入别的 Widget 实现布局，一般我们都会传入一个 ListView 或者 Column，进行纵向布局<br>目标是实现如下的效果：</p><img src=\"/app/json/applets/flutter/imgs/8.gif\" style=\"max-width:100%;\"><div><p>整个左侧滑入的 View 都是 Drawer 提供的基本能力，我们需要做的，其实就是去进行立面的 Widget 布局</p><p>UI 布局这里不说太多，没什么意义，贴一下顶部的头像背景 Header 区域布局实现:</p><pre>class DrawerHeaderDemo extends StatelessWidget {\n  const DrawerHeaderDemo({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return DrawerHeader(\n      child: Column(\n        children: &lt;Widget&gt;[\n          ClipOval(\n            child: Image.network(\n              IMAGE_SRC,\n              width: 65,\n              height: 65,\n              fit: BoxFit.cover,\n            ),\n          ),\n          SizedBox(height: 20),\n          Center(\n            child: Text(\n              'Postbird',\n              style: TextStyle(color: Colors.white),\n            ),\n          ),\n          SizedBox(height: 10),\n          Center(\n            child: Text(\n              '没有任何描述~',\n              style: TextStyle(color: Colors.white),\n            ),\n          ),\n        ],\n      ),\n      decoration: BoxDecoration(\n        color: Colors.grey[350],\n        image: DecorationImage(\n          image: NetworkImage(IMAGE_SRC_2),\n          fit: BoxFit.cover,\n        ),\n      ),\n    );\n  }\n}</pre><p>最终效果：</p><p><img src=\"/app/json/applets/flutter/imgs/9.png\" style=\"max-width:100%;\"></p><p><h3>二、UserAccountsDrawerHeader Flutter 提供的快速布局实现\n</h3>上面实现用户信息的代码中可以发现实现布局比较复杂，如果对布局没有特别高的要求，可以直接使用 Flutter 提供的 UserAccountsDrawerHeader 这个 Widget<br>提供了默认的用户信息 Header，样式如下：</p><p><img src=\"/app/json/applets/flutter/imgs/10.png\" style=\"max-width:100%;\"></p><p>UserAccountsDrawerHeader 构造函数声明如下：</p><pre>const UserAccountsDrawerHeader({\n    Key key,\n    this.decoration,\n    this.margin = const EdgeInsets.only(bottom: 8.0),\n    this.currentAccountPicture,\n    this.otherAccountsPictures,\n    @required this.accountName,\n    @required this.accountEmail,\n    this.onDetailsPressed,\n  })</pre><p>借助 Widget 直接实现布局：</p><pre>return UserAccountsDrawerHeader(\n  accountName: Text('postbird'),\n  accountEmail: Text('没有任何描述~'),\n  currentAccountPicture: CircleAvatar(\n    backgroundImage: NetworkImage(IMAGE_SRC),\n    backgroundColor: Colors.grey[350],\n  ),\n  otherAccountsPictures: &lt;Widget&gt;[\n    CircleAvatar(\n      backgroundImage: NetworkImage(IMAGE_SRC),\n      backgroundColor: Colors.grey[350],\n    ),\n  ],\n  decoration: BoxDecoration(\n    image: DecorationImage(\n      image: NetworkImage(IMAGE_SRC_2),\n      fit: BoxFit.cover,\n    ),\n    color: Colors.grey[350],\n  ),\n);</pre><p>如果要在 Drawer 中实现跳转，只需要使用 Navigator 做两个事情：</p><pre>Navigator.of(context).pop();\n            Navigator.of(context)\n                .push(MaterialPageRoute(builder: (context) =&gt; UserPage()));</pre><p>比如我一个实现如下：</p><pre>class DrawerHeaderDemo extends StatelessWidget {\n  const DrawerHeaderDemo({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return UserAccountsDrawerHeader(\n      accountName: Text('postbird'),\n      accountEmail: Text('没有任何描述~'),\n      currentAccountPicture: CircleAvatar(\n        backgroundImage: NetworkImage(IMAGE_SRC),\n        backgroundColor: Colors.grey[350],\n      ),\n      otherAccountsPictures: &lt;Widget&gt;[\n        CircleAvatar(\n          backgroundImage: NetworkImage(IMAGE_SRC),\n          backgroundColor: Colors.grey[350],\n        ),\n      ],\n      decoration: BoxDecoration(\n        image: DecorationImage(\n          image: NetworkImage(IMAGE_SRC_2),\n          fit: BoxFit.cover,\n        ),\n        color: Colors.grey[350],\n      ),\n    );\n  }\n}\n\nclass ListItem extends StatelessWidget {\n  const ListItem({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      child: ListTile(\n          leading: CircleAvatar(\n            backgroundColor: Colors.pink,\n            child: Icon(Icons.home),\n          ),\n          title: Text('首页'),\n          onTap: () {\n            Navigator.of(context).pop();\n            Navigator.of(context)\n                .push(MaterialPageRoute(builder: (context) =&gt; UserPage()));\n          }),\n    );\n  }\n}</pre><p>最终效果：</p><p><img src=\"/app/json/applets/flutter/imgs/11.gif\" style=\"max-width:100%;\"></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p>&nbsp;&nbsp;<br>\n<br></p></div>"}}