{"sta":1,"data":{"subTitle":"AppBar Widget 及自定义导航栏","content":"<p>Flutter 使用 MaterialApp 构造整个应用的话，可以使用 Scalfold 作为页面的结构<br></p><p>而 Scalfold 页面结构中，头部导航通过 appBar 指定值是 AppBar Widget 即可<br>AppBar 的构造函数如下：</p><pre>AppBar({\n    Key key,\n    this.leading,\n    this.automaticallyImplyLeading = true,\n    this.title,\n    this.actions,\n    this.flexibleSpace,\n    this.bottom,\n    this.elevation,\n    this.shape,\n    this.backgroundColor,\n    this.brightness,\n    this.iconTheme,\n    this.actionsIconTheme,\n    this.textTheme,\n    this.primary = true,\n    this.centerTitle,\n    this.titleSpacing = NavigationToolbar.kMiddleSpacing,\n    this.toolbarOpacity = 1.0,\n    this.bottomOpacity = 1.0,\n  })</pre><p>一般我们都是指定 title 来指定导航栏的标题，除此之外可以自定义一些导航栏按钮等操作<br>centerTitle 属性能够指定所有的标题都会居中，默认情况下，文字标题 title 属性在 ios 上是居中的，而在 android 上不是居中的，靠近左边<br>leading 能够指定左侧的图标按钮，在某些首页或者 tab 情况下，因此不需要返回，可能唤起一个 Drawer，一般会在导航左侧加一个图标，点击唤起 drawer<br>actions 用来在导航左侧添加一系列的按钮或者文字，定义如下：</p><pre>/// Widgets to display after the [title] widget.\n  ///\n  /// Typically these widgets are [IconButton]s representing common operations.\n  /// For less common operations, consider using a [PopupMenuButton] as the\n  /// last action.\n  final List&lt;Widget&gt; actions;</pre><p>actions 接收一个 List&lt;Widget&gt; 数据，理论上什么类型的 Widget 都可以塞进去<br>evaluation 是导航栏底部的阴影，在 material design 中，是建议留着的，如果指定 0 就可以不显示阴影。<br>backgroundColor 用来指定背景色，可以直接传颜色值<br>iconTheme 和 actionIconTheme 都可以指定 themedata 不需要单个 icon 去指定颜色等<br>自定义 AppBar 通过上面几个属性即可控制，比如：</p><pre>class MyApp extends StatelessWidget {\n  MyApp({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('自定义 AppBar'),\n          centerTitle: true,\n          backgroundColor: Colors.pink,\n          leading: IconButton(\n            icon: Icon(Icons.home),\n            onPressed: () {\n              print('home app bar');\n            },\n          ),\n          elevation: 0,\n          actions: &lt;Widget&gt;[\n            Center(\n              child: Text('所有订单'),\n            ),\n            IconButton(\n              icon: Icon(Icons.more_horiz),\n              onPressed: () {},\n            ),\n          ],\n        ),\n        body: HomeContent(),\n      ),\n    );\n  }\n}</pre><p>最终结果：</p><p><img src=\"/app/json/applets/flutter/imgs/12.png\" style=\"max-width:100%;\"></p><p>【所有订单】与后面的三个点儿iconButton 都属于 actions，一般考虑适配和显示，都只设置最多两 3个 actions button</p><p><br></p><p><br></p><p><br></p>"}}