{"sta":1,"data":{"subTitle":"组件嵌套传值","content":"<p>当两个自定义组件之间有着<span><strong>嵌套关系</strong></span>的时候，可以在两个组件之内定义<span>&nbsp;</span><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/relations.html\" target=\"_blank\">relations</a>，从而直接访问对方组件的实例</p><p></p><p>比如有这样的两个组件：</p><pre>&lt;w-block&gt;\n    &lt;w-list data=\"{{listData}}\" bind:show=\"handleShow\"&gt;&lt;/w-list&gt;\n&lt;/w-block&gt;</pre><p>上面的 &lt;w-list&gt; 的通过 &lt;slot&gt; 渲染到了 &lt;w-block&gt; 组件中，形成嵌套关系这时可以在两个组件内部定义 relations</p><p>&nbsp;<span style=\"background-color: rgb(241, 241, 241); font-family: &quot;Lucida Console&quot;, Consolas, Monaco; white-space: pre-wrap;\">// components/w-block/w-block.js</span><br></p><pre>Component({\n  relations: {\n    '../w-list/w-list': { // 对方组件的相对路径\n      type: 'child', // 关联的目标节点应为子节点\n      linked: function (target) {\n        // 每次有custom-li被插入时执行，target是该节点实例对象，触发在该节点attached生命周期之后\n      },\n      linkChanged: function (target) {\n        // 每次有custom-li被移动后执行，target是该节点实例对象，触发在该节点moved生命周期之后\n      },\n      unlinked: function (target) {\n        // 每次有custom-li被移除时执行，target是该节点实例对象，触发在该节点detached生命周期之后\n      }\n    }\n  },\n  data: {\n    name: \"I'm WiseWrong\",\n    title: \"Welcome to my blog\",\n    address: \"https://codefe.github.io/\"\n  }\n})</pre><p>上面是 &lt;w-block&gt; 中定义的 relations，同时还需要在 &lt;w-list&gt; 中定义，并将 type 设为 parent<br>必须在两个组件中都定义 relations，否则不会生效\n<br><br>在组件内部，可以通过 this.getRelationNodes( 'path' ) 方法获取到由对应的组件实例组成的数组<br>当关联组件不止一个的时候，这个数组会包含所有的组件实例，并按照文档流的顺序排列</p><pre>var block = this.getRelationNodes('../w-block/w-block')\nconsole.log(block)</pre><p>通过该方法，可以直接获取到关联组件的 data、properties、dataset，但无法获取到 methods<br>然后可以通过对应组件的 setData() 方法，修改组件实例的变量</p><pre>var block = this.getRelationNodes('../w-block/w-block')\nblock[0].setData({\n    name: '一起学习微信小程序'\n})</pre><p><br></p>"}}