{"sta":1,"data":{"subTitle":"子组件向父组件传值","content":"<p>properties 可以从外部传参到组件内部，如果需要向外部传参，就需要用到组件事件<br></p><p>child.wxml</p><pre>&lt;view bindtap=\"changeName\"&gt;&lt;/view&gt;</pre><p>child.js</p><pre>methods: {\n  changeName() {\n    this.triggerEvent('changeName', {\n      name: '李四'\n    })\n  }\n}</pre><p>当自定义组件触发事件时，在 methods 中添加处理函数，然后使用 triggerEvent 方法，指定事件名，创建自定义事件<br></p><p>parent.wxml</p><pre>&lt;child bindchangeName=\"changeName\"&gt;&lt;/child&gt;</pre><p>parent.js</p><pre>changeName(event) {\n  console.log(event.detail)\n\n  // { name: '李四' }\n}</pre><p>子组件向父组件传递数据使用this.triggerEvent方法，这个方法接受3个参数：<br><blockquote>this.triggerEvent('myevent', myEventDetail, myEventOption);</blockquote>myevent为方法名，\n<br>myEventDetail是传到组件外的数据，\n<br>myEventOption为是否冒泡的选项，有三个参数可以设置：\n<br><blockquote>    bubbles    默认false 事件是否冒泡<br>\n    composed 默认false 事件是否可以穿越组件边界<br>\n    capturePhase 默认false 事件是否拥有捕获阶段\n</blockquote>\n<br>在父组件监听事件bindchangeName=\"changeName\"，在changeName方法里有一个event参数，可以从event.detail里拿到组件内部传出来的值。</p><p><br></p><blockquote>&nbsp;注：小程序的事件处理函数都无法传入自定义参数，只能接收固定参数 event</blockquote><p>但是可以通过这样的方式来创建额外参数 item：</p><blockquote>&lt;view data-item=\"{{item}}\" bindtap=\"changeName\"&gt;&lt;/view&gt;</blockquote><p>然后在事件参数 event 中，event.currentTarget.dataset 来获取对应的参数</p><p>由此完成了自定义组件对父组件的传参。</p><p><br></p><p><br></p><p><br></p>"}}