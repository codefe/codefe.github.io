{"sta":1,"data":{"subTitle":"Koa2 RESTful Api接口","content":"<h3>1、首先看看为什么要用Koa2设计RESTful  Api接口？</h3><p>Koa2属于Nodejs的框架，Nodejs最擅长的就是大数据，非阻塞式IO。所以nodejs最擅长的一个快就是写接口。<br>网络应用程序，分为前端和后端两个部分。当前的发展趋势，就是前端设备层出不穷（手机、平板、桌面电脑、其他专用设备......）。<br>因此，必须有一种统一的机制，方便不同的前端设备与后端进行通信。这导致API构架的流行，甚至出现\"API First\"的设计思想。RESTful API是目前比较成熟的一套互联网应用程序的API设计理论\n<br><br><h3>2、一个好的Koa2 RESTful  Api接口设计必须考虑以下几点。</h3>1.协议：建议使用更安全的https协议<br>2.域名：尽量部署在专属域名下面，比如https://a.xxx.com      https://api.xxx.com<br>3.应该将api的版本号放入URl中：\n<br>&nbsp; &nbsp; (1)比如： https://a.xxx.com/api1/newslist   https://a.xxx.com/api2/newslist  \n<br>&nbsp; &nbsp; (2)比如:   https://a1.xxx.com     https://a2.xxx.com<br>4.路径：在RESTful架构中，每个网址代表一种资源（resource），所以网址中建议不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。一般来说，数据库中的表都是同种记录的\"集合\"（collection），所以API中的名词也应该使用复数。<br>5.http请求数据的方式：（7个HTTP方法：GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS）<br>&nbsp; &nbsp; GET（SELECT）：从服务器取出资源（一项或多项）。\n<br>  &nbsp;&nbsp;&nbsp;&nbsp;POST（CREATE）：在服务器新建一个资源。\n<br>  &nbsp;&nbsp;&nbsp;&nbsp;PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。\n<br>  &nbsp;&nbsp;&nbsp;&nbsp;DELETE（DELETE）：从服务器删除资源。\n<br><br>  &nbsp;&nbsp;&nbsp;&nbsp;还有三个不常用的HTTP请求方式。<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HEAD：获取资源的元数据。\n<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。\n<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。<br>\n<br>6、过滤方式、请求数据方式、返回数据、安全。\n<br><br><h3>3、Koa2  RESTful  Api接口 (get post put delete) 代码演示</h3></p><pre>router.get('/catelist',async (ctx)=&gt;{\n\n    var result=await DB.find('articlecate',{})\n\n    //console.log(result);\n    ctx.body={\n        result:result\n    };\n})\n\n\n//增加购物车数据\nrouter.post('/addCart',async (ctx)=&gt;{\n\n    //接收客户端提交的数据 、主要做的操作就是增加数据\n\n    console.log(ctx.request.body);\n\n    ctx.body={\n        \"success\":true,\n        \"message\":'增加数据成功'\n    };\n\n})\n\n//修改用餐人数的接口\nrouter.put('/editPeopleInfo',async (ctx)=&gt;{\n\n    //接收客户端提交的数据 、主要做的操作就是修改数据\n    console.log(ctx.request.body);\n    ctx.body={\n        \"success\":true,\n        \"message\":'修改数据成功'\n    };\n})\n\n//用于删除数据源\nrouter.delete('/deleteCart',async (ctx)=&gt;{\n\n    //接收客户端提交的数据 、主要做的操作就是删除数据的操作\n    console.log(ctx.query);\n\n    ctx.body={\n        \"success\":true,\n        \"message\":'删除数据成功'\n    };\n\n})</pre><p><br></p><p><br></p>"}}