{"sta":1,"data":{"subTitle":"koa中session的使用","content":"<p>session是另一种记录客户状态的机制，不同的是Cookie保存在客户端浏览器中，而session保存在服务器上。<br></p><p>\n<br><h3>Session的工作流程\n</h3>当浏览器访问服务器并发送第一次请求时，服务器端会创建一个session对象，生成一个类似于key,value的键值对， 然后将key(cookie)返回到浏览器(客户)端，浏览器下次再访问时，携带key(cookie)，找到对应的session(value)。 客户的信息都保存在session中\n<br>\n<br><h3>安装  koa-session\n</h3><blockquote>npm install koa-session --save\n</blockquote>\n<br><h3>引入express-session\n</h3><blockquote>const session = require('koa-session');\n</blockquote>\n<br><h3>设置官方文档提供的中间件\n</h3><blockquote>app.keys = ['some secret hurr'];//cookie的签名<br>\nconst CONFIG = {<br>\n&nbsp; &nbsp; key: 'koa:sess',   //cookie key (default is koa:sess) 默认就行，不用设置<br>\n&nbsp; &nbsp; maxAge: 86400000,  // cookie的过期时间 maxAge in ms (default is 1 days)<br>\n&nbsp; &nbsp; overwrite: true,  //是否可以overwrite    (默认就行)<br>\n&nbsp; &nbsp; httpOnly: true, //cookie是否只有服务器端可以访问 httpOnly or not (default true)<br>\n&nbsp; &nbsp; signed: true,   //签名默认true<br>\n&nbsp; &nbsp; rolling: false,  //在每次请求时强行设置cookie，这将重置cookie过期时间（默认：false）<br>\n&nbsp; &nbsp; renew: true,  //(boolean) renew session when session is nearly expired（快要过期时重新设置）,<br>\n};<br>\napp.use(session(CONFIG, app));\n</blockquote>\n<br><h3>使用\n</h3><blockquote>设置值 ctx.session.username = \"张三\";<br>\n获取值 ctx.session.username\n</blockquote>\n<br>\n<br></p>"}}