{"sta":1,"data":{"subTitle":"mockjs基础API","content":"<p>了解以上规则后，通过 API 可以创建 mock 数据：</p><p></p><ul><li>生成数据 传入定义好的 mock 对象，mockjs 会根据定义好的规则来生成 mock 数据</li><li><pre><code>Mock.mock({\n  \"name | 3\": \"pc\", // 'pcpcpc'\n  \"age| 18-30\": 1, // 18\n  email: \"@email\",\n  blog: \"@url\",\n  // more\n});</code></pre><p>拦截 ajax (XMLHttpRequest) 请求并返回 mock 数据</p></li><li><pre><code>// 拦截请求 method 方式的请求 url, 并返回 ()=&gt;{} 生成的数据\nMock.mock(url, method, () =&gt; {});</code></pre><p>设置请求时间，用于模拟网络环境</p></li><li><pre><code>Mock.setup({\n  timeoiut: 400, // 400ms 后返回响应\n  // timeout: '400-600' // 响应时间介于 400ms 到 600ms 之间\n});</code></pre><p>以上便是 mockjs 常用到的 API，定义好 mock 服务后，只需将模块 import 到调用到相关 API 的组件里即可</p></li><li><pre><code>// 用户数据 mock 模块 user_mock.js\n\nimport Mock from \"mockjs\";\n\nconst userinfo = {\n  name: \"pc\",\n  age: 18,\n};\n\nMock.mock(\"/userinfo\", \"get\", () =&gt; userinfo);</code></pre><pre><code>// 在调用 userinfo 的组件引用即可 mock 相关接口\nimport \"user_mock.js\";\n\n/* userinfo component */</code></pre><p>以上两种方式，多多少少需要手动写代码，有没有不用动代码就能 mock 数据的方法呢。</p></li></ul><p><br></p>"}}