{"sta":1,"data":{"subTitle":"去掉 console.log","content":"<p></p><h5>方法一：使用 babel-plugin-transform-remove-console 插件</h5><p></p><pre>npm i -D babel-plugin-transform-remove-console</pre><p>在 babel.config.js 中配置<br></p><pre><code>const IS_PROD = [\"production\", \"prod\"].includes(process.env.NODE_ENV);\n\nconst plugins = [];\nif (IS_PROD) {\n  plugins.push(\"transform-remove-console\");\n}\n\nmodule.exports = {\n  presets: [\"@vue/app\", { useBuiltIns: \"entry\" }],\n  plugins\n};</code></pre><p>方法二：</p><pre><code>const UglifyJsPlugin = require(\"uglifyjs-webpack-plugin\");\nmodule.exports = {\n  configureWebpack: config =&gt; {\n    if (IS_PROD) {\n      const plugins = [];\n      plugins.push(\n        new UglifyJsPlugin({\n          uglifyOptions: {\n            compress: {\n              warnings: false,\n              drop_console: true,\n              drop_debugger: false,\n              pure_funcs: [\"console.log\"] //移除console\n            }\n          },\n          sourceMap: false,\n          parallel: true\n        })\n      );\n      config.plugins = [...config.plugins, ...plugins];\n    }\n  }\n};</code></pre><p>如果使用 uglifyjs-webpack-plugin 会报错，可能存在 node_modules 中有些依赖需要 babel 转译。\n<br>\n<br>  而 vue-cli 的transpileDependencies配置默认为[], babel-loader 会忽略所有 node_modules 中的文件。如果你想要通过 Babel 显式转译一个依赖，可以在这个选项中列出来。配置需要转译的第三方库。</p>"}}