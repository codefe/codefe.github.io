{"sta":1,"data":{"subTitle":"预渲染 prerender-spa-plugin","content":"<p></p><pre>npm i -D prerender-spa-plugin</pre><pre><code>const PrerenderSpaPlugin = require(\"prerender-spa-plugin\");\nconst path = require(\"path\");\nconst resolve = dir =&gt; path.join(__dirname, dir);\nconst IS_PROD = [\"production\", \"prod\"].includes(process.env.NODE_ENV);\n\nmodule.exports = {\n  configureWebpack: config =&gt; {\n    const plugins = [];\n    if (IS_PROD) {\n      plugins.push(\n        new PrerenderSpaPlugin({\n          staticDir: resolve(\"dist\"),\n          routes: [\"/\"],\n          postProcess(ctx) {\n            ctx.route = ctx.originalRoute;\n            ctx.html = ctx.html.split(/&gt;[\\s]+&lt;/gim).join(\"&gt;&lt;\");\n            if (ctx.route.endsWith(\".html\")) {\n              ctx.outputPath = path.join(__dirname, \"dist\", ctx.route);\n            }\n            return ctx;\n          },\n          minify: {\n            collapseBooleanAttributes: true,\n            collapseWhitespace: true,\n            decodeEntities: true,\n            keepClosingSlash: true,\n            sortAttributes: true\n          },\n          renderer: new PrerenderSpaPlugin.PuppeteerRenderer({\n            // 需要注入一个值，这样就可以检测页面当前是否是预渲染的\n            inject: {},\n            headless: false,\n            // 视图组件是在API请求获取所有必要数据后呈现的，因此我们在dom中存在“data view”属性后创建页面快照\n            renderAfterDocumentEvent: \"render-event\"\n          })\n        })\n      );\n    }\n    config.plugins = [...config.plugins, ...plugins];\n  }\n};</code></pre><p>mounted()中添加 document.dispatchEvent(new Event('render-event'))</p><pre><code>new Vue({\n  router,\n  store,\n  render: h =&gt; h(App),\n  mounted() {\n    document.dispatchEvent(new Event(\"render-event\"));\n  }\n}).$mount(\"#app\");</code></pre><p>为自定义预渲染页面添加自定义 title、description、content\n<br>删除 public/index.html 中关于 description、content 的 meta 标签。保留 title 标签\n<br>\n<br>配置 router-config.js</p><pre><code>module.exports = {\n  \"/\": {\n    title: \"首页\",\n    keywords: \"首页关键词\",\n    description: \"这是首页描述\"\n  },\n  \"/about.html\": {\n    title: \"关于我们\",\n    keywords: \"关于我们页面关键词\",\n    description: \"关于我们页面关键词描述\"\n  }\n};</code></pre><p>vue.config.js</p><pre><code>const path = require(\"path\");\nconst PrerenderSpaPlugin = require(\"prerender-spa-plugin\");\nconst routesConfig = require(\"./router-config\");\nconst resolve = dir =&gt; path.join(__dirname, dir);\nconst IS_PROD = [\"production\", \"prod\"].includes(process.env.NODE_ENV);\n\nmodule.exports = {\n  configureWebpack: config =&gt; {\n    const plugins = [];\n\n    if (IS_PROD) {\n      // 预加载\n      plugins.push(\n        new PrerenderSpaPlugin({\n          staticDir: resolve(\"dist\"),\n          routes: Object.keys(routesConfig),\n          postProcess(ctx) {\n            ctx.route = ctx.originalRoute;\n            ctx.html = ctx.html.split(/&gt;[\\s]+&lt;/gim).join(\"&gt;&lt;\");\n            ctx.html = ctx.html.replace(\n              /&lt;title&gt;(.*?)&lt;\\/title&gt;/gi,\n              `&lt;title&gt;${\n                routesConfig[ctx.route].title\n              }&lt;/title&gt;&lt;meta name=\"keywords\" content=\"${\n                routesConfig[ctx.route].keywords\n              }\" /&gt;&lt;meta name=\"description\" content=\"${\n                routesConfig[ctx.route].description\n              }\" /&gt;`\n            );\n            if (ctx.route.endsWith(\".html\")) {\n              ctx.outputPath = path.join(__dirname, \"dist\", ctx.route);\n            }\n            return ctx;\n          },\n          minify: {\n            collapseBooleanAttributes: true,\n            collapseWhitespace: true,\n            decodeEntities: true,\n            keepClosingSlash: true,\n            sortAttributes: true\n          },\n          renderer: new PrerenderSpaPlugin.PuppeteerRenderer({\n            // 需要注入一个值，这样就可以检测页面当前是否是预渲染的\n            inject: {},\n            headless: false,\n            // 视图组件是在API请求获取所有必要数据后呈现的，因此我们在dom中存在“data view”属性后创建页面快照\n            renderAfterDocumentEvent: \"render-event\"\n          })\n        })\n      );\n    }\n\n    config.plugins = [...config.plugins, ...plugins];\n  }\n};</code></pre><p><br></p>"}}