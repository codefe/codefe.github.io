{"sta":1,"data":{"subTitle":"多页面打包 multi-page","content":"<p>多入口页面打包，建议在 src 目录下新建 pages 目录存放多页面模块。<br></p><p>pages.config.js</p><p>配置多页面信息。src/main.js 文件对应 main 字段，其他根据参照 pages 为根路径为字段。如下:</p><pre><code>module.exports = {\n  'admin': {\n    template: 'public/index.html',\n    filename: 'admin.html',\n    title: '后台管理',\n  },\n  'mobile': {\n    template: 'public/index.html',\n    filename: 'mobile.html',\n    title: '移动端',\n  },\n  'pc/crm': {\n    template: 'public/index.html',\n    filename: 'pc-crm.html',\n    title: '预发服务',\n  }\n}</code></pre><p>vue.config.js</p><p>vue.config.js 的 pages 字段为多页面提供配置</p><pre><code>const glob = require(\"glob\");\nconst pagesInfo = require(\"./pages.config\");\nconst pages = {};\n\nglob.sync('./src/pages/**/main.js').forEach(entry =&gt; {\n  let chunk = entry.match(/\\.\\/src\\/pages\\/(.*)\\/main\\.js/)[1];\n  const curr = pagesInfo[chunk];\n  if (curr) {\n    pages[chunk] = {\n      entry,\n      ...curr,\n      chunk: [\"chunk-vendors\", \"chunk-common\", chunk]\n    }\n  }\n})\n\nmodule.exports = {\n  chainWebpack: config =&gt; {\n    // 防止多页面打包卡顿\n    config =&gt; config.plugins.delete(\"named-chunks\");\n\n    return config;\n  },\n  pages\n};</code></pre><p>如果多页面打包需要使用 CDN，使用 vue inspect --plugins 查看 html 是否在结果数组中的形式。上例中 plugins 列表中存在'html-main','html-pages/admin','html-pages/mobile'， 没有'html'。因此不能再使用 config.plugin(\"html\")。</p><pre><code>const path = require(\"path\");\nconst resolve = dir =&gt; path.join(__dirname, dir);\nconst IS_PROD = [\"production\", \"prod\"].includes(process.env.NODE_ENV);\n\nconst glob = require(\"glob\");\nconst pagesInfo = require(\"./pages.config\");\nconst pages = {};\n\nglob.sync('./src/pages/**/main.js').forEach(entry =&gt; {\n  let chunk = entry.match(/\\.\\/src\\/pages\\/(.*)\\/main\\.js/)[1];\n  const curr = pagesInfo[chunk];\n  if (curr) {\n    pages[chunk] = {\n      entry,\n      ...curr,\n      chunk: [\"chunk-vendors\", \"chunk-common\", chunk]\n    }\n  }\n});\n\nmodule.exports = {\n  publicPath: IS_PROD ? process.env.VUE_APP_PUBLIC_PATH : \"./\", //\n  configureWebpack: config =&gt; {\n    config.externals = {\n      vue: \"Vue\",\n      \"element-ui\": \"ELEMENT\",\n      \"vue-router\": \"VueRouter\",\n      vuex: \"Vuex\",\n      axios: \"axios\"\n    };\n  },\n  chainWebpack: config =&gt; {\n    const cdn = {\n      // 访问https://unpkg.com/element-ui/lib/theme-chalk/index.css获取最新版本\n      css: [\"//unpkg.com/element-ui@2.10.1/lib/theme-chalk/index.css\"],\n      js: [\n        \"//unpkg.com/vue@2.6.10/dist/vue.min.js\", // 访问https://unpkg.com/vue/dist/vue.min.js获取最新版本\n        \"//unpkg.com/vue-router@3.0.6/dist/vue-router.min.js\",\n        \"//unpkg.com/vuex@3.1.1/dist/vuex.min.js\",\n        \"//unpkg.com/axios@0.19.0/dist/axios.min.js\",\n        \"//unpkg.com/element-ui@2.10.1/lib/index.js\"\n      ]\n    };\n\n    // 防止多页面打包卡顿\n    config =&gt; config.plugins.delete(\"named-chunks\");\n\n    // 多页面cdn添加\n    Object.keys(pagesInfo).forEach(page =&gt; {\n      config.plugin(`html-${page}`).tap(args =&gt; {\n        // html中添加cdn\n        args[0].cdn = cdn;\n\n        // 修复 Lazy loading routes Error\n        args[0].chunksSortMode = \"none\";\n        return args;\n      });\n    });\n    return config;\n  },\n  pages\n};</code></pre><p><br></p>"}}