{"sta":1,"data":{"subTitle":"nginx服务启动、停止、重启","content":"<h3><span style=\"font-weight: normal;\">​</span>启动Nginx服务</h3><p>默认的情况下，Nginx是不会自动启动的，需要我们手动进行启动，当然启动Nginx的方法也不是单一的。\n<br>\n<br><h4>nginx直接启动</h4>在CentOS7.4版本里（低版本是不行的），是可以直接直接使用nginx启动服务的。<br><blockquote>nginx\n</blockquote><h4>使用systemctl命令启动</h4>还可以使用个Linux的命令进行启动，我一般都是采用这种方法进行使用。因为这种方法无论启动什么服务，都是一样的，只是换一下服务的名字（不用增加额外的记忆点）。<br><blockquote>systemctl start nginx.service\n</blockquote>输入命令后，没有任何提示，那我们如何知道Nginx服务已经启动了哪？可以使用Linux的组合命令，进行查询服务的运行状况。<br><blockquote>ps aux | grep nginx\n</blockquote><br><h3>停止Nginx服务的四种方法</h3>停止Nginx 方法有很多种，可以根据需求采用不一样的方法，我们一个一个说明。<br><h4>立即停止服务\n</h4><blockquote>nginx  -s stop\n</blockquote>这种方法比较强硬，无论进程是否在工作，都直接停止进程。<br><h4>从容停止服务\n</h4><blockquote>nginx -s quit\n</blockquote>这种方法较stop相比就比较温和一些了，需要进程完成当前工作后再停止。<br><h4>killall 方法杀死进程\n</h4>这种方法也是比较野蛮的，我们直接杀死进程，但是在上面使用没有效果时，我们用这种方法还是比较好的。<br><blockquote>killall nginx\n</blockquote><h4>systemctl 停止\n</h4><blockquote>systemctl stop nginx.service\n</blockquote><h3><br></h3><h3>重启Nginx服务\n</h3>\n<br>有时候我们需要重启Nginx服务，这时候可以使用下面的命令。<br><blockquote>systemctl restart nginx.service\n</blockquote><h4>重新载入配置文件</h4>在重新编写或者修改Nginx的配置文件后，都需要作一下重新载入，这时候可以用Nginx给的命令。<br><blockquote>nginx -s reload\n</blockquote><h4>查看端口号\n</h4>\n</p><blockquote>netstat -tlnp</blockquote><p>在默认情况下，Nginx启动后会监听80端口，从而提供HTTP访问，如果80端口已经被占用则会启动失败。我么可以使用netstat -tlnp命令查看端口号的占用情况。</p><p><br></p>"}}