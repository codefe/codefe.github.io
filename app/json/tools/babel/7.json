{"sta":1,"data":{"subTitle":"插件(plugins)","content":"<p></p><div><p>presets是插件plugins的预设，也就是说直接需要不需要的插件一起引入，如果不想使用presets，可以单独使用plugins对某个功能进行单独的引入。另外，有一些方法是presets中不提供的，如果要使用就需要单独引用了，比如：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; a)transform-runtime：解决编译中产生的重复的工具函数，减小代码体积。</p><p>&nbsp; &nbsp; &nbsp; &nbsp; b)transform-remove-console：编译后的代码会移除console.*</p><p>&nbsp; &nbsp; &nbsp; &nbsp; plugins/presets排序遵循下列标准：&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 1、plugins会先于presets进行编译</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 2、plugins会按照数组index的增序进行编译</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 3、presets会按照数组index的降序进行编译</p><p>注：</p><p>check-es2015-constants // 检验const常量是否被重新赋值<br><br>transform-es2015-arrow-functions // 编译箭头函数<br><br>transform-es2015-block-scoped-functions // 函数声明在作用域内<br><br>transform-es2015-block-scoping // 编译const和let<br><br>transform-es2015-classes // 编译class<br><br>transform-es2015-computed-properties // 编译计算对象属性<br><br>transform-es2015-destructuring // 编译解构赋值<br><br>transform-es2015-duplicate-keys // 编译对象中重复的key，其实是转换成计算对象属性<br><br>transform-es2015-for-of // 编译for...of<br><br>transform-es2015-function-name // 将function.name语义应用于所有的function<br><br>transform-es2015-literals // 编译整数(8进制/16进制)和unicode<br><br>transform-es2015-modules-commonjs // 将modules编译成commonjs<br><br>transform-es2015-object-super // 编译super<br><br>transform-es2015-parameters // 编译参数，包括默认参数，不定参数和解构参数<br><br>transform-es2015-shorthand-properties // 编译属性缩写<br><br>transform-es2015-spread // 编译展开运算符<br><br>transform-es2015-sticky-regex // 正则添加sticky属性<br><br>transform-es2015-template-literals // 编译模版字符串<br><br>transform-es2015-typeof-symbol // 编译Symbol类型<br><br>transform-es2015-unicode-regex // 正则添加unicode模式<br><br>transform-regenerator // 编译generator函数<br><br>transform-exponentiation-operator // 编译幂运算符<br><br>syntax-trailing-function-commas // function最后一个参数允许使用逗号<br><br>transform-async-to-generator // 把async函数转化成generator函数<br><br><br></p><p><br></p></div>"}}