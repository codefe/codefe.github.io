{"sta":1,"data":{"subTitle":"git stash 用法总结和注意点","content":"<p>常用git stash命令：</p><p>（1）<strong>git stash</strong><span>&nbsp;</span>save \"save message\"&nbsp; : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</p><p>（2）<strong>git stash list&nbsp;</strong><span>&nbsp;</span>：查看stash了哪些存储</p><p>（3）<strong>git stash show</strong><span>&nbsp;</span>：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}</p><p>（4）<strong>git stash show -p</strong><span>&nbsp;</span>: 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show&nbsp; stash@{$num}&nbsp;&nbsp;-p ，比如第二个：git stash show&nbsp;&nbsp;stash@{1}&nbsp;&nbsp;-p</p><p>（5）<strong>git stash apply</strong><span>&nbsp;</span>:应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，git stash apply&nbsp;stash@{$num} ，&nbsp;比如第二个：git stash apply&nbsp;stash@{1}&nbsp;</p><p>（6）<strong>git stash pop</strong><span>&nbsp;</span>：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop&nbsp;stash@{$num} ，比如应用并删除第二个：git stash pop&nbsp;stash@{1}</p><p>（7）<strong>git stash drop</strong>&nbsp;stash@{$num} ：丢弃stash@{$num}存储，从列表中删除这个存储</p><p>（8）<code><strong>git stash clear</strong><span>&nbsp;</span>：</code>删除所有缓存的stash</p><p>&nbsp;</p><p></p><p><span><strong>说明:新增的文件，直接执行stash是不会被存储的</strong></span>，举例如下：</p><p><img src=\"./app/json/tools/git/img/1.png\" style=\"max-width:100%;\" class=\"\"></p><p>如上图：在git status 那一步很明显可以看出来，我修改了README，添加了新文件abc.txt，然后执行了git stash save后，在执行git stash list 可以看到刚才的save是的信息，然后使用git stash show ，只显示了README的改动被存起来了。\n<br>\n<br>我们知道，执行了git statsh 以后，被存起来的在当前目录再执行git status 就看不到了，但是我们现在再执行git status，如下：</p><p><img src=\"./app/json/tools/git/img/2.png\" style=\"max-width:100%;\" class=\"\"></p><p>这个文件还在，说明没有被存起来。说白了就是没有在git 版本控制中的文件，是不能被git stash 存起来的。\n<br>\n<br>那要怎么办呢，这个文件我也想存起来，很明显，先执行下git add 加到git版本控制中，然后再git stash就可以了，如下：</p><p><img src=\"./app/json/tools/git/img/3.png\" style=\"max-width:100%;\"></p><p>最后一步可以看出来，这个新增文件已经被stash了。\n<br>\n<br>这个时候再执行下git status ,被存起来的在当前目录就看不到了,如下：</p><p><img src=\"./app/json/tools/git/img/4.png\" style=\"max-width:100%;\"></p><p>这个时候，想切分支就再也不会报错有改动未提交了。\n<br>\n<br>如果要应用这些stash，直接使用git stash apply或者git stash pop就可以再次导出来了。\n<br>\n<br><blockquote>总结下：git add 只是把文件加到git 版本控制里，并不等于就被stash起来了，git add和git stash 没有必然的关系，但是执行git stash 能正确存储的前提是文件必须在git 版本控制中才行。\n</blockquote>\n<br>参考的一个链接中说到了以下，我摘录此处备份下（就是只stash一部分文件）：\n<br>\n<br>     常规 git stash 的一个限制是它会一下暂存所有的文件。有时，只备份某些文件更为方便，让另外一些与代码库保持一致。一个非常有用的技巧，用来备份部分文件：\n<br>\n<br></p><blockquote>1. add 那些你不想备份的文件（例如： git add file1.js, file2.js）<br>\n2. 调用 git stash –keep-index。只会备份那些没有被add的文件。<br>\n3. 调用 git reset 取消已经add的文件的备份，继续自己的工作。</blockquote><p><br></p><p><br></p>"}}