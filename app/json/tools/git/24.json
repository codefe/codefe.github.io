{"sta":1,"data":{"subTitle":"回退和回滚","content":"<pre>/** 版本回退\n* --soft 保留缓存区和工作区\n* --mixed 默认参数，缓存区同步到你指定的版本，保留工作区\n* --hard – 缓存区和工作区都同步到你指定的版本\n*/\n$ git reset --(soft | mixed | hard ) &lt; HEAD ~(num) &gt; | &lt;commit ID&gt; | HEAD^\n\n// 回退之后需要，强制推到远程仓库\n$ git push origin HEAD --force\n\n// 版本回滚\n$ git revert &lt; HEAD ~(num) &gt; | &lt;commit ID&gt; | HEAD^\n\n// 批量回滚\n$ git revert older_commit^..newer_commit</pre><p><br></p><p>git reset 和 git revert 区别：<br><blockquote>采用 git reset 会使 HEAD 指针往回移动，从而会失去之后的提交信息。<br>\n采用 git revert 是把指定版本内容，生成一个新的 commit 版本，不影响 commit 版本之前及之后的提交，HEAD 指针是指向这个新的版本。</blockquote></p>"}}