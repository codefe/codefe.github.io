{"sta":1,"data":{"subTitle":"什么会影响你的页面性能","content":"<p>近年来，WEB 开发者们为缩短用户等待时间做出了一系列方案，以期「短益求短」。比如用&nbsp;PWA缓存更多可用的离线资源，让网页应用打开更快；借助&nbsp;WebAssembly&nbsp;规范缩小资源体积，提高执行效率。这些方案分别着眼于网络链路，前端资源处理速度等维度上，致力提高用户体验。</p><p>作为 WEB 开发者，我感受到跟页面性能挂钩比较深的几个维度是：网络链路、服务器资源、前端资源渲染效率、用户端硬件。</p><p>网络链路</p><p></p><p>网络链路往往是页面性能的扼要之处，域名解析、交换机、路由器、网络服务提供商、内容分发网络、服务器，链路上的节点出问题或响应过慢都会有不好的体验。</p><p>服务器资源\n<br>\n<br>在 HTTP 的大环境下，所有请求最终都要服务器来处理，服务器爸爸处理不当无法响应或响应过慢也会直接影响页面与用户的互动。\n<br>\n<br>前端资源渲染\n<br>\n<br>浏览器获取所需 HTML、CSS、脚本、图片等静态资源，绘制首屏呈现给用户的过程；或用户与页面交互后，浏览器重新计算需要呈现的内容，然后重新绘制的过程。这些过程的处理效率也是影响性能的重要因素。\n<br>\n<br>用户硬件\n<br>\n<br>发起网络请求，解析网络响应，页面渲染绘制等过程都需要消耗计算机硬件资源。所以计算机资源，特别是 CPU 和 GPU 资源短缺时（比如打显卡杀手类的游戏），也会影响页面性能。\n<br>\n<br>当然，以上的维度不是划线而治的，它们更多是犬牙交错的关系。例如在渲染过程中浏览器反应很慢，有可能是脚本写得太烂遭遇性能瓶颈，也有可能是显卡杀手游戏占用了过多计算机资源；又如在分析前端资源渲染时，往往要结合网络瀑布图分析资源的获取时间，因为渲染页也是个动态的过程，有些关键资源需要等待，有些则可以在渲染的同时加载。</p><p><br></p><p>Chrome 的开发者工具各有自己的侧重点，如 Network 工具的瀑布图有着资源拉取顺序的详细信息，它的侧重点在于分析网路链路。而 Performance 工具的侧重点则在于前端渲染过程，它拥有帧率条形图、CPU 使用率面积图、资源瀑布图、主线程火焰图、事件总览等模块，它们和渲染息息相关，善用它们可以清晰地观察整个渲染阶段。不过，你不必纠结上面提到的模块名，因为在接下来的篇幅里，我会一一介绍他们。</p><p><br></p>"}}