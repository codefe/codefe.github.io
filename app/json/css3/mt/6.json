{"sta":1,"data":{"subTitle":"常见的移动端H5页面开发遇到的坑和解决办法","content":"<h3>1、安卓浏览器看背景图片，有些设备会模糊。</h3><p>用同等比例的图片在PC机上很清楚，但是手机上很模糊，原因是什么呢？\n<br>经过研究，是devicePixelRatio作怪，因为手机分辨率太小，如果按照分辨率来显示网页，这样字会非常小，所以苹果当初就把iPhone 4的960640分辨率，在网页里只显示了480320，这样devicePixelRatio＝2。现在android比较乱，有1.5的，有2的也有3的。\n<br>想让图片在手机里显示更为清晰，必须使用2x的背景图来代替img标签（一般情况都是用2倍）。例如一个div的宽高是100100，背景图必须得200200，然后background-size:contain;，这样显示出来的图片就比较清晰了。\n<br>\n<br>代码如下：<br><blockquote>background:url(../images/icon/all.png) no-repeat center center;<br>\n-webkit-background-size:50px 50px;<br>\nbackground-size: 50px 50px;display:inline-block; width:100%; height:50px;</blockquote>或者指定 background-size:contain;都可以，大家试试！\n<br><br><h3>2、图片加载</h3>若您遇到图片加载很慢的问题，对这种情况，手机开发一般用canvas方法加载：\n<br>具体的canvas API 参见：http://javascript.ruanyifeng.com/htmlapi/canvas.html\n<br>下面举例说明一个canvas的例子：<br><blockquote>&lt;li&gt;&lt;canvas&gt;&lt;/canvas&gt;&lt;/li&gt;</blockquote>js动态加载图片和li 总共举例17张图片！</p><pre>var total=17;\nvar zWin=$(window);\nvar render=function(){\n    var padding=2;\n    var winWidth=zWin.width();\n    var picWidth=Math.floor((winWidth-padding*3)/4);\n    var tmpl ='';\n    for (var i=1;i&lt;=totla;i++){\n        var p=padding;\n        var imgSrc='img/'+i+'.jpg';\n        if(i%4==1){\n            p=0;\n        }\n        tmpl +='&lt;li style=\"width:'+picWidth+'px;height:'+picWidth+'px;padding-left:'+p+'px;padding-top:'+padding+'px;\"&gt;&lt;canvas id=\"cvs_'+i+'\"&gt;&lt;/canvas&gt;&lt;/li&gt;';\n        var imageObj = new Image();\n        imageObj.index = i;\n        imageObj.onload = function(){\n            var cvs =$('#cvs_'+this.index)[0].getContext('2d');\n            cvs.width = this.width;\n            cvs.height=this.height;\n            cvs.drawImage(this,0,0);\n        }\n        imageObj.src=imgSrc;\n\n    }\n}\n\nrender();</pre><p><h3>3、假如手机网站不用兼容IE浏览器，一般我们会使用zeptojs。\n</h3>zeptojs内置Touch events方法，具体可以看http://zeptojs.com/#Touch events\n<br>看了一下zeptio新版的API，已经支持IE10以上浏览器，对zeptojs可以选择使用！\n<br>\n<br><h3>4、防止手机中网页放大和缩小。\n</h3>这点是最基本的，最为手机网站开发者来说应该都知道的，就是设置meta中的viewport\n<br>还有就是，有些手机网站我们看到如下声明：\n<br><blockquote>&lt;!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\" \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\"&gt;\n</blockquote>设置了DTD的方式是XHTML的写法，假如我们页面运用的是html5，可以不用设置DTD,直接声明&lt;!DOCTYPE html&gt;。\n<br>使用viewport使页面禁止缩放。 通常把user-scalable设置为0来关闭用户对页面视图缩放的行为<br><blockquote>&lt;meta name=\"viewport\" content=\"user-scalable=0\" /&gt;</blockquote>但是为了更好的兼容，我们会使用完整的viewport设置。<br><blockquote>&lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0\" /&gt;</blockquote>当然，user-scalable=0,有的人也写成user-scalable=no，都可以的。\n<br>\n<br><h3>5、apple-mobile-web-app-capable</h3>apple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。\n<br>\n<br>语法：<br><blockquote>&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"&gt;</blockquote>说明：\n<br>如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。\n<br>\n<br><h3>6、format-detection</h3>format-detection 启动或禁用自动识别页面中的电话号码。\n<br>语法：\n<br><blockquote>&lt;meta name=\"format-detection\" content=\"telephone=no\"&gt;</blockquote>说明：\n<br>默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。\n<br>\n<br><h3>7、html5调用安卓或者ios的拨号功能\n</h3>\n<br>html5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。\n<br>如下：<br><blockquote>&lt;a href=\"tel:10010\"&gt;10010&lt;/a&gt;\n</blockquote>\n<br><h3>8、html5GPS定位功能</h3>具体请看：http://www.w3school.com.cn/html5/html_5_geolocation.asp\n<br><br><h3>9、上下拉动滚动条时卡顿、慢</h3><blockquote>body {<br>\n&nbsp; &nbsp; -webkit-overflow-scrolling: touch;<br>\n&nbsp; &nbsp; overflow-scrolling: touch;<br>\n}\n</blockquote>\n<br><h3>10、禁止复制、选中文本</h3><blockquote>Element {<br>\n&nbsp; &nbsp; -webkit-user-select: none;<br>\n&nbsp; &nbsp; -moz-user-select: none;<br>\n&nbsp; &nbsp; -khtml-user-select: none;<br>\n&nbsp; &nbsp; user-select: none;<br>\n}\n</blockquote>\n解决移动设备可选中页面文本(视产品需要而定)\n<br>\n<br><h3>11、长时间按住页面出现闪退</h3><blockquote>element {<br>\n&nbsp; &nbsp; -webkit-touch-callout: none;<br>\n}\n</blockquote>\n<br><h3>12、iphone及ipad下输入框默认内阴影</h3><blockquote>Element{<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;-webkit-appearance: none;<br>\n}\n</blockquote>\n<br><h3>13、ios和android下触摸元素时出现半透明灰色遮罩</h3><blockquote>Element {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;-webkit-tap-highlight-color:rgba(255,255,255,0)<br>\n}\n</blockquote>\n<br><h3>14、active兼容处理 即 伪类 :active 失效\n</h3>方法一：body添加ontouchstart<br><blockquote>&lt;body ontouchstart=\"\"&gt;\n</blockquote>\n<br>方法二：js给 document 绑定 touchstart 或 touchend 事件\n<br>\n<br><blockquote>&lt;style&gt;<br>\na {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;color: #000;<br>\n}<br>\na:active {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;color: #fff;<br>\n}<br>\n&lt;/style&gt;\n</blockquote>\n<br><blockquote>&lt;a herf=foo &gt;bar&lt;/a&gt;\n</blockquote>\n<br><blockquote>&lt;script&gt;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;document.addEventListener('touchstart',function(){},false);<br>\n&lt;/script&gt;\n</blockquote>\n<br><h3>15、动画定义3D启用硬件加速</h3><blockquote>Element {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;-webkit-transform:translate3d(0, 0, 0)<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;ansform: translate3d(0, 0, 0);<br>\n}\n</blockquote>\n<br><h3>16、Retina屏的1px边框\n</h3>\n<br>具体请百度谷歌关键字，解决方案有很多\n<br>\n<br><h3>17、webkit mask 兼容处理\n</h3>\n<br>某些低端手机不支持css3 mask，可以选择性的降级处理。\n<br>比如可以使用js判断来引用不同class：<br><blockquote>if( 'WebkitMask' in document.documentElement.style){<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;alert('支持mask');<br>\n} else {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;alert('不支持mask');<br>\n}\n</blockquote>\n<br><h3>18、旋转屏幕时，字体大小调整的问题</h3><blockquote>html, body, form, fieldset, p, div, h1, h2, h3, h4, h5, h6 {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;-webkit-text-size-adjust:100%;<br>\n}\n</blockquote>\n<br><h3>19、transition闪屏</h3><blockquote>/设置内嵌的元素在 3D 空间如何呈现：保留3D /<br>\n-webkit-transform-style: preserve-3d;<br>\n/ 设置进行转换的元素的背面在面对用户时是否可见：隐藏 /<br>\n-webkit-backface-visibility:hidden;\n</blockquote>\n<br><h3>20、圆角bug\n</h3>\n<br>某些Android手机圆角失效\n<br>\n<blockquote>background-clip: padding-box;\n</blockquote>\n<br><h3>21、顶部状态栏背景色</h3><blockquote>&lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\" /&gt;\n</blockquote>\n<br>说明：\n<br>除非你先使用apple-mobile-web-app-capable指定全屏模式，否则这个meta标签不会起任何作用。\n<br>如果content设置为default，则状态栏正常显示。如果设置为blank，则状态栏会有一个黑色的背景。如果设置为blank-translucent，则状态栏显示为黑色半透明。\n<br>如果设置为default或blank，则页面显示在状态栏的下方，即状态栏占据上方部分，页面占据下方部分，二者没有遮挡对方或被遮挡。\n<br>如果设置为blank-translucent，则页面会充满屏幕，其中页面顶部会被状态栏遮盖住（会覆盖页面20px高度，而iphone4和itouch4的Retina屏幕为40px）。\n<br>默认值是default。\n<br><br><h3>22、设置缓存\n</h3><blockquote>&lt;meta http-equiv=\"Cache-Control\" content=\"no-cache\" /&gt;\n</blockquote>手机页面通常在第一次加载后会进行缓存，然后每次刷新会使用缓存而不是去重新向服务器发送请求。如果不希望使用缓存可以设置no-cache。\n<br>\n<br><h3>23、桌面图标</h3><blockquote>&lt;link rel=\"apple-touch-icon\" href=\"touch-icon-iphone.png\" /&gt;<br>\n&lt;link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"touch-icon-ipad.png\" /&gt;<br>\n&lt;link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"touch-icon-iphone-retina.png\" /&gt;<br>\n&lt;link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"touch-icon-ipad-retina.png\" /&gt;\n</blockquote>\n<br>iOS下针对不同设备定义不同的桌面图标。如果不定义则以当前屏幕截图作为图标。\n<br>上面的写法可能大家会觉得会有默认光泽，下面这种设置方法可以去掉光泽效果，还原设计图的效果！<br><blockquote>&lt;link rel=\"apple-touch-icon-precomposed\" href=\"touch-icon-iphone.png\" /&gt;</blockquote>图片尺寸可以设定为57*57（px）或者Retina可以定为114*114（px），ipad尺寸为72*72（px)\n<br>\n<br><h3>24、启动画面</h3><blockquote>&lt;link rel=\"apple-touch-startup-image\" href=\"start.png\"/&gt;</blockquote>iOS下页面启动加载时显示的画面图片，避免加载时的白屏。\n<br>可以通过madia来指定不同的大小：\n<br><blockquote>&lt;!--iPhone--&gt;<br>\n&lt;link href=\"apple-touch-startup-image-320x460.png\" media=\"(device-width: 320px)\" rel=\"apple-touch-startup-image\" /&gt;<br>\n&lt;!-- iPhone Retina --&gt;<br>\n&lt;link href=\"apple-touch-startup-image-640x920.png\" media=\"(device-width: 320px) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" /&gt;<br>\n&lt;!-- iPhone 5 --&gt;<br>\n&lt;link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" href=\"apple-touch-startup-image-640x1096.png\"&gt;<br>\n&lt;!-- iPad portrait --&gt;<br>\n&lt;link href=\"apple-touch-startup-image-768x1004.png\" media=\"(device-width: 768px) and (orientation: portrait)\" rel=\"apple-touch-startup-image\" /&gt;<br>\n&lt;!-- iPad landscape --&gt;<br>\n&lt;link href=\"apple-touch-startup-image-748x1024.png\" media=\"(device-width: 768px) and (orientation: landscape)\" rel=\"apple-touch-startup-image\" /&gt;<br>\n&lt;!-- iPad Retina portrait --&gt;<br>\n&lt;link href=\"apple-touch-startup-image-1536x2008.png\" media=\"(device-width: 1536px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)\" rel=\"apple-touch-startup-image\" /&gt;<br>\n&lt;!-- iPad Retina landscape --&gt;<br>\n&lt;link href=\"apple-touch-startup-image-1496x2048.png\"media=\"(device-width: 1536px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)\"rel=\"apple-touch-startup-image\" /&gt;\n</blockquote>\n<br><h3>25、浏览器私有及其它meta\n</h3>\n<br>以下属性在项目中没有应用过，可以写一个demo测试以下！\n<br><blockquote>&lt;!-- QQ浏览器私有 --&gt;\n<br>&lt;!-- 全屏模式 --&gt;<br>\n&lt;meta name=\"x5-fullscreen\" content=\"true\"&gt;<br>\n&lt;!-- 强制竖屏 --&gt;<br>\n&lt;meta name=\"x5-orientation\" content=\"portrait\"&gt;<br>\n&lt;!-- 强制横屏 --&gt;<br>\n&lt;meta name=\"x5-orientation\" content=\"landscape\"&gt;<br>\n&lt;!-- 应用模式 --&gt;<br>\n&lt;meta name=\"x5-page-mode\" content=\"app\"&gt;\n<br>&lt;!-- UC浏览器私有 --&gt;\n<br>&lt;!-- 全屏模式 --&gt;<br>\n&lt;meta name=\"full-screen\" content=\"yes\"&gt;<br>\n&lt;!-- 强制竖屏 --&gt;<br>\n&lt;meta name=\"screen-orientation\" content=\"portrait\"&gt;<br>\n&lt;!-- 强制横屏 --&gt;<br>\n&lt;meta name=\"screen-orientation\" content=\"landscape\"&gt;<br>\n&lt;!-- 应用模式 --&gt;<br>\n&lt;meta name=\"browsermode\" content=\"application\"&gt;\n<br>其它,针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓<br>\n&lt;meta name=\"HandheldFriendly\" content=\"true\"&gt;\n<br>微软的老式浏览器<br>\n&lt;meta name=\"MobileOptimized\" content=\"320\"&gt;\n<br>windows phone 点击无高光<br>\n&lt;meta name=\"msapplication-tap-highlight\" content=\"no\"&gt;\n</blockquote>\n\n\n\n\n\n\n<br><h3>26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好</h3>问题是这样的，用input search做模糊搜索的时候，在键盘里面输入关键词，会通过ajax后台查询，然后返回数据，然后再对返回的数据进行关键词标红。\n<br>用input监听键盘keyup事件，在安卓手机浏览器中是可以的，但是在ios手机浏览器中变红很慢，用输入法输入之后，并未立刻相应keyup事件，只有在通过删除之后才能相应！\n<br>\n<br>解决办法：\n<br>可以用html5的oninput事件去代替keyup\n<br>\n<br><blockquote>&lt;input type=\"text\" id=\"testInput\"&gt;<br>\n&lt;script type=\"text/javascript\"&gt;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;document.getElementById('testInput').addEventListener('input', function(e){<br>\n        &nbsp;&nbsp;&nbsp;&nbsp;var value = e.target.value;<br>\n    });<br>\n&lt;/script&gt;\n</blockquote>\n<br>然后就达到类似keyup的效果！\n<br>\n<br><h3>27、h5网站input 设置为type=number的问题\n</h3>\n<br>h5网页input 的type设置为number一般会产生三个问题，一个问题是maxlength属性不好用了。另外一个是form提交的时候，默认给取整了。三是部分安卓手机出现样式问题。\n<br>\n<br>问题一解决，我目前用的是js。如下\n<br>\n<br><blockquote>&lt;input type=\"number\" oninput=\"checkTextLength(this ,10)\"&gt;<br>\nfunction checkTextLength(obj, length) {<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;if(obj.value.length &gt; length)  {<br>    \n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.value = obj.value.substr(0, length);<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;}<br>\n}\n</blockquote>\n<br>问题二，是因为form提交默认做了表单验证，step默认是1,要设置step属性，假如保留2位小数，写法如下：\n<br>\n<br><blockquote>&lt;input type=\"number\" step=\"0.01\" /&gt;\n</blockquote>\n<br>关于step，我在这里做简单的介绍，input 中type=number，一般会自动生成一个上下箭头，点击上箭头默认增加一个step，点击下箭头默认会减少一个step。number中默认step是1。也就是step=0.01,可以允许输入2位小数，并且点击上下箭头分别增加0.01和减少0.01。\n<br>\n<br>假如step和min一起使用，那么数值必须在min和max之间。\n<br>\n<br>看下面的例子：<br><blockquote>&lt;input type=\"number\" step=\"3.1\" min=\"1\" /&gt;</blockquote>输入框可以输入哪些数字？<br>首先，最小值是1，那么可以输入1.0，第二个是可以输入（1+3.1）那就是4.1,以此类推，每次点击上下箭头都会增加或者减少3.1，输入其他数字无效。这就是step的简单介绍。\n<br>\n<br>问题三，去除input默认样式\n<br>\n<br><blockquote>input[type=number] {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;moz-appearance:textfield;<br>\n}<br>\ninput[type=number]::-webkit-inner-spin-button,<br>\ninput[type=number]::-webkit-outer-spin-button {<br>\n &nbsp;&nbsp;&nbsp;&nbsp;-webkit-appearance: none;<br>\n &nbsp;&nbsp;&nbsp;&nbsp;margin: 0;<br>\n}\n</blockquote>\n<br><h3>28、ios 设置input 按钮样式会被默认样式覆盖\n</h3>\n<br>解决方式如下：\n<br>\n<br><blockquote>input,<br>\ntextarea {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;border: 0;<br>\n    -&nbsp;&nbsp;&nbsp;&nbsp;webkit-appearance: none;<br>\n}\n</blockquote>\n<br>设置默认样式为none\n<br><br><h3>29、IOS键盘字母输入，默认首字母大写</h3>解决方案，设置如下属性<br><blockquote>&lt;input type=\"text\" autocapitalize=\"off\" /&gt;\n</blockquote>\n<br><h3>30、select 下拉选择设置右对齐</h3>设置如下：<br><blockquote>select option {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;direction: rtl;<br>\n}\n</blockquote>\n<br><h3>31、通过transform进行skew变形，rotate旋转会造成出现锯齿现象\n</h3>\n可以设置如下：\n<br>\n<br><blockquote>-webkit-transform: rotate(-4deg) skew(10deg) translateZ(0);<br>\ntransform: rotate(-4deg) skew(10deg) translateZ(0);<br>\noutline: 1px solid rgba(255,255,255,0)\n</blockquote>\n<br><h3>32、移动端点击300ms延迟\n</h3>\n<br>300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。\n<br><blockquote>推荐两个js，一个是fastclick，一个是tap.js\n</blockquote>关于300ms延迟，具体请看：http://thx.github.io/mobile/300ms-click-delay/\n<br>\n<br><h3>33、移动端点透问题</h3>案例如下：\n<br>\n<br><blockquote>&lt;div id=\"haorooms\"&gt;点头事件测试&lt;/div&gt;<br>\n&lt;a href=\"#\"&gt;www.xxx.com&lt;/a&gt;\n</blockquote>\n<br>div是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：\n<br>\n<br><blockquote>$('#haorooms').on('tap',function(){<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;$('#haorooms').hide();<br>\n});\n</blockquote>\n<br>我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。\n<br>\n<br>原因：\n<br>\n<br>touchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。\n<br>\n<br>解决：\n<br>（1）尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。\n<br>（2）用fastclick，https://github.com/ftlabs/fastclick\n<br>（3）用preventDefault阻止a标签的click\n<br>（4）延迟一定的时间(300ms+)来处理事件 （不推荐）\n<br>（5）以上一般都能解决，实在不行就换成click事件。\n<br>\n<br>下面介绍一下touchend事件，如下：\n<br>\n<br><blockquote>$(\"#haorooms\").on(\"touchend\", function (event) {<br>\n&nbsp; &nbsp; event.preventDefault();<br>\n});\n</blockquote>\n<br><h3>34、消除 IE10 里面的那个叉号</h3><blockquote>input:-ms-clear{display:none;}\n</blockquote>\n<br><h3>35、关于 iOS 与 OS X 端字体的优化(横竖屏会出现字体加粗不一致等)\n</h3>\n<br>iOS 浏览器横屏时会重置字体大小，设置 text-size-adjust 为 none 可以解决 iOS 上的问题，但桌面版 Safari 的字体缩放功能会失效，因此最佳方案是将 text-size-adjust 为 100% 。\n<br>\n<br><blockquote>-webkit-text-size-adjust: 100%;<br>\n-ms-text-size-adjust: 100%;<br>\ntext-size-adjust: 100%;\n</blockquote>\n<br><h3>36、关于 iOS 系统中，中文输入法输入英文时，字母之间可能会出现一个六分之一空格</h3>可以通过正则去掉<br><blockquote>this.value = this.value.replace(/\\u2006/g, '');\n</blockquote>\n<br><h3>37、移动端 HTML5 audio autoplay 失效问题\n</h3>\n<br>这个不是 BUG，由于自动播放网页中的音频或视频，会给用户带来一些困扰或者不必要的流量消耗，所以苹果系统和安卓系统通常都会禁止自动播放和使用 JS 的触发播放，必须由用户来触发才可以播放。\n<br>\n<br>解决方法思路：先通过用户 touchstart 触碰，触发播放并暂停（音频开始加载，后面用 JS 再操作就没问题了）。\n<br>\n<br>解决代码：\n<br>\n<br><blockquote>document.addEventListener('touchstart', function () {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;document.getElementsByTagName('audio')[0].play();<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;document.getElementsByTagName('audio')[0].pause();<br>\n});\n</blockquote>\n<br><h3>38、移动端 HTML5 input date 不支持 placeholder 问题</h3>这个我感觉没有什么好的解决方案，用如下方法\n<br><blockquote>&lt;input placeholder=\"Date\" class=\"textbox-n\" type=\"text\" onfocus=\"(this.type='date')\"  id=\"date\"&gt;</blockquote>有的浏览器可能要点击两遍！\n<br>\n<br><h3>39、部分机型存在type为search的input，自带close按钮样式修改方法</h3>有些机型的搜索input控件会自带close按钮（一个伪元素），而通常为了兼容所有浏览器，我们会自己实现一个，此时去掉原生close按钮的方法为<br><blockquote>#Search::-webkit-search-cancel-button{<br>\n&nbsp; &nbsp; display: none;<br>\n}</blockquote>如果想使用原生close按钮，又想使其符合设计风格，可以对这个伪元素的样式进行修改。\n<br>\n<br><h3>40、唤起select的option展开\n</h3>zepto方式:\n<br><blockquote>$(sltElement).trrgger(\"mousedown\");\n</blockquote>\n原生js方式:\n<br>\n<br><blockquote>function showDropdown(sltElement) {<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;var event;<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;event = document.createEvent('MouseEvents');<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;event.initMouseEvent('mousedown', true, true, window);<br>\n    &nbsp;&nbsp;&nbsp;&nbsp;sltElement.dispatchEvent(event);<br>\n};</blockquote></p><p><br></p>"}}