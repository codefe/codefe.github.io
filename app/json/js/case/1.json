{"sta":1,"data":{"subTitle":"原生js模拟抖音滑动效果","content":"<p>html</p><pre>&lt;div id=\"box\"&gt;\n    &lt;div class=\"childbox\"&gt;\n        &lt;div class=\"child1\"&gt;\n            &lt;div class=\"listview\" type=\"附近\"&gt;\n\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"child2\"&gt;\n            &lt;div class=\"listview\" type=\"关注\"&gt;\n\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div class=\"child3\"&gt;\n            &lt;div class=\"listview\" type=\"推荐\"&gt;\n\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=\"nav_box\"&gt;\n        &lt;div&gt;附近&lt;/div&gt;\n        &lt;div&gt;关注&lt;/div&gt;\n        &lt;div class=\"active_nav\"&gt;推荐&lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</pre><p>css</p><pre>* {\n\tmargin:0;\n\tpadding:0;\n\t-moz-user-select:none;\n\t/*火狐*/\n    -webkit-user-select:none;\n\t/*webkit浏览器*/\n    -ms-user-select:none;\n\t/*IE10*/\n    -khtml-user-select:none;\n\t/*早期浏览器*/\n    user-select:none;\n}\n#box {\n\twidth:350px;\n\theight:500px;\n\tmargin:30px auto;\n\tborder-radius:5px;\n\tbox-shadow:0px 0px 27px -3px red;\n\t-webkit-border-radius:5px;\n\t-moz-border-radius:5px;\n\t-ms-border-radius:5px;\n\t-o-border-radius:5px;\n\toverflow:hidden;\n\tposition:relative;\n\tbackground-color:#ccc;\n}\n.childbox {\n\twidth:300%;\n\theight:100%;\n\tdisplay:flex;\n\tposition:absolute;\n\ttop:0;\n\tleft:0;\n}\n.childbox&gt;div {\n\tflex:1;\n\theight:100%;\n}\n.child1 {\n\tbackground-color:salmon;\n}\n.child2 {\n\tbackground-color:greenyellow;\n}\n.child3 {\n\tbackground-color:blueviolet;\n}\n.nav_box {\n\tposition:absolute;\n\twidth:100%;\n\ttext-align:center;\n\tline-height:50px;\n}\n.nav_box div {\n\tdisplay:inline-block;\n\tcolor:#fff;\n\tmargin:0 5px;\n\tposition:relative;\n}\n.active_nav::before {\n\tcontent:'';\n\tposition:absolute;\n\tbackground-color:#fff;\n\tleft:2px;\n\tbottom:7px;\n\twidth:27px;\n\theight:2px;\n}\n.childbox&gt;div {\n\tposition:relative;\n}\n.childbox&gt;div .listview {\n\twidth:100%;\n\tposition:absolute;\n}\n.view_child {\n\ttext-align:center;\n\tline-height:200px;\n\tcolor:#fff;\n\tfont-size:25px;\n}</pre><p>js</p><pre>//获取动画盒子\nlet childbox = document.querySelector('.childbox')\n//获取屏幕的高度\nlet viewheight = document.querySelector('#box').offsetHeight\n//获取所有的导航\nlet childnav = document.querySelector('.nav_box').querySelectorAll('div')\n//获取视频类型盒子\nlet viewlist = document.querySelectorAll('.listview')\n//导航索引（0,附近,1,关注，2推荐）\nlet indextype = 2\n//视频播放的索引(0:附近,1:关注,2:推荐)[下标,视频的数量,页码]\nlet view_index = {\n    0: [0, 0, 1],\n    1: [0, 0, 1],\n    2: [0, 0, 1]\n}\n//初始化导航\nset_nav_active(indextype)\n//导航选中状态\nfunction set_nav_active(index) {\n    //清除选中状态\n    for (let i = 0; i &lt; childnav.length; i++) {\n        childnav[i].className = ''\n    }\n    //给选中的加上值\n    childnav[index].className = 'active_nav'\n    //改变盒子位置\n    childbox.style.left = index * -100 + '%'\n}\n//给导航加点击事件\nfor (let i = 0; i &lt; childnav.length; i++) {\n    childnav[i].onclick = function() {\n        //加上过渡动画\n        childbox.style.transition = 'all 0.5s'\n        //改变点击导航状态\n        indextype = i\n        set_nav_active(indextype)\n    }\n}\n//左右滑动\nlet box = document.querySelector('#box')\n//动画是否结束的状态\nlet transition_status = true\n//按下\nbox.onmousedown = function(event) {\n    //判断是否可以执行动画\n    if (!transition_status) {\n        return\n    }\n    //获取坐标值\n    let startY = event.clientY\n    let startX = event.clientX\n    //是否要进判断\n    let t_l_type = true\n    //获取上下还是左右滑动的状态(0:不动;1:左右;2:上下)\n    let move_type = 0\n    //记录动画行为(1:下拉,2:上下，3：左右，0：不动)\n    let transition_type = 0\n    // 左右start\n    //清除盒子动画\n    childbox.style.transition = ''\n    //获取盒子left位置\n    let startleft = childbox.offsetLeft\n    //是否切换滑动\n    let type = {\n        a: false,\n        b: ''\n    }\n    //左右over\n    //上下滑动\n    //滑动的初始化位置\n    let startTop = viewlist[indextype].offsetTop\n    //判断是否切换\n    let top_type_view = {\n        a: false, //是否要切换\n        b: '', //判断向上还是向下\n    }\n    console.log(startTop)\n    //上下over\n    //下拉刷新\n    //清除动画\n    viewlist[indextype].style.transition = '';\n    //记录下拉距离\n    let b_top = 0\n    //下拉over\n    document.onmousemove = function(event) {\n        //获取移动时坐标\n        let moveY = event.clientY\n        let moveX = event.clientX\n        //加是否要判断的开关\n        if (t_l_type) {\n            //判断是左右滑动还是上下\n            if (Math.abs(moveY - startY) &gt; 5) {\n                //停止下次判断\n                t_l_type = false\n                //记录滑动状态\n                move_type = 2\n            }\n            if (Math.abs(moveX - startX) &gt; 5) {\n                //停止下次判断\n                t_l_type = false\n                //记录滑动状态\n                move_type = 1\n            }\n        }\n        //判断滑动代码\n        if (move_type == 2) {\n            //下拉需要两个条件 1 下拉的 2 上没有东西了\n            if (view_index[indextype][0] == 0 &amp;&amp; moveY - startY &gt; 0) {\n                console.log('下拉')\n                //改变动画状态\n                transition_type = 1\n                //计算下拉距离\n                b_top = moveY - startY\n                //拉动视图盒子\n                viewlist[indextype].style.top = b_top + 'px'\n                return\n            }\n            //执行上下滑动\n            //下拉的时候拒绝上下滑动\n            if (transition_type != 1) {\n                //改变动画状态\n                transition_type = 2\n                //移动的位置\n                let moveY = event.clientY\n                //计算上下移动的距离\n                let num = moveY - startY\n                //改变拖拽元素的top值\n                viewlist[indextype].style.top = startTop + num + 'px'\n                //判断是否要切换\n                if (num &gt; 70) {\n                    top_type_view.a = true\n                    top_type_view.b = '上'\n                } else if (num &lt; -70) {\n                    top_type_view.a = true\n                    top_type_view.b = '下'\n                }\n            }\n        } else if (move_type == 1) {\n            // 左右的代码\n            //改变动画状态\n            transition_type = 3\n            //移动的位置\n            let moveX = event.clientX\n            //移动的距离\n            let num = moveX - startX\n            //盒子需要的left值\n            childbox.style.left = startleft + num + 'px'\n            //滑动的方向\n            if (moveX &gt; startX) {\n                if (num &gt; 100) {\n                    type.a = true\n                    type.b = '右'\n                }\n            } else if (moveX &lt; startX) {\n                if (num &lt; -100) {\n                    type.a = true\n                    type.b = '左'\n                }\n            }\n            // over\n        }\n\n    }\n    //抬起\n    window.onmouseup = function() {\n        //清除滑动事件\n        document.onmousemove = ''\n        //判断执行动画\n        if (transition_type == 1) {\n            //下拉\n            //加上动画\n            viewlist[indextype].style.transition = 'all .5s';\n            //判断拉动的距离判断是否刷新\n            if (b_top &gt; 70) {\n                //执行动画\n                transition_status = false\n                viewlist[indextype].style.top = '70px'\n                setTimeout(function() {\n                    viewlist[indextype].style.top = '0px'\n                    //从第一页开始\n                    view_index[indextype][2] = 1\n                    autoview(indextype)\n                    //还原动画\n                    setTimeout(() =&gt; {\n                        transition_status = true\n                    }, 500);\n                }, 2000)\n            } else {\n                viewlist[indextype].style.top = '0px'\n            }\n        } else if (transition_type == 2) {\n            //上下\n            //加上过渡动画\n            viewlist[indextype].style.transition = 'all .5s';\n            //判断执行的动画\n            if (top_type_view.a) {\n                //判断上下切换\n                if (top_type_view.b == '上') {\n                    //下标改变\n                    view_index[indextype][0]--\n                        if (view_index[indextype][0] &lt;= -1) {\n                            view_index[indextype][0] = 0\n                        }\n                    viewlist[indextype].style.top = view_index[indextype][0] * -viewheight + 'px'\n                    console.log('上')\n                } else if (top_type_view.b == '下') {\n                    view_index[indextype][0]++\n                        if (view_index[indextype][0] &gt;= view_index[indextype][1] - 2) {\n                            //生成新的视频\n                            autoview(indextype)\n                        }\n                    viewlist[indextype].style.top = view_index[indextype][0] * -viewheight + 'px'\n                }\n            } else {\n                //还原现有状态\n                viewlist[indextype].style.top = startTop + 'px'\n            }\n        } else if (transition_type == 3) {\n            //左右\n            //执行判断是否切换\n            if (type.a) {\n                if (type.b === '左') {\n                    indextype++\n                    if (indextype &gt;= 3) {\n                        indextype = 2\n                    }\n                } else if (type.b === '右') {\n                    indextype--\n                    if (indextype &lt;= -1) {\n                        indextype = 0\n                    }\n                }\n            }\n            //加上过渡\n            childbox.style.transition = 'all 0.5s'\n            //调取切换函数\n            set_nav_active(indextype)\n        }\n        //还原下次判断\n        t_l_type = true\n        //还原下次状态\n        move_type = 0\n        //还原动画状态\n        transition_type = 0\n    }\n}\n\n\n//随机背景颜色\nfunction autocolor() {\n    return `rgb(${Math.floor(Math.random()*255)},${Math.floor(Math.random()*255)},${Math.floor(Math.random()*255)})`\n}\n//默认生成视频列表\nfor (let i = 0; i &lt; viewlist.length; i++) {\n    autoview(i)\n}\n//生成视频列表\nfunction autoview(index) {\n    //获取视频类型\n    let type = viewlist[index].getAttribute('type')\n    //更改视频数量\n    if (view_index[index][2] == 1) {\n        //清除现有内容\n        viewlist[indextype].innerHTML = ''\n        //记录视频数量\n        view_index[index][1] = 10\n    } else {\n        //累加视频数量\n        view_index[index][1] += 10\n    }\n    //index 插入的下标\n    for (let i = 0; i &lt; 10; i++) {\n        //创建dom\n        let div = document.createElement('div')\n        //命名\n        div.className = 'view_child'\n        //内容\n        div.innerHTML = `\n            &lt;div&gt;${type}:${(view_index[index][2]-1)*10+i+1}&lt;/div&gt;\n            &lt;hr&gt;&lt;/hr&gt;\n            &lt;div&gt;页码：${view_index[index][2]}&lt;/div&gt;\n        `\n        //设置背景颜色\n        div.style.backgroundColor = autocolor()\n        //设置盒子高度\n        div.style.height = viewheight + 'px'\n        //追加\n        viewlist[index].appendChild(div)\n    }\n    //更改下次页码\n    view_index[index][2]++\n        console.log(view_index)\n}\n\n//双击置顶\nlet nav_box = document.querySelector('.nav_box')\nnav_box.ondblclick = function() {\n    viewlist[indextype].style.transition = 'all .5s'\n    viewlist[indextype].style.top = '0px'\n    view_index[indextype][0] = 0\n}</pre><p><br></p>"}}