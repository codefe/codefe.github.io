{"sta":1,"data":{"subTitle":"flat将多维数组展平成一维数组","content":"<p><code>flat()</code>&nbsp;方法可以将多维数组展平成一维数组<br></p><pre><code>const arr = ['a', 'b', ['c', 'd']];\nconst flattened = arr.flat();\n\nconsole.log(flattened);    // =&gt; [\"a\", \"b\", \"c\", \"d\"]</code></pre><p>以前，我们经常使用reduce()或concat()来展平多维数组：</p><pre><code>const arr = ['a', 'b', ['c', 'd']];\nconst flattend = [].concat.apply([], arr);\n\n// or\n// const flattened =  [].concat(...arr);\n\nconsole.log(flattened);    // =&gt; [\"a\", \"b\", \"c\", \"d\"]</code></pre><p>请注意，如果提供的数组中有空值，它们会被丢弃：</p><pre><code>const arr = ['a', , , 'b', ['c', 'd']];\nconst flattened = arr.flat();\n\nconsole.log(flattened);    // =&gt; [\"a\", \"b\", \"c\", \"d\"]</code></pre><p>flat() 还接受一个可选参数，该参数指定嵌套数组应该被展平的级别数。 如果未提供参数，则将使用默认值1：</p><pre><code>const arr = [10, [20, [30]]];\n\nconsole.log(arr.flat());     // =&gt; [10, 20, [30]]\nconsole.log(arr.flat(1));    // =&gt; [10, 20, [30]]\nconsole.log(arr.flat(2));    // =&gt; [10, 20, 30]</code></pre><p><br></p>"}}