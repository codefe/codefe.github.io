{"sta":1,"data":{"subTitle":"Proxy","content":"<p>Proxy 对象用于创建一个对象的代理，从而实现基本操作的拦截和自定义（如属性查找、赋值、枚举、函数调用等）。</p><p><h3>术语\n</h3><h4>handler\n</h4>包含捕捉器（trap）的占位符对象，可译为处理器对象。\n<br><h4>traps\n</h4>提供属性访问的方法。这类似于操作系统中捕获器的概念。\n<br><h4>target\n</h4>被 Proxy 代理虚拟化的对象。它常被作为代理的存储后端。根据目标验证关于对象不可扩展性或不可配置属性的不变量（保持不变的语义）。\n<br><h3>语法\n</h3>const p = new Proxy(target, handler)\n<br><h3>参数\n</h3>target\n<br>要使用 Proxy 包装的目标对象（可以是任何类型的对象，包括原生数组，函数，甚至另一个代理）。\n<br>handler\n<br>一个通常以函数作为属性的对象，各属性中的函数分别定义了在执行各种操作时代理 p 的行为。</p>"}}