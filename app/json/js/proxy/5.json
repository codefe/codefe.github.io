{"sta":1,"data":{"subTitle":"验证","content":"<p>通过代理，你可以轻松地验证向一个对象的传值。下面的代码借此展示了 set handler 的作用。</p><pre><code>let validator = {\n  set: function(obj, prop, value) {\n    if (prop === 'age') {\n      if (!Number.isInteger(value)) {\n        throw new TypeError('The age is not an integer');\n      }\n      if (value &gt; 200) {\n        throw new RangeError('The age seems invalid');\n      }\n    }\n\n    // The default behavior to store the value\n    obj[prop] = value;\n\n    // 表示成功\n    return true;\n  }\n};\n\nlet person = new Proxy({}, validator);\n\nperson.age = 100;\n\nconsole.log(person.age);\n// 100\n\nperson.age = 'young';\n// 抛出异常: Uncaught TypeError: The age is not an integer\n\nperson.age = 300;\n// 抛出异常: Uncaught RangeError: The age seems invalid</code></pre><p><br></p>"}}