{"sta":1,"data":{"subTitle":"操作 DOM 节点","content":"<p>有时，我们可能需要互换两个不同的元素的属性或类名。下面的代码以此为目标，展示了 set handler 的使用场景。</p><pre><code>let view = new Proxy({\n  selected: null\n}, {\n  set: function(obj, prop, newval) {\n    let oldval = obj[prop];\n\n    if (prop === 'selected') {\n      if (oldval) {\n        oldval.setAttribute('aria-selected', 'false');\n      }\n      if (newval) {\n        newval.setAttribute('aria-selected', 'true');\n      }\n    }\n\n    // 默认行为是存储被传入 setter 函数的属性值\n    obj[prop] = newval;\n\n    // 表示操作成功\n    return true;\n  }\n});\n\nlet i1 = view.selected = document.getElementById('item-1');\nconsole.log(i1.getAttribute('aria-selected')); // 'true'\n\nlet i2 = view.selected = document.getElementById('item-2');\nconsole.log(i1.getAttribute('aria-selected')); // 'false'\nconsole.log(i2.getAttribute('aria-selected')); // 'true'</code></pre><p><br></p>"}}