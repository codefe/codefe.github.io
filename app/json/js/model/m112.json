{"sta":1,"data":{"subTitle":"实际场景-数据上报","content":"<p>自定义事件的数据上报一般都依赖于点击事件，那么这个点击事件既要承担原本的功能，又要承担数据上报的功能。<br></p><p><h3>1 普通做法\n</h3>先上代码：\n<br>\n</p><pre>const loginBtnClick = () =&gt; {\n    console.log('去登录'）\n    console.log('去上报')\n}</pre><p>好像没毛病，这样的代码中项目中随处可见，逃避(面向过程编程)虽可耻但有用。<br></p><p>&nbsp;\n<br><h3>2 装饰器模式做法\n</h3>可以通过装饰器模式来重构上述代码，将职责划分更细，代码松耦合，可复用性更高。&nbsp;<br></p><pre>const after = function (fn, afterFn) {\n    return function () {\n        const __ = fn.apply(this, arguments)\n        afterFn.apply(this, arguments)\n        return __\n    }\n}\n\nconst showLogin = function () {\n    console.log('去登录')\n}\n\nconst log = function () {\n    console.log('去上报')\n}\n\nconst loginBtnClick = after(showLogin, log)\n\nloginBtnClick()</pre><p><br></p><p><br></p>"}}