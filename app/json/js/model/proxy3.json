{"sta":1,"data":{"subTitle":"模拟场景-合并HTTP请求","content":"<p>假设我们要实现一个同步文件的功能，通过复选框，当复选框选中的时候，将该复选框对应的id传给服务器，告诉服务器需要同步 id 对应的文件。</p><p>思考一下，会发现，如果每选中一个复选框，就请求一次接口，假设 1s 内选中了 10 个复选框，那么就要发送 10 次请求。\n<br>\n<br><h3>1 虚拟代理\n</h3>可以通过虚拟代理来优化上述做法，新增一个代理，帮助复选框发起同步文件的请求，收集在这 1s 内的请求，1s 后再一起把这些文件 id 发送到服务器。\n<br>\n<br>代码如下：&nbsp;<br></p><pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;meta charset=\"utf-8\" /&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  a &lt;input type=\"checkbox\" value=\"a\" /&gt;\n  b &lt;input type=\"checkbox\" value=\"b\" /&gt;\n  c &lt;input type=\"checkbox\" value=\"c\" /&gt;\n  d &lt;input type=\"checkbox\" value=\"d\" /&gt;\n    &lt;script type=\"text/javascript\" src=\"index.js\"&gt;\n    &lt;/script&gt;\n&lt;/body&gt; \n&lt;/html&gt;</pre><pre>const synchronousFile = cache =&gt; {\n  console.log('开始同步文件，id为：'+ cache.join('/'))\n}\n\nconst proxySynchronousFile = (() =&gt; {\n  const cache = []\n\n  let timer\n\n  return id =&gt; {\n    console.log(id)\n    cache.push(id)\n\n    if (timer) {\n      return\n    }\n\n    timer = setTimeout(() =&gt; {\n      synchronousFile(cache)\n      clearTimeout(timer)\n      timer = null\n      cache.length = 0\n    }, 2000)\n  }\n})()\n\nconst checkbox = document.getElementsByTagName('input')\n\nArray.from(checkbox).forEach(i =&gt; {\n  console.log(i)\n  i.onclick = () =&gt; {\n    if (i.checked) {\n      proxySynchronousFile(i.value)\n    }\n  }\n})</pre><p><br></p>"}}