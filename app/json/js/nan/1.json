{"sta":1,"data":{"subTitle":"NaN","content":"<p>全局属性 NaN 的值表示不是一个数字（Not-A-Number）。</p><p>NaN 属性的初始值就是 NaN，和 Number.NaN 的值一样。在现代浏览器中（ES5中）， NaN 属性是一个不可配置（non-configurable），不可写（non-writable）的属性。但在ES3中，这个属性的值是可以被更改的，但是也应该避免覆盖。\n<br>\n<br>编码中很少直接使用到 NaN。通常都是在计算失败时，作为 Math 的某个方法的返回值出现的（例如：Math.sqrt(-1)）或者尝试将一个字符串解析成数字但失败了的时候（例如：parseInt(\"blabla\")）。\n<br>\n<br><h3>判断一个值是否是NaN\n</h3>NaN如果通过 == 、 != 、 === 、以及 !==与其他任何值比较都将不相等 -- 包括与其他 NAN值进行比较。必须使用 Number.isNaN() 或 isNaN() 函数。在执行自比较之中：NaN，也只有NaN，比较之中不等于它自己。</p><pre><code>NaN === NaN;        // false\nNumber.NaN === NaN; // false\nisNaN(NaN);         // true\nisNaN(Number.NaN);  // true\n\nfunction valueIsNaN(v) { return v !== v; }\nvalueIsNaN(1);          // false\nvalueIsNaN(NaN);        // true\nvalueIsNaN(Number.NaN); // true</code></pre><p>但是，请注意isNaN（）和Number.isNaN（）之间的区别：如果当前值是NaN，或者将其强制转换为数字后将是NaN，则前者将返回true。而后者仅当值当前为NaN时才为true：</p><pre><code>isNaN('hello world');        // true\nNumber.isNaN('hello world'); // false</code></pre><p><br></p>"}}