{"sta":1,"data":{"subTitle":"Reflect.deleteProperty","content":"<p>静态方法 Reflect.deleteProperty() 允许用于删除属性。它很像 delete operator ，但它是一个函数。&nbsp;</p><h3>语法&nbsp;</h3><p>Reflect.deleteProperty(target, propertyKey)&nbsp;</p><h3>参数&nbsp;</h3><p>target\n删除属性的目标对象。&nbsp;</p><p>propertyKey\n需要删除的属性的名称。&nbsp;</p><h3>返回值&nbsp;</h3><p>Boolean 值表明该属性是否被成功删除。&nbsp;</p><p>Reflect.deleteProperty 允许你删除一个对象上的属性。返回一个 Boolean 值表示该属性是否被成功删除。它几乎与非严格的 delete operator 相同。&nbsp;</p><pre><code>var obj = { x: 1, y: 2 };\nReflect.deleteProperty(obj, \"x\"); // true\nobj; // { y: 2 }\n\nvar arr = [1, 2, 3, 4, 5];\nReflect.deleteProperty(arr, \"3\"); // true\narr; // [1, 2, 3, , 5]\n\n// 如果属性不存在，返回 true\nReflect.deleteProperty({}, \"foo\"); // true\n\n// 如果属性不可配置，返回 false\nReflect.deleteProperty(Object.freeze({foo: 1}), \"foo\"); // false</code></pre><p><br></p><p><br></p>"}}