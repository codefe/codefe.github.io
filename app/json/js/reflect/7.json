{"sta":1,"data":{"subTitle":"Reflect.defineProperty","content":"<p>静态方法 Reflect.defineProperty() 基本等同于 Object.defineProperty() 方法，唯一不同是返回 Boolean 值。&nbsp;</p><h3>语法&nbsp;</h3><blockquote>Reflect.defineProperty(target, propertyKey, attributes)&nbsp;</blockquote><h3>参数</h3><p>&nbsp;target\n目标对象。&nbsp;</p><p>propertyKey\n要定义或修改的属性的名称。&nbsp;</p><p>attributes\n要定义或修改的属性的描述。&nbsp;</p><h3>&nbsp;返回值&nbsp;</h3><p>&nbsp;Boolean 值指示了属性是否被成功定义。</p><p><br></p><p>&nbsp;Reflect.defineProperty 方法允许精确添加或修改对象上的属性。</p><pre><code>let obj = {}\nReflect.defineProperty(obj, 'x', {value: 7})  // true\nobj.x                                         // 7</code></pre><p><br></p><p>&nbsp;检查属性是否被成功定义&nbsp;</p><pre><code>if (Reflect.defineProperty(target, property, attributes)) {\n  // 成功\n} else {\n  // 失败\n}</code></pre><p><br></p>"}}