{"sta":1,"data":{"subTitle":"Reflect.isExtensible","content":"<p>静态方法 Reflect.isExtensible() 判断一个对象是否可扩展 （即是否能够添加新的属性）。与它 Object.isExtensible() 方法相似，但有一些不同</p><p><h3>语法\n</h3>Reflect.isExtensible(target)\n<br><h3>参数\n</h3>target\n<br>检查是否可扩展的目标对象。\n<br><h3>返回值\n</h3>返回一个 Boolean 值表明该对象是否可扩展。\n<br>\n<br><h3>异常\n</h3>抛出一个 TypeError，如果对象不是 Object。\n<br>\n<br><h3>描述\n</h3>Reflect.isExtensible 判断一个对象是否可扩展 （即是否能够添加新的属性）。它与 Object.isExtensible() 方法一样。\n<br>\n<br><h3>示例</h3></p><pre><code>// New objects are extensible.\nvar empty = {};\nReflect.isExtensible(empty); // === true\n\n// ...but that can be changed.\nReflect.preventExtensions(empty);\nReflect.isExtensible(empty); // === false\n\n// Sealed objects are by definition non-extensible.\nvar sealed = Object.seal({});\nReflect.isExtensible(sealed); // === false\n\n// Frozen objects are also by definition non-extensible.\nvar frozen = Object.freeze({});\nReflect.isExtensible(frozen); // === false</code></pre><p><h3>与 Object.isExtensible() 的不同点\n</h3>如果该方法的第一个参数不是一个对象（原始值），那么将造成一个 TypeError 异常。对于 Object.isExtensible()，非对象的第一个参数会被强制转换为一个对象。</p><pre><code>Reflect.isExtensible(1);\n// TypeError: 1 is not an object\n\nObject.isExtensible(1);\n// false</code></pre><p><br></p><p><br></p><p><br></p>"}}