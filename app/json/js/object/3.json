{"sta":1,"data":{"subTitle":"Object.defineProperties","content":"<p>Object.defineProperties() 方法直接在一个对象上定义新的属性或修改现有属性，并返回该对象。</p><p><h3>语法\n</h3><blockquote>Object.defineProperties(obj, props)\n</blockquote><h3>参数\n</h3>obj\n<br>在其上定义或修改属性的对象。\n<br>props\n<br>要定义其可枚举属性或修改的属性描述符的对象。对象中存在的属性描述符主要有两种：数据描述符和访问器描述符（更多详情，请参阅Object.defineProperty()）。描述符具有以下键：\n<br><h4>configurable\n</h4>true 只有该属性描述符的类型可以被改变并且该属性可以从对应对象中删除。\n<br>默认为 false\n<br><h4>enumerable\n</h4>true 只有在枚举相应对象上的属性时该属性显现。\n<br>默认为 false\n<br><h4>value\n</h4>与属性关联的值。可以是任何有效的JavaScript值（数字，对象，函数等）。\n<br>默认为 undefined.\n<br><h4>writable\n</h4>true只有与该属性相关联的值被assignment operator改变时。\n<br>默认为 false\n<br><h4>get\n</h4>作为该属性的 getter 函数，如果没有 getter 则为undefined。函数返回值将被用作属性的值。\n<br>默认为 undefined\n<br><h4>set\n</h4>作为属性的 setter 函数，如果没有 setter 则为undefined。函数将仅接受参数赋值给该属性的新值。\n<br>默认为 undefined\n<br><h3>返回值\n</h3>传递给函数的对象。\n<br>\n<br><h3>描述\n</h3>Object.defineProperties本质上定义了obj 对象上props的可枚举属性相对应的所有属性。\n<br>\n<br><h3>例子</h3></p><pre><code>var obj = {};\nObject.defineProperties(obj, {\n  'property1': {\n    value: true,\n    writable: true\n  },\n  'property2': {\n    value: 'Hello',\n    writable: false\n  }\n  // etc. etc.\n});</code></pre><p><br></p>"}}