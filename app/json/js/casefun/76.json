{"sta":1,"data":{"subTitle":"js浅拷贝与深拷贝","content":"<h3>1. 定义一个原对象</h3><pre>const obj = {\n    a: 'demo',\n    b: {\n        a: 'hi',\n        b: 11\n    },\n    c: [1,'jack','tom']\n}</pre><h3>2. 浅拷贝函数，遍历方式</h3><pre>function simpleClone(newObj){\n    var obj = {}\n    for(let i in newObj){\n        obj[i] = newObj[i]\n    }\n    return obj\n}\nlet objCopy = simpleClone(obj)</pre><h3>3. 浅拷贝 Object.create&nbsp;方式</h3><blockquote>let objCopy = Object.create(obj) //&nbsp;注意，它是<span style=\"background-color: rgb(255, 255, 255);\">拷贝到了 _proto_上了</span></blockquote><h3>4.&nbsp;深拷贝函数,遍历方式</h3><pre>function deepClone(newObj, endObj){\n    var obj = endObj || {}\n    for(let i in newObj){\n        if(typeof newObj[i] === 'object'){ // array || {}\n            obj[i] = newObj[i].constructor === Array ? [] : {}\n            deepClone(newObj[i],obj[i])\n        }else{\n            obj[i] = newObj[i]\n        }\n    }\n    return obj\n}\nlet objCopy = deepClone(obj)</pre><h3>5. 深拷贝JSON.parse与JSON.stringify</h3><blockquote><p>let objCopy = JSON.parse(JSON.stringify(obj))</p></blockquote><p><br></p>"}}