{"sta":1,"data":{"subTitle":"把一堆整数分成三份，确保每一份和尽量相等","content":"<pre><code>function f1 (arr,count){\n    //数组从大到小排序\n    arr.sort((a,b) =&gt; b - a);\n    //计算平均值\n    let avg = arr.reduce((a,b) =&gt; a + b) / count;\n    //从大到小求和，取最接近平均值的一组，放入二维数组\n    let resArr = [];\n    let current = 0;\n    for (let i = 0; i &lt; count-1; i++) {\n        if(current + arr[arr.length-1]/2 &lt; avg &amp;&amp; i){\n            arr.pop();\n            resArr[i-1].push(arr[arr.length-1]);\n        }\n        current = 0;\n        resArr[i] = [];\n        arr.forEach((item,index) =&gt; {\n            current += item;\n            arr.splice(index,1);\n            resArr[i].push(item);\n            if(current &gt; avg){\n                current -= item;\n                arr.splice(index,0,item);\n                resArr[i].pop();\n            }\n        })\n    }\n    resArr[count-1] = arr;\n    return resArr\n}\n//测试，第一个参数为数组，第二个为份数\nf1([11,42,23,4,5,6,4,5,6,11,23,42,56,78,90],3)</code></pre><p>瀑布流布局的思想</p><pre><code>function makeAlmostEqual (arr, part) {\n    let orderedArr = arr.sort((a,b) =&gt; b - a)\n    let res = Array(part).fill(void(0)).map(() =&gt; [])\n    orderedArr.forEach(value =&gt; {\n        let minArrIndex = getMinArrIndex(res)\n        res[minArrIndex].push(value)\n    })\n    return res\n}\n\nfunction getSum (arr) {\n    return arr.reduce((sum, v) =&gt; sum + v, 0)\n}\n\nfunction getMinArrIndex (arrs) {\n    let minArrIndex = 0\n    arrs.forEach((arr, index) =&gt; {\n        if (getSum(arrs[minArrIndex]) &gt; getSum(arrs[index])) {\n             minArrIndex = index\n       }\n    })\n    // console.log(arrs)\n    return minArrIndex\n}\n\nmakeAlmostEqual([1, 65, 4, 32, 95, 33, 9, 3], 3)</code></pre><p><br></p>"}}