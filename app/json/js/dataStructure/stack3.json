{"sta":1,"data":{"subTitle":"栈的应用,十进制转任意进制","content":"<p><strong>十进制转任意进制</strong></p><p><strong>要求：</strong>给定一个函数，输入目标数值和进制基数，输出对应的进制数（最大为16进制）。</p><p><em><strong>baseConverter(10, 2) ==&gt; 1010</strong></em>\n</p><p><em><strong>baseConverter(30, 16) ==&gt; 1E</strong></em></p><p></p><p><strong>分析：</strong>进制转换的本质——将目标值一次一次除以进制基数，得到的取整值为新目标值，记录下余数，直到目标值小于0，最后将余数逆序组合即可。利用栈，记录余数入栈，组合时出栈。</p><pre><code>// 进制转换\n\nfunction baseConverter(delNumber, base) {\n\n  const stack = new Stack();\n\n  let rem = null;\n\n  let ret = [];\n\n  // 十六进制中需要依次对应A~F\n\n  const digits = '0123456789ABCDEF';\n\n  while (delNumber &gt; 0) {\n\n    rem = Math.floor(delNumber % base);\n\n    stack.push(rem);\n\n    delNumber = Math.floor(delNumber / base);\n\n  }\n\n  while (!stack.isEmpty()) {\n\n    ret.push(digits[stack.pop()]);\n\n  }\n\n  return ret.join('');\n\n}\n\nconsole.log(baseConverter(100345, 2)); //输出11000011111111001\n\nconsole.log(baseConverter(100345, 8)); //输出303771\n\nconsole.log(baseConverter(100345, 16)); //输出187F9</code></pre><p><br></p><p><br></p>"}}