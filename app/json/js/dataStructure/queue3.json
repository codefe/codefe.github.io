{"sta":1,"data":{"subTitle":"队列的应用,约瑟夫环（普通模式）","content":"<p><strong>约瑟夫环（普通模式）</strong></p><p><strong>要求：</strong> 有一个数组 a[100]存放0~99；要求每隔两个数删掉一个数，到末尾时循环至开头继续进行，求最后一个被删掉的数。</p><p></p><p><strong>分析：</strong> 按数组创建队列，依次判断元素是否满足为指定位置的数，如果不是则 enqueue到尾部，否则忽略，当仅有一个元素时便输出。</p><pre>// 创建一个长度为100的数组\n\nconst arr_100 = Array.from({ length: 100 }, (_, i) =&gt; i*i);\n\nfunction delRing(list) {\n\n  const queue = new Queue();\n\n  list.forEach(e =&gt; { queue.enqueue(e); });\n\n  let index = 0;\n\n  while (queue.size() !== 1) {\n\n    const item = queue.dequeue();\n\n    index += 1;\n\n    if (index % 3 !== 0) {\n\n      queue.enqueue(item);\n\n    }\n\n  }\n\n  return queue.tail();\n\n}\n\nconsole.log(delRing(arr_100)); // 8100 此时index=297</pre><p><br></p>"}}